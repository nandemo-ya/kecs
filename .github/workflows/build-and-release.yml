name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test
    runs-on: [self-hosted, linux, medium]
    # Skip tests on tag pushes
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    defaults:
      run:
        working-directory: ./controlplane
    env:
      KECS_TEST_MODE: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'controlplane/go.mod'
          cache: true
      - name: Verify dependencies
        run: go mod verify
      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      - uses: k1LoW/octocov-action@v1

  build-and-push:
    name: Build and Push Docker image
    needs: [test]
    runs-on: [self-hosted, linux, medium]
    # Run on main branch pushes and tags, not on PRs
    # For tags, test job is skipped so we use always() to ensure this runs
    if: |
      always() && 
      github.event_name == 'push' && 
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) &&
      !contains(needs.test.result, 'failure')
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Git describe
        id: git_describe
        run: echo "GIT_DESCRIBE=$(git describe --tags --always)" >> $GITHUB_OUTPUT
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.git_describe.outputs.GIT_DESCRIBE }}
            type=raw,value=latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./controlplane
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}

  create-release:
    name: Create GitHub Release
    needs: build-and-push
    runs-on: ubuntu-latest
    # Only run on tag pushes
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
          generate_release_notes: true
          body: |
            ## Docker Image
            
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ```
            
            ## Installation
            
            ### Homebrew (macOS/Linux)
            ```bash
            brew tap nandemo-ya/kecs
            brew install kecs
            ```
            
            ### Direct Download
            Download the appropriate binary for your platform from the release assets.
            
            ## What's Changed
            
            Auto-generated release notes are below.
