{
  "family": "api-redis",
  "networkMode": "bridge",
  "requiresCompatibilities": ["EC2"],
  "cpu": "512",
  "memory": "1024",
  "containerDefinitions": [
    {
      "name": "api",
      "image": "python:3.9-alpine",
      "cpu": 256,
      "memory": 512,
      "essential": true,
      "command": [
        "sh",
        "-c",
        "pip install redis flask && echo 'from flask import Flask, jsonify\nimport redis\nimport os\nimport time\n\napp = Flask(__name__)\n\n# Connect to Redis\nredis_host = os.environ.get(\"REDIS_HOST\", \"localhost\")\nredis_port = int(os.environ.get(\"REDIS_PORT\", \"6379\"))\n\n# Retry connection to Redis\nfor i in range(30):\n    try:\n        r = redis.Redis(host=redis_host, port=redis_port, decode_responses=True)\n        r.ping()\n        print(f\"Connected to Redis at {redis_host}:{redis_port}\", flush=True)\n        break\n    except:\n        print(f\"Waiting for Redis... attempt {i+1}/30\", flush=True)\n        time.sleep(2)\n\n@app.route(\"/\")\ndef home():\n    return jsonify({\"status\": \"healthy\", \"service\": \"api\"})\n\n@app.route(\"/counter\")\ndef counter():\n    count = r.incr(\"visit_count\")\n    return jsonify({\"visits\": count})\n\n@app.route(\"/health\")\ndef health():\n    try:\n        r.ping()\n        return jsonify({\"status\": \"healthy\", \"redis\": \"connected\"})\n    except:\n        return jsonify({\"status\": \"unhealthy\", \"redis\": \"disconnected\"}), 503\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=5000)' > app.py && python -u app.py"
      ],
      "portMappings": [
        {
          "containerPort": 5000,
          "protocol": "tcp"
        }
      ],
      "environment": [
        {
          "name": "REDIS_HOST",
          "value": "localhost"
        },
        {
          "name": "REDIS_PORT",
          "value": "6379"
        }
      ],
      "dependsOn": [
        {
          "containerName": "redis",
          "condition": "HEALTHY"
        }
      ],
      "links": ["redis"],
      "healthCheck": {
        "command": ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5000/health || exit 1"],
        "interval": 30,
        "timeout": 5,
        "retries": 3,
        "startPeriod": 60
      },
      "logConfiguration": {
        "logDriver": "json-file",
        "options": {
          "max-size": "10m",
          "max-file": "3"
        }
      }
    },
    {
      "name": "redis",
      "image": "redis:alpine",
      "cpu": 256,
      "memory": 512,
      "essential": true,
      "portMappings": [
        {
          "containerPort": 6379,
          "protocol": "tcp"
        }
      ],
      "healthCheck": {
        "command": ["CMD-SHELL", "redis-cli ping || exit 1"],
        "interval": 30,
        "timeout": 5,
        "retries": 3,
        "startPeriod": 10
      },
      "logConfiguration": {
        "logDriver": "json-file",
        "options": {
          "max-size": "10m",
          "max-file": "3"
        }
      }
    }
  ]
}