version: '3.8'

services:
  # Option 1: Combined mode (default) - API and UI in single container
  kecs:
    image: ghcr.io/nandemo-ya/kecs:latest
    container_name: kecs-controlplane
    environment:
      - KECS_CONTAINER_MODE=true
      - KECS_DATA_DIR=/data
      - KECS_LOG_LEVEL=info
      # Optional: Keep k3d clusters on shutdown
      # - KECS_KEEP_CLUSTERS_ON_SHUTDOWN=true
    ports:
      - "8080:8080"  # API port
      - "8081:8081"  # Admin port
    volumes:
      # Mount host directory for data persistence
      - ./kecs-data:/data
      # Mount Docker socket for k3d management
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    # Add health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    profiles: ["combined"]

  # Option 2: Separated mode - API without UI
  kecs-api:
    image: ghcr.io/nandemo-ya/kecs:latest
    container_name: kecs-api
    environment:
      - KECS_CONTAINER_MODE=true
      - KECS_DATA_DIR=/data
      - KECS_LOG_LEVEL=info
      - KECS_WEBUI_ENABLED=false  # Disable Web UI
    ports:
      - "8080:8080"  # API port
      - "8081:8081"  # Admin port
    volumes:
      - ./kecs-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kecs-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    profiles: ["separated"]

  # Option 2: Separated mode - UI only
  kecs-ui:
    image: ghcr.io/nandemo-ya/kecs-ui:latest
    container_name: kecs-ui
    environment:
      - KECS_API_ENDPOINT=http://kecs-api:8080
    ports:
      - "3000:80"
    networks:
      - kecs-network
    depends_on:
      kecs-api:
        condition: service_healthy
    restart: unless-stopped
    profiles: ["separated"]

  # Optional: LocalStack for AWS service emulation
  localstack:
    image: localstack/localstack:latest
    container_name: kecs-localstack
    environment:
      - SERVICES=s3,dynamodb,sqs,sns,secretsmanager,ssm,iam,logs,cloudwatch
      - DEBUG=0
      - DATA_DIR=/tmp/localstack/data
    ports:
      - "4566:4566"
    volumes:
      - ./localstack-data:/tmp/localstack
    networks:
      - kecs-network
    restart: unless-stopped
    profiles: ["localstack", "combined", "separated"]

networks:
  kecs-network:
    name: kecs-network
    driver: bridge

volumes:
  kecs-data:
    driver: local
  localstack-data:
    driver: local