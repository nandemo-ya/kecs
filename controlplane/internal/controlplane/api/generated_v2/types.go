// Code generated by cmd/codegen. DO NOT EDIT.

package api

import (
	"time"
)

// AccessDeniedException represents the AccessDeniedException structure
type AccessDeniedException struct {
	Message *string `json:"message,omitempty"`
}

// AgentUpdateStatus represents the AgentUpdateStatus enum type
type AgentUpdateStatus string

const (
	AgentUpdateStatusSTAGING AgentUpdateStatus = "STAGING"

	AgentUpdateStatusSTAGED AgentUpdateStatus = "STAGED"

	AgentUpdateStatusUPDATING AgentUpdateStatus = "UPDATING"

	AgentUpdateStatusUPDATED AgentUpdateStatus = "UPDATED"

	AgentUpdateStatusFAILED AgentUpdateStatus = "FAILED"

	AgentUpdateStatusPENDING AgentUpdateStatus = "PENDING"
)

// ApplicationProtocol represents the ApplicationProtocol enum type
type ApplicationProtocol string

const (
	ApplicationProtocolGRPC ApplicationProtocol = "GRPC"

	ApplicationProtocolHTTP ApplicationProtocol = "HTTP"

	ApplicationProtocolHTTP2 ApplicationProtocol = "HTTP2"
)

// AssignPublicIp represents the AssignPublicIp enum type
type AssignPublicIp string

const (
	AssignPublicIpENABLED AssignPublicIp = "ENABLED"

	AssignPublicIpDISABLED AssignPublicIp = "DISABLED"
)

// Attachment represents the Attachment structure
type Attachment struct {
	Details []KeyValuePair `json:"details,omitempty"`

	Id *string `json:"id,omitempty"`

	Status *string `json:"status,omitempty"`

	Type *string `json:"type,omitempty"`
}

// AttachmentDetails represents the AttachmentDetails type
type AttachmentDetails []KeyValuePair

// AttachmentStateChange represents the AttachmentStateChange structure
type AttachmentStateChange struct {
	AttachmentArn string `json:"attachmentArn"`

	Status string `json:"status"`
}

// AttachmentStateChanges represents the AttachmentStateChanges type
type AttachmentStateChanges []AttachmentStateChange

// Attachments represents the Attachments type
type Attachments []Attachment

// Attribute represents the Attribute structure
type Attribute struct {
	Name string `json:"name"`

	TargetId *string `json:"targetId,omitempty"`

	TargetType *interface{} `json:"targetType,omitempty"`

	Value *string `json:"value,omitempty"`
}

// AttributeLimitExceededException represents the AttributeLimitExceededException structure
type AttributeLimitExceededException struct {
	Message *string `json:"message,omitempty"`
}

// Attributes represents the Attributes type
type Attributes []Attribute

// AutoScalingGroupProvider represents the AutoScalingGroupProvider structure
type AutoScalingGroupProvider struct {
	AutoScalingGroupArn string `json:"autoScalingGroupArn"`

	ManagedDraining *interface{} `json:"managedDraining,omitempty"`

	ManagedScaling *ManagedScaling `json:"managedScaling,omitempty"`

	ManagedTerminationProtection *interface{} `json:"managedTerminationProtection,omitempty"`
}

// AutoScalingGroupProviderUpdate represents the AutoScalingGroupProviderUpdate structure
type AutoScalingGroupProviderUpdate struct {
	ManagedDraining *interface{} `json:"managedDraining,omitempty"`

	ManagedScaling *ManagedScaling `json:"managedScaling,omitempty"`

	ManagedTerminationProtection *interface{} `json:"managedTerminationProtection,omitempty"`
}

// AvailabilityZoneRebalancing represents the AvailabilityZoneRebalancing enum type
type AvailabilityZoneRebalancing string

const (
	AvailabilityZoneRebalancingENABLED AvailabilityZoneRebalancing = "ENABLED"

	AvailabilityZoneRebalancingDISABLED AvailabilityZoneRebalancing = "DISABLED"
)

// AwsVpcConfiguration represents the AwsVpcConfiguration structure
type AwsVpcConfiguration struct {
	AssignPublicIp *interface{} `json:"assignPublicIp,omitempty"`

	SecurityGroups []string `json:"securityGroups,omitempty"`

	Subnets []string `json:"subnets"`
}

// BlockedException represents the BlockedException structure
type BlockedException struct {
	Message *string `json:"message,omitempty"`
}

// Boolean represents the Boolean type
type Boolean bool

// BoxedBoolean represents the BoxedBoolean type
type BoxedBoolean bool

// BoxedInteger represents the BoxedInteger type
type BoxedInteger int32

// CPUArchitecture represents the CPUArchitecture enum type
type CPUArchitecture string

const (
	CPUArchitectureX86_64 CPUArchitecture = "X86_64"

	CPUArchitectureARM64 CPUArchitecture = "ARM64"
)

// CapacityProvider represents the CapacityProvider structure
type CapacityProvider struct {
	AutoScalingGroupProvider *AutoScalingGroupProvider `json:"autoScalingGroupProvider,omitempty"`

	CapacityProviderArn *string `json:"capacityProviderArn,omitempty"`

	Name *string `json:"name,omitempty"`

	Status *interface{} `json:"status,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	UpdateStatus *interface{} `json:"updateStatus,omitempty"`

	UpdateStatusReason *string `json:"updateStatusReason,omitempty"`
}

// CapacityProviderField represents the CapacityProviderField enum type
type CapacityProviderField string

const (
	CapacityProviderFieldTAGS CapacityProviderField = "TAGS"
)

// CapacityProviderFieldList represents the CapacityProviderFieldList type
type CapacityProviderFieldList []interface{}

// CapacityProviderStatus represents the CapacityProviderStatus enum type
type CapacityProviderStatus string

const (
	CapacityProviderStatusACTIVE CapacityProviderStatus = "ACTIVE"

	CapacityProviderStatusINACTIVE CapacityProviderStatus = "INACTIVE"
)

// CapacityProviderStrategy represents the CapacityProviderStrategy type
type CapacityProviderStrategy []CapacityProviderStrategyItem

// CapacityProviderStrategyItem represents the CapacityProviderStrategyItem structure
type CapacityProviderStrategyItem struct {
	Base *int32 `json:"base,omitempty"`

	CapacityProvider string `json:"capacityProvider"`

	Weight *int32 `json:"weight,omitempty"`
}

// CapacityProviderStrategyItemBase represents the CapacityProviderStrategyItemBase type
type CapacityProviderStrategyItemBase int32

// CapacityProviderStrategyItemWeight represents the CapacityProviderStrategyItemWeight type
type CapacityProviderStrategyItemWeight int32

// CapacityProviderUpdateStatus represents the CapacityProviderUpdateStatus enum type
type CapacityProviderUpdateStatus string

const (
	CapacityProviderUpdateStatusUPDATE_IN_PROGRESS CapacityProviderUpdateStatus = "UPDATE_IN_PROGRESS"

	CapacityProviderUpdateStatusUPDATE_COMPLETE CapacityProviderUpdateStatus = "UPDATE_COMPLETE"

	CapacityProviderUpdateStatusUPDATE_FAILED CapacityProviderUpdateStatus = "UPDATE_FAILED"

	CapacityProviderUpdateStatusDELETE_IN_PROGRESS CapacityProviderUpdateStatus = "DELETE_IN_PROGRESS"

	CapacityProviderUpdateStatusDELETE_COMPLETE CapacityProviderUpdateStatus = "DELETE_COMPLETE"

	CapacityProviderUpdateStatusDELETE_FAILED CapacityProviderUpdateStatus = "DELETE_FAILED"
)

// CapacityProviders represents the CapacityProviders type
type CapacityProviders []CapacityProvider

// ClientException represents the ClientException structure
type ClientException struct {
	Message *string `json:"message,omitempty"`
}

// Cluster represents the Cluster structure
type Cluster struct {
	ActiveServicesCount *int32 `json:"activeServicesCount,omitempty"`

	Attachments []Attachment `json:"attachments,omitempty"`

	AttachmentsStatus *string `json:"attachmentsStatus,omitempty"`

	CapacityProviders []string `json:"capacityProviders,omitempty"`

	ClusterArn *string `json:"clusterArn,omitempty"`

	ClusterName *string `json:"clusterName,omitempty"`

	Configuration *ClusterConfiguration `json:"configuration,omitempty"`

	DefaultCapacityProviderStrategy []CapacityProviderStrategyItem `json:"defaultCapacityProviderStrategy,omitempty"`

	PendingTasksCount *int32 `json:"pendingTasksCount,omitempty"`

	RegisteredContainerInstancesCount *int32 `json:"registeredContainerInstancesCount,omitempty"`

	RunningTasksCount *int32 `json:"runningTasksCount,omitempty"`

	ServiceConnectDefaults *ClusterServiceConnectDefaults `json:"serviceConnectDefaults,omitempty"`

	Settings []ClusterSetting `json:"settings,omitempty"`

	Statistics []KeyValuePair `json:"statistics,omitempty"`

	Status *string `json:"status,omitempty"`

	Tags []Tag `json:"tags,omitempty"`
}

// ClusterConfiguration represents the ClusterConfiguration structure
type ClusterConfiguration struct {
	ExecuteCommandConfiguration *ExecuteCommandConfiguration `json:"executeCommandConfiguration,omitempty"`

	ManagedStorageConfiguration *ManagedStorageConfiguration `json:"managedStorageConfiguration,omitempty"`
}

// ClusterContainsContainerInstancesException represents the ClusterContainsContainerInstancesException structure
type ClusterContainsContainerInstancesException struct {
	Message *string `json:"message,omitempty"`
}

// ClusterContainsServicesException represents the ClusterContainsServicesException structure
type ClusterContainsServicesException struct {
	Message *string `json:"message,omitempty"`
}

// ClusterContainsTasksException represents the ClusterContainsTasksException structure
type ClusterContainsTasksException struct {
	Message *string `json:"message,omitempty"`
}

// ClusterField represents the ClusterField enum type
type ClusterField string

const (
	ClusterFieldCONFIGURATIONS ClusterField = "CONFIGURATIONS"

	ClusterFieldSETTINGS ClusterField = "SETTINGS"

	ClusterFieldSTATISTICS ClusterField = "STATISTICS"

	ClusterFieldTAGS ClusterField = "TAGS"

	ClusterFieldATTACHMENTS ClusterField = "ATTACHMENTS"
)

// ClusterFieldList represents the ClusterFieldList type
type ClusterFieldList []interface{}

// ClusterNotFoundException represents the ClusterNotFoundException structure
type ClusterNotFoundException struct {
	Message *string `json:"message,omitempty"`
}

// ClusterServiceConnectDefaults represents the ClusterServiceConnectDefaults structure
type ClusterServiceConnectDefaults struct {
	Namespace *string `json:"namespace,omitempty"`
}

// ClusterServiceConnectDefaultsRequest represents the ClusterServiceConnectDefaultsRequest structure
type ClusterServiceConnectDefaultsRequest struct {
	Namespace string `json:"namespace"`
}

// ClusterSetting represents the ClusterSetting structure
type ClusterSetting struct {
	Name *interface{} `json:"name,omitempty"`

	Value *string `json:"value,omitempty"`
}

// ClusterSettingName represents the ClusterSettingName enum type
type ClusterSettingName string

const (
	ClusterSettingNameCONTAINER_INSIGHTS ClusterSettingName = "CONTAINER_INSIGHTS"
)

// ClusterSettings represents the ClusterSettings type
type ClusterSettings []ClusterSetting

// Clusters represents the Clusters type
type Clusters []Cluster

// Compatibility represents the Compatibility enum type
type Compatibility string

const (
	CompatibilityEC2 Compatibility = "EC2"

	CompatibilityFARGATE Compatibility = "FARGATE"

	CompatibilityEXTERNAL Compatibility = "EXTERNAL"
)

// CompatibilityList represents the CompatibilityList type
type CompatibilityList []interface{}

// ConflictException represents the ConflictException structure
type ConflictException struct {
	Message *string `json:"message,omitempty"`

	ResourceIds []string `json:"resourceIds,omitempty"`
}

// Connectivity represents the Connectivity enum type
type Connectivity string

const (
	ConnectivityCONNECTED Connectivity = "CONNECTED"

	ConnectivityDISCONNECTED Connectivity = "DISCONNECTED"
)

// Container represents the Container structure
type Container struct {
	ContainerArn *string `json:"containerArn,omitempty"`

	Cpu *string `json:"cpu,omitempty"`

	ExitCode *int32 `json:"exitCode,omitempty"`

	GpuIds []string `json:"gpuIds,omitempty"`

	HealthStatus *interface{} `json:"healthStatus,omitempty"`

	Image *string `json:"image,omitempty"`

	ImageDigest *string `json:"imageDigest,omitempty"`

	LastStatus *string `json:"lastStatus,omitempty"`

	ManagedAgents []ManagedAgent `json:"managedAgents,omitempty"`

	Memory *string `json:"memory,omitempty"`

	MemoryReservation *string `json:"memoryReservation,omitempty"`

	Name *string `json:"name,omitempty"`

	NetworkBindings []NetworkBinding `json:"networkBindings,omitempty"`

	NetworkInterfaces []NetworkInterface `json:"networkInterfaces,omitempty"`

	Reason *string `json:"reason,omitempty"`

	RuntimeId *string `json:"runtimeId,omitempty"`

	TaskArn *string `json:"taskArn,omitempty"`
}

// ContainerCondition represents the ContainerCondition enum type
type ContainerCondition string

const (
	ContainerConditionSTART ContainerCondition = "START"

	ContainerConditionCOMPLETE ContainerCondition = "COMPLETE"

	ContainerConditionSUCCESS ContainerCondition = "SUCCESS"

	ContainerConditionHEALTHY ContainerCondition = "HEALTHY"
)

// ContainerDefinition represents the ContainerDefinition structure
type ContainerDefinition struct {
	Command []string `json:"command,omitempty"`

	Cpu *int32 `json:"cpu,omitempty"`

	CredentialSpecs []string `json:"credentialSpecs,omitempty"`

	DependsOn []ContainerDependency `json:"dependsOn,omitempty"`

	DisableNetworking *bool `json:"disableNetworking,omitempty"`

	DnsSearchDomains []string `json:"dnsSearchDomains,omitempty"`

	DnsServers []string `json:"dnsServers,omitempty"`

	DockerLabels map[string]string `json:"dockerLabels,omitempty"`

	DockerSecurityOptions []string `json:"dockerSecurityOptions,omitempty"`

	EntryPoint []string `json:"entryPoint,omitempty"`

	Environment []KeyValuePair `json:"environment,omitempty"`

	EnvironmentFiles []EnvironmentFile `json:"environmentFiles,omitempty"`

	Essential *bool `json:"essential,omitempty"`

	ExtraHosts []HostEntry `json:"extraHosts,omitempty"`

	FirelensConfiguration *FirelensConfiguration `json:"firelensConfiguration,omitempty"`

	HealthCheck *HealthCheck `json:"healthCheck,omitempty"`

	Hostname *string `json:"hostname,omitempty"`

	Image *string `json:"image,omitempty"`

	Interactive *bool `json:"interactive,omitempty"`

	Links []string `json:"links,omitempty"`

	LinuxParameters *LinuxParameters `json:"linuxParameters,omitempty"`

	LogConfiguration *LogConfiguration `json:"logConfiguration,omitempty"`

	Memory *int32 `json:"memory,omitempty"`

	MemoryReservation *int32 `json:"memoryReservation,omitempty"`

	MountPoints []MountPoint `json:"mountPoints,omitempty"`

	Name *string `json:"name,omitempty"`

	PortMappings []PortMapping `json:"portMappings,omitempty"`

	Privileged *bool `json:"privileged,omitempty"`

	PseudoTerminal *bool `json:"pseudoTerminal,omitempty"`

	ReadonlyRootFilesystem *bool `json:"readonlyRootFilesystem,omitempty"`

	RepositoryCredentials *RepositoryCredentials `json:"repositoryCredentials,omitempty"`

	ResourceRequirements []ResourceRequirement `json:"resourceRequirements,omitempty"`

	RestartPolicy *ContainerRestartPolicy `json:"restartPolicy,omitempty"`

	Secrets []Secret `json:"secrets,omitempty"`

	StartTimeout *int32 `json:"startTimeout,omitempty"`

	StopTimeout *int32 `json:"stopTimeout,omitempty"`

	SystemControls []SystemControl `json:"systemControls,omitempty"`

	Ulimits []Ulimit `json:"ulimits,omitempty"`

	User *string `json:"user,omitempty"`

	VersionConsistency *interface{} `json:"versionConsistency,omitempty"`

	VolumesFrom []VolumeFrom `json:"volumesFrom,omitempty"`

	WorkingDirectory *string `json:"workingDirectory,omitempty"`
}

// ContainerDefinitions represents the ContainerDefinitions type
type ContainerDefinitions []ContainerDefinition

// ContainerDependencies represents the ContainerDependencies type
type ContainerDependencies []ContainerDependency

// ContainerDependency represents the ContainerDependency structure
type ContainerDependency struct {
	Condition interface{} `json:"condition"`

	ContainerName string `json:"containerName"`
}

// ContainerImage represents the ContainerImage structure
type ContainerImage struct {
	ContainerName *string `json:"containerName,omitempty"`

	Image *string `json:"image,omitempty"`

	ImageDigest *string `json:"imageDigest,omitempty"`
}

// ContainerImages represents the ContainerImages type
type ContainerImages []ContainerImage

// ContainerInstance represents the ContainerInstance structure
type ContainerInstance struct {
	AgentConnected *bool `json:"agentConnected,omitempty"`

	AgentUpdateStatus *interface{} `json:"agentUpdateStatus,omitempty"`

	Attachments []Attachment `json:"attachments,omitempty"`

	Attributes []Attribute `json:"attributes,omitempty"`

	CapacityProviderName *string `json:"capacityProviderName,omitempty"`

	ContainerInstanceArn *string `json:"containerInstanceArn,omitempty"`

	Ec2InstanceId *string `json:"ec2InstanceId,omitempty"`

	HealthStatus *ContainerInstanceHealthStatus `json:"healthStatus,omitempty"`

	PendingTasksCount *int32 `json:"pendingTasksCount,omitempty"`

	RegisteredAt *time.Time `json:"registeredAt,omitempty"`

	RegisteredResources []Resource `json:"registeredResources,omitempty"`

	RemainingResources []Resource `json:"remainingResources,omitempty"`

	RunningTasksCount *int32 `json:"runningTasksCount,omitempty"`

	Status *string `json:"status,omitempty"`

	StatusReason *string `json:"statusReason,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	Version *int64 `json:"version,omitempty"`

	VersionInfo *VersionInfo `json:"versionInfo,omitempty"`
}

// ContainerInstanceField represents the ContainerInstanceField enum type
type ContainerInstanceField string

const (
	ContainerInstanceFieldTAGS ContainerInstanceField = "TAGS"

	ContainerInstanceFieldCONTAINER_INSTANCE_HEALTH ContainerInstanceField = "CONTAINER_INSTANCE_HEALTH"
)

// ContainerInstanceFieldList represents the ContainerInstanceFieldList type
type ContainerInstanceFieldList []interface{}

// ContainerInstanceHealthStatus represents the ContainerInstanceHealthStatus structure
type ContainerInstanceHealthStatus struct {
	Details []InstanceHealthCheckResult `json:"details,omitempty"`

	OverallStatus *interface{} `json:"overallStatus,omitempty"`
}

// ContainerInstanceStatus represents the ContainerInstanceStatus enum type
type ContainerInstanceStatus string

const (
	ContainerInstanceStatusREGISTRATION_FAILED ContainerInstanceStatus = "REGISTRATION_FAILED"

	ContainerInstanceStatusACTIVE ContainerInstanceStatus = "ACTIVE"

	ContainerInstanceStatusDRAINING ContainerInstanceStatus = "DRAINING"

	ContainerInstanceStatusREGISTERING ContainerInstanceStatus = "REGISTERING"

	ContainerInstanceStatusDEREGISTERING ContainerInstanceStatus = "DEREGISTERING"
)

// ContainerInstances represents the ContainerInstances type
type ContainerInstances []ContainerInstance

// ContainerOverride represents the ContainerOverride structure
type ContainerOverride struct {
	Command []string `json:"command,omitempty"`

	Cpu *int32 `json:"cpu,omitempty"`

	Environment []KeyValuePair `json:"environment,omitempty"`

	EnvironmentFiles []EnvironmentFile `json:"environmentFiles,omitempty"`

	Memory *int32 `json:"memory,omitempty"`

	MemoryReservation *int32 `json:"memoryReservation,omitempty"`

	Name *string `json:"name,omitempty"`

	ResourceRequirements []ResourceRequirement `json:"resourceRequirements,omitempty"`
}

// ContainerOverrides represents the ContainerOverrides type
type ContainerOverrides []ContainerOverride

// ContainerRestartPolicy represents the ContainerRestartPolicy structure
type ContainerRestartPolicy struct {
	Enabled bool `json:"enabled"`

	IgnoredExitCodes []int32 `json:"ignoredExitCodes,omitempty"`

	RestartAttemptPeriod *int32 `json:"restartAttemptPeriod,omitempty"`
}

// ContainerStateChange represents the ContainerStateChange structure
type ContainerStateChange struct {
	ContainerName *string `json:"containerName,omitempty"`

	ExitCode *int32 `json:"exitCode,omitempty"`

	ImageDigest *string `json:"imageDigest,omitempty"`

	NetworkBindings []NetworkBinding `json:"networkBindings,omitempty"`

	Reason *string `json:"reason,omitempty"`

	RuntimeId *string `json:"runtimeId,omitempty"`

	Status *string `json:"status,omitempty"`
}

// ContainerStateChanges represents the ContainerStateChanges type
type ContainerStateChanges []ContainerStateChange

// Containers represents the Containers type
type Containers []Container

// CreateCapacityProviderRequest represents the CreateCapacityProviderRequest structure
type CreateCapacityProviderRequest struct {
	AutoScalingGroupProvider AutoScalingGroupProvider `json:"autoScalingGroupProvider"`

	Name string `json:"name"`

	Tags []Tag `json:"tags,omitempty"`
}

// CreateCapacityProviderResponse represents the CreateCapacityProviderResponse structure
type CreateCapacityProviderResponse struct {
	CapacityProvider *CapacityProvider `json:"capacityProvider,omitempty"`
}

// CreateClusterRequest represents the CreateClusterRequest structure
type CreateClusterRequest struct {
	CapacityProviders []string `json:"capacityProviders,omitempty"`

	ClusterName *string `json:"clusterName,omitempty"`

	Configuration *ClusterConfiguration `json:"configuration,omitempty"`

	DefaultCapacityProviderStrategy []CapacityProviderStrategyItem `json:"defaultCapacityProviderStrategy,omitempty"`

	ServiceConnectDefaults *ClusterServiceConnectDefaultsRequest `json:"serviceConnectDefaults,omitempty"`

	Settings []ClusterSetting `json:"settings,omitempty"`

	Tags []Tag `json:"tags,omitempty"`
}

// CreateClusterResponse represents the CreateClusterResponse structure
type CreateClusterResponse struct {
	Cluster *Cluster `json:"cluster,omitempty"`
}

// CreateServiceRequest represents the CreateServiceRequest structure
type CreateServiceRequest struct {
	AvailabilityZoneRebalancing *interface{} `json:"availabilityZoneRebalancing,omitempty"`

	CapacityProviderStrategy []CapacityProviderStrategyItem `json:"capacityProviderStrategy,omitempty"`

	ClientToken *string `json:"clientToken,omitempty"`

	Cluster *string `json:"cluster,omitempty"`

	DeploymentConfiguration *DeploymentConfiguration `json:"deploymentConfiguration,omitempty"`

	DeploymentController *DeploymentController `json:"deploymentController,omitempty"`

	DesiredCount *int32 `json:"desiredCount,omitempty"`

	EnableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`

	EnableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`

	HealthCheckGracePeriodSeconds *int32 `json:"healthCheckGracePeriodSeconds,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	LoadBalancers []LoadBalancer `json:"loadBalancers,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	PlacementConstraints []PlacementConstraint `json:"placementConstraints,omitempty"`

	PlacementStrategy []PlacementStrategy `json:"placementStrategy,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	PropagateTags *interface{} `json:"propagateTags,omitempty"`

	Role *string `json:"role,omitempty"`

	SchedulingStrategy *interface{} `json:"schedulingStrategy,omitempty"`

	ServiceConnectConfiguration *ServiceConnectConfiguration `json:"serviceConnectConfiguration,omitempty"`

	ServiceName string `json:"serviceName"`

	ServiceRegistries []ServiceRegistry `json:"serviceRegistries,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TaskDefinition *string `json:"taskDefinition,omitempty"`

	VolumeConfigurations []ServiceVolumeConfiguration `json:"volumeConfigurations,omitempty"`

	VpcLatticeConfigurations []VpcLatticeConfiguration `json:"vpcLatticeConfigurations,omitempty"`
}

// CreateServiceResponse represents the CreateServiceResponse structure
type CreateServiceResponse struct {
	Service *Service `json:"service,omitempty"`
}

// CreateTaskSetRequest represents the CreateTaskSetRequest structure
type CreateTaskSetRequest struct {
	CapacityProviderStrategy []CapacityProviderStrategyItem `json:"capacityProviderStrategy,omitempty"`

	ClientToken *string `json:"clientToken,omitempty"`

	Cluster string `json:"cluster"`

	ExternalId *string `json:"externalId,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	LoadBalancers []LoadBalancer `json:"loadBalancers,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	Scale *Scale `json:"scale,omitempty"`

	Service string `json:"service"`

	ServiceRegistries []ServiceRegistry `json:"serviceRegistries,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TaskDefinition string `json:"taskDefinition"`
}

// CreateTaskSetResponse represents the CreateTaskSetResponse structure
type CreateTaskSetResponse struct {
	TaskSet *TaskSet `json:"taskSet,omitempty"`
}

// CreatedAt represents the CreatedAt structure
type CreatedAt struct {
	After *time.Time `json:"after,omitempty"`

	Before *time.Time `json:"before,omitempty"`
}

// DeleteAccountSettingRequest represents the DeleteAccountSettingRequest structure
type DeleteAccountSettingRequest struct {
	Name interface{} `json:"name"`

	PrincipalArn *string `json:"principalArn,omitempty"`
}

// DeleteAccountSettingResponse represents the DeleteAccountSettingResponse structure
type DeleteAccountSettingResponse struct {
	Setting *Setting `json:"setting,omitempty"`
}

// DeleteAttributesRequest represents the DeleteAttributesRequest structure
type DeleteAttributesRequest struct {
	Attributes []Attribute `json:"attributes"`

	Cluster *string `json:"cluster,omitempty"`
}

// DeleteAttributesResponse represents the DeleteAttributesResponse structure
type DeleteAttributesResponse struct {
	Attributes []Attribute `json:"attributes,omitempty"`
}

// DeleteCapacityProviderRequest represents the DeleteCapacityProviderRequest structure
type DeleteCapacityProviderRequest struct {
	CapacityProvider string `json:"capacityProvider"`
}

// DeleteCapacityProviderResponse represents the DeleteCapacityProviderResponse structure
type DeleteCapacityProviderResponse struct {
	CapacityProvider *CapacityProvider `json:"capacityProvider,omitempty"`
}

// DeleteClusterRequest represents the DeleteClusterRequest structure
type DeleteClusterRequest struct {
	Cluster string `json:"cluster"`
}

// DeleteClusterResponse represents the DeleteClusterResponse structure
type DeleteClusterResponse struct {
	Cluster *Cluster `json:"cluster,omitempty"`
}

// DeleteServiceRequest represents the DeleteServiceRequest structure
type DeleteServiceRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	Force *bool `json:"force,omitempty"`

	Service string `json:"service"`
}

// DeleteServiceResponse represents the DeleteServiceResponse structure
type DeleteServiceResponse struct {
	Service *Service `json:"service,omitempty"`
}

// DeleteTaskDefinitionsRequest represents the DeleteTaskDefinitionsRequest structure
type DeleteTaskDefinitionsRequest struct {
	TaskDefinitions []string `json:"taskDefinitions"`
}

// DeleteTaskDefinitionsResponse represents the DeleteTaskDefinitionsResponse structure
type DeleteTaskDefinitionsResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	TaskDefinitions []TaskDefinition `json:"taskDefinitions,omitempty"`
}

// DeleteTaskSetRequest represents the DeleteTaskSetRequest structure
type DeleteTaskSetRequest struct {
	Cluster string `json:"cluster"`

	Force *bool `json:"force,omitempty"`

	Service string `json:"service"`

	TaskSet string `json:"taskSet"`
}

// DeleteTaskSetResponse represents the DeleteTaskSetResponse structure
type DeleteTaskSetResponse struct {
	TaskSet *TaskSet `json:"taskSet,omitempty"`
}

// Deployment represents the Deployment structure
type Deployment struct {
	CapacityProviderStrategy []CapacityProviderStrategyItem `json:"capacityProviderStrategy,omitempty"`

	CreatedAt *time.Time `json:"createdAt,omitempty"`

	DesiredCount *int32 `json:"desiredCount,omitempty"`

	FailedTasks *int32 `json:"failedTasks,omitempty"`

	FargateEphemeralStorage *DeploymentEphemeralStorage `json:"fargateEphemeralStorage,omitempty"`

	Id *string `json:"id,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	PendingCount *int32 `json:"pendingCount,omitempty"`

	PlatformFamily *string `json:"platformFamily,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	RolloutState *interface{} `json:"rolloutState,omitempty"`

	RolloutStateReason *string `json:"rolloutStateReason,omitempty"`

	RunningCount *int32 `json:"runningCount,omitempty"`

	ServiceConnectConfiguration *ServiceConnectConfiguration `json:"serviceConnectConfiguration,omitempty"`

	ServiceConnectResources []ServiceConnectServiceResource `json:"serviceConnectResources,omitempty"`

	Status *string `json:"status,omitempty"`

	TaskDefinition *string `json:"taskDefinition,omitempty"`

	UpdatedAt *time.Time `json:"updatedAt,omitempty"`

	VolumeConfigurations []ServiceVolumeConfiguration `json:"volumeConfigurations,omitempty"`

	VpcLatticeConfigurations []VpcLatticeConfiguration `json:"vpcLatticeConfigurations,omitempty"`
}

// DeploymentAlarms represents the DeploymentAlarms structure
type DeploymentAlarms struct {
	AlarmNames []string `json:"alarmNames"`

	Enable bool `json:"enable"`

	Rollback bool `json:"rollback"`
}

// DeploymentCircuitBreaker represents the DeploymentCircuitBreaker structure
type DeploymentCircuitBreaker struct {
	Enable bool `json:"enable"`

	Rollback bool `json:"rollback"`
}

// DeploymentConfiguration represents the DeploymentConfiguration structure
type DeploymentConfiguration struct {
	Alarms *DeploymentAlarms `json:"alarms,omitempty"`

	DeploymentCircuitBreaker *DeploymentCircuitBreaker `json:"deploymentCircuitBreaker,omitempty"`

	MaximumPercent *int32 `json:"maximumPercent,omitempty"`

	MinimumHealthyPercent *int32 `json:"minimumHealthyPercent,omitempty"`
}

// DeploymentController represents the DeploymentController structure
type DeploymentController struct {
	Type interface{} `json:"type"`
}

// DeploymentControllerType represents the DeploymentControllerType enum type
type DeploymentControllerType string

const (
	DeploymentControllerTypeECS DeploymentControllerType = "ECS"

	DeploymentControllerTypeCODE_DEPLOY DeploymentControllerType = "CODE_DEPLOY"

	DeploymentControllerTypeEXTERNAL DeploymentControllerType = "EXTERNAL"
)

// DeploymentEphemeralStorage represents the DeploymentEphemeralStorage structure
type DeploymentEphemeralStorage struct {
	KmsKeyId *string `json:"kmsKeyId,omitempty"`
}

// DeploymentRolloutState represents the DeploymentRolloutState enum type
type DeploymentRolloutState string

const (
	DeploymentRolloutStateCOMPLETED DeploymentRolloutState = "COMPLETED"

	DeploymentRolloutStateFAILED DeploymentRolloutState = "FAILED"

	DeploymentRolloutStateIN_PROGRESS DeploymentRolloutState = "IN_PROGRESS"
)

// Deployments represents the Deployments type
type Deployments []Deployment

// DeregisterContainerInstanceRequest represents the DeregisterContainerInstanceRequest structure
type DeregisterContainerInstanceRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	ContainerInstance string `json:"containerInstance"`

	Force *bool `json:"force,omitempty"`
}

// DeregisterContainerInstanceResponse represents the DeregisterContainerInstanceResponse structure
type DeregisterContainerInstanceResponse struct {
	ContainerInstance *ContainerInstance `json:"containerInstance,omitempty"`
}

// DeregisterTaskDefinitionRequest represents the DeregisterTaskDefinitionRequest structure
type DeregisterTaskDefinitionRequest struct {
	TaskDefinition string `json:"taskDefinition"`
}

// DeregisterTaskDefinitionResponse represents the DeregisterTaskDefinitionResponse structure
type DeregisterTaskDefinitionResponse struct {
	TaskDefinition *TaskDefinition `json:"taskDefinition,omitempty"`
}

// DescribeCapacityProvidersRequest represents the DescribeCapacityProvidersRequest structure
type DescribeCapacityProvidersRequest struct {
	CapacityProviders []string `json:"capacityProviders,omitempty"`

	Include []interface{} `json:"include,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`
}

// DescribeCapacityProvidersResponse represents the DescribeCapacityProvidersResponse structure
type DescribeCapacityProvidersResponse struct {
	CapacityProviders []CapacityProvider `json:"capacityProviders,omitempty"`

	Failures []Failure `json:"failures,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`
}

// DescribeClustersRequest represents the DescribeClustersRequest structure
type DescribeClustersRequest struct {
	Clusters []string `json:"clusters,omitempty"`

	Include []interface{} `json:"include,omitempty"`
}

// DescribeClustersResponse represents the DescribeClustersResponse structure
type DescribeClustersResponse struct {
	Clusters []Cluster `json:"clusters,omitempty"`

	Failures []Failure `json:"failures,omitempty"`
}

// DescribeContainerInstancesRequest represents the DescribeContainerInstancesRequest structure
type DescribeContainerInstancesRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	ContainerInstances []string `json:"containerInstances"`

	Include []interface{} `json:"include,omitempty"`
}

// DescribeContainerInstancesResponse represents the DescribeContainerInstancesResponse structure
type DescribeContainerInstancesResponse struct {
	ContainerInstances []ContainerInstance `json:"containerInstances,omitempty"`

	Failures []Failure `json:"failures,omitempty"`
}

// DescribeServiceDeploymentsRequest represents the DescribeServiceDeploymentsRequest structure
type DescribeServiceDeploymentsRequest struct {
	ServiceDeploymentArns []string `json:"serviceDeploymentArns"`
}

// DescribeServiceDeploymentsResponse represents the DescribeServiceDeploymentsResponse structure
type DescribeServiceDeploymentsResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	ServiceDeployments []ServiceDeployment `json:"serviceDeployments,omitempty"`
}

// DescribeServiceRevisionsRequest represents the DescribeServiceRevisionsRequest structure
type DescribeServiceRevisionsRequest struct {
	ServiceRevisionArns []string `json:"serviceRevisionArns"`
}

// DescribeServiceRevisionsResponse represents the DescribeServiceRevisionsResponse structure
type DescribeServiceRevisionsResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	ServiceRevisions []ServiceRevision `json:"serviceRevisions,omitempty"`
}

// DescribeServicesRequest represents the DescribeServicesRequest structure
type DescribeServicesRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	Include []interface{} `json:"include,omitempty"`

	Services []string `json:"services"`
}

// DescribeServicesResponse represents the DescribeServicesResponse structure
type DescribeServicesResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	Services []Service `json:"services,omitempty"`
}

// DescribeTaskDefinitionRequest represents the DescribeTaskDefinitionRequest structure
type DescribeTaskDefinitionRequest struct {
	Include []interface{} `json:"include,omitempty"`

	TaskDefinition string `json:"taskDefinition"`
}

// DescribeTaskDefinitionResponse represents the DescribeTaskDefinitionResponse structure
type DescribeTaskDefinitionResponse struct {
	Tags []Tag `json:"tags,omitempty"`

	TaskDefinition *TaskDefinition `json:"taskDefinition,omitempty"`
}

// DescribeTaskSetsRequest represents the DescribeTaskSetsRequest structure
type DescribeTaskSetsRequest struct {
	Cluster string `json:"cluster"`

	Include []interface{} `json:"include,omitempty"`

	Service string `json:"service"`

	TaskSets []string `json:"taskSets,omitempty"`
}

// DescribeTaskSetsResponse represents the DescribeTaskSetsResponse structure
type DescribeTaskSetsResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	TaskSets []TaskSet `json:"taskSets,omitempty"`
}

// DescribeTasksRequest represents the DescribeTasksRequest structure
type DescribeTasksRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	Include []interface{} `json:"include,omitempty"`

	Tasks []string `json:"tasks"`
}

// DescribeTasksResponse represents the DescribeTasksResponse structure
type DescribeTasksResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	Tasks []Task `json:"tasks,omitempty"`
}

// DesiredStatus represents the DesiredStatus enum type
type DesiredStatus string

const (
	DesiredStatusRUNNING DesiredStatus = "RUNNING"

	DesiredStatusPENDING DesiredStatus = "PENDING"

	DesiredStatusSTOPPED DesiredStatus = "STOPPED"
)

// Device represents the Device structure
type Device struct {
	ContainerPath *string `json:"containerPath,omitempty"`

	HostPath string `json:"hostPath"`

	Permissions []interface{} `json:"permissions,omitempty"`
}

// DeviceCgroupPermission represents the DeviceCgroupPermission enum type
type DeviceCgroupPermission string

const (
	DeviceCgroupPermissionREAD DeviceCgroupPermission = "READ"

	DeviceCgroupPermissionWRITE DeviceCgroupPermission = "WRITE"

	DeviceCgroupPermissionMKNOD DeviceCgroupPermission = "MKNOD"
)

// DeviceCgroupPermissions represents the DeviceCgroupPermissions type
type DeviceCgroupPermissions []interface{}

// DevicesList represents the DevicesList type
type DevicesList []Device

// DiscoverPollEndpointRequest represents the DiscoverPollEndpointRequest structure
type DiscoverPollEndpointRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	ContainerInstance *string `json:"containerInstance,omitempty"`
}

// DiscoverPollEndpointResponse represents the DiscoverPollEndpointResponse structure
type DiscoverPollEndpointResponse struct {
	Endpoint *string `json:"endpoint,omitempty"`

	ServiceConnectEndpoint *string `json:"serviceConnectEndpoint,omitempty"`

	TelemetryEndpoint *string `json:"telemetryEndpoint,omitempty"`
}

// DockerLabelsMap represents the DockerLabelsMap type
type DockerLabelsMap map[string]string

// DockerVolumeConfiguration represents the DockerVolumeConfiguration structure
type DockerVolumeConfiguration struct {
	Autoprovision *bool `json:"autoprovision,omitempty"`

	Driver *string `json:"driver,omitempty"`

	DriverOpts map[string]string `json:"driverOpts,omitempty"`

	Labels map[string]string `json:"labels,omitempty"`

	Scope *interface{} `json:"scope,omitempty"`
}

// Double represents the Double type
type Double float64

// Duration represents the Duration type
type Duration int32

// EBSKMSKeyId represents the EBSKMSKeyId type
type EBSKMSKeyId string

// EBSResourceType represents the EBSResourceType enum type
type EBSResourceType string

const (
	EBSResourceTypeVOLUME EBSResourceType = "VOLUME"
)

// EBSSnapshotId represents the EBSSnapshotId type
type EBSSnapshotId string

// EBSTagSpecification represents the EBSTagSpecification structure
type EBSTagSpecification struct {
	PropagateTags *interface{} `json:"propagateTags,omitempty"`

	ResourceType interface{} `json:"resourceType"`

	Tags []Tag `json:"tags,omitempty"`
}

// EBSTagSpecifications represents the EBSTagSpecifications type
type EBSTagSpecifications []EBSTagSpecification

// EBSVolumeType represents the EBSVolumeType type
type EBSVolumeType string

// ECSVolumeName represents the ECSVolumeName type
type ECSVolumeName string

// EFSAuthorizationConfig represents the EFSAuthorizationConfig structure
type EFSAuthorizationConfig struct {
	AccessPointId *string `json:"accessPointId,omitempty"`

	Iam *interface{} `json:"iam,omitempty"`
}

// EFSAuthorizationConfigIAM represents the EFSAuthorizationConfigIAM enum type
type EFSAuthorizationConfigIAM string

const (
	EFSAuthorizationConfigIAMENABLED EFSAuthorizationConfigIAM = "ENABLED"

	EFSAuthorizationConfigIAMDISABLED EFSAuthorizationConfigIAM = "DISABLED"
)

// EFSTransitEncryption represents the EFSTransitEncryption enum type
type EFSTransitEncryption string

const (
	EFSTransitEncryptionENABLED EFSTransitEncryption = "ENABLED"

	EFSTransitEncryptionDISABLED EFSTransitEncryption = "DISABLED"
)

// EFSVolumeConfiguration represents the EFSVolumeConfiguration structure
type EFSVolumeConfiguration struct {
	AuthorizationConfig *EFSAuthorizationConfig `json:"authorizationConfig,omitempty"`

	FileSystemId string `json:"fileSystemId"`

	RootDirectory *string `json:"rootDirectory,omitempty"`

	TransitEncryption *interface{} `json:"transitEncryption,omitempty"`

	TransitEncryptionPort *int32 `json:"transitEncryptionPort,omitempty"`
}

// EnvironmentFile represents the EnvironmentFile structure
type EnvironmentFile struct {
	Type interface{} `json:"type"`

	Value string `json:"value"`
}

// EnvironmentFileType represents the EnvironmentFileType enum type
type EnvironmentFileType string

const (
	EnvironmentFileTypeS3 EnvironmentFileType = "S3"
)

// EnvironmentFiles represents the EnvironmentFiles type
type EnvironmentFiles []EnvironmentFile

// EnvironmentVariables represents the EnvironmentVariables type
type EnvironmentVariables []KeyValuePair

// EphemeralStorage represents the EphemeralStorage structure
type EphemeralStorage struct {
	SizeInGiB int32 `json:"sizeInGiB"`
}

// ExecuteCommandConfiguration represents the ExecuteCommandConfiguration structure
type ExecuteCommandConfiguration struct {
	KmsKeyId *string `json:"kmsKeyId,omitempty"`

	LogConfiguration *ExecuteCommandLogConfiguration `json:"logConfiguration,omitempty"`

	Logging *interface{} `json:"logging,omitempty"`
}

// ExecuteCommandLogConfiguration represents the ExecuteCommandLogConfiguration structure
type ExecuteCommandLogConfiguration struct {
	CloudWatchEncryptionEnabled *bool `json:"cloudWatchEncryptionEnabled,omitempty"`

	CloudWatchLogGroupName *string `json:"cloudWatchLogGroupName,omitempty"`

	S3BucketName *string `json:"s3BucketName,omitempty"`

	S3EncryptionEnabled *bool `json:"s3EncryptionEnabled,omitempty"`

	S3KeyPrefix *string `json:"s3KeyPrefix,omitempty"`
}

// ExecuteCommandLogging represents the ExecuteCommandLogging enum type
type ExecuteCommandLogging string

const (
	ExecuteCommandLoggingDEFAULT ExecuteCommandLogging = "DEFAULT"

	ExecuteCommandLoggingOVERRIDE ExecuteCommandLogging = "OVERRIDE"

	ExecuteCommandLoggingNONE ExecuteCommandLogging = "NONE"
)

// ExecuteCommandRequest represents the ExecuteCommandRequest structure
type ExecuteCommandRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	Command string `json:"command"`

	Container *string `json:"container,omitempty"`

	Interactive bool `json:"interactive"`

	Task string `json:"task"`
}

// ExecuteCommandResponse represents the ExecuteCommandResponse structure
type ExecuteCommandResponse struct {
	ClusterArn *string `json:"clusterArn,omitempty"`

	ContainerArn *string `json:"containerArn,omitempty"`

	ContainerName *string `json:"containerName,omitempty"`

	Interactive *bool `json:"interactive,omitempty"`

	Session *Session `json:"session,omitempty"`

	TaskArn *string `json:"taskArn,omitempty"`
}

// FSxWindowsFileServerAuthorizationConfig represents the FSxWindowsFileServerAuthorizationConfig structure
type FSxWindowsFileServerAuthorizationConfig struct {
	CredentialsParameter string `json:"credentialsParameter"`

	Domain string `json:"domain"`
}

// FSxWindowsFileServerVolumeConfiguration represents the FSxWindowsFileServerVolumeConfiguration structure
type FSxWindowsFileServerVolumeConfiguration struct {
	AuthorizationConfig FSxWindowsFileServerAuthorizationConfig `json:"authorizationConfig"`

	FileSystemId string `json:"fileSystemId"`

	RootDirectory string `json:"rootDirectory"`
}

// Failure represents the Failure structure
type Failure struct {
	Arn *string `json:"arn,omitempty"`

	Detail *string `json:"detail,omitempty"`

	Reason *string `json:"reason,omitempty"`
}

// Failures represents the Failures type
type Failures []Failure

// FirelensConfiguration represents the FirelensConfiguration structure
type FirelensConfiguration struct {
	Options map[string]string `json:"options,omitempty"`

	Type interface{} `json:"type"`
}

// FirelensConfigurationOptionsMap represents the FirelensConfigurationOptionsMap type
type FirelensConfigurationOptionsMap map[string]string

// FirelensConfigurationType represents the FirelensConfigurationType enum type
type FirelensConfigurationType string

const (
	FirelensConfigurationTypeFLUENTD FirelensConfigurationType = "FLUENTD"

	FirelensConfigurationTypeFLUENTBIT FirelensConfigurationType = "FLUENTBIT"
)

// GetTaskProtectionRequest represents the GetTaskProtectionRequest structure
type GetTaskProtectionRequest struct {
	Cluster string `json:"cluster"`

	Tasks []string `json:"tasks,omitempty"`
}

// GetTaskProtectionResponse represents the GetTaskProtectionResponse structure
type GetTaskProtectionResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	ProtectedTasks []ProtectedTask `json:"protectedTasks,omitempty"`
}

// GpuIds represents the GpuIds type
type GpuIds []string

// HealthCheck represents the HealthCheck structure
type HealthCheck struct {
	Command []string `json:"command"`

	Interval *int32 `json:"interval,omitempty"`

	Retries *int32 `json:"retries,omitempty"`

	StartPeriod *int32 `json:"startPeriod,omitempty"`

	Timeout *int32 `json:"timeout,omitempty"`
}

// HealthStatus represents the HealthStatus enum type
type HealthStatus string

const (
	HealthStatusHEALTHY HealthStatus = "HEALTHY"

	HealthStatusUNHEALTHY HealthStatus = "UNHEALTHY"

	HealthStatusUNKNOWN HealthStatus = "UNKNOWN"
)

// HostEntry represents the HostEntry structure
type HostEntry struct {
	Hostname string `json:"hostname"`

	IpAddress string `json:"ipAddress"`
}

// HostEntryList represents the HostEntryList type
type HostEntryList []HostEntry

// HostVolumeProperties represents the HostVolumeProperties structure
type HostVolumeProperties struct {
	SourcePath *string `json:"sourcePath,omitempty"`
}

// IAMRoleArn represents the IAMRoleArn type
type IAMRoleArn string

// InferenceAccelerator represents the InferenceAccelerator structure
type InferenceAccelerator struct {
	DeviceName string `json:"deviceName"`

	DeviceType string `json:"deviceType"`
}

// InferenceAcceleratorOverride represents the InferenceAcceleratorOverride structure
type InferenceAcceleratorOverride struct {
	DeviceName *string `json:"deviceName,omitempty"`

	DeviceType *string `json:"deviceType,omitempty"`
}

// InferenceAcceleratorOverrides represents the InferenceAcceleratorOverrides type
type InferenceAcceleratorOverrides []InferenceAcceleratorOverride

// InferenceAccelerators represents the InferenceAccelerators type
type InferenceAccelerators []InferenceAccelerator

// InstanceHealthCheckResult represents the InstanceHealthCheckResult structure
type InstanceHealthCheckResult struct {
	LastStatusChange *time.Time `json:"lastStatusChange,omitempty"`

	LastUpdated *time.Time `json:"lastUpdated,omitempty"`

	Status *interface{} `json:"status,omitempty"`

	Type *interface{} `json:"type,omitempty"`
}

// InstanceHealthCheckResultList represents the InstanceHealthCheckResultList type
type InstanceHealthCheckResultList []InstanceHealthCheckResult

// InstanceHealthCheckState represents the InstanceHealthCheckState enum type
type InstanceHealthCheckState string

const (
	InstanceHealthCheckStateOK InstanceHealthCheckState = "OK"

	InstanceHealthCheckStateIMPAIRED InstanceHealthCheckState = "IMPAIRED"

	InstanceHealthCheckStateINSUFFICIENT_DATA InstanceHealthCheckState = "INSUFFICIENT_DATA"

	InstanceHealthCheckStateINITIALIZING InstanceHealthCheckState = "INITIALIZING"
)

// InstanceHealthCheckType represents the InstanceHealthCheckType enum type
type InstanceHealthCheckType string

const (
	InstanceHealthCheckTypeCONTAINER_RUNTIME InstanceHealthCheckType = "CONTAINER_RUNTIME"
)

// Integer represents the Integer type
type Integer int32

// IntegerList represents the IntegerList type
type IntegerList []int32

// InvalidParameterException represents the InvalidParameterException structure
type InvalidParameterException struct {
	Message *string `json:"message,omitempty"`
}

// IpcMode represents the IpcMode enum type
type IpcMode string

const (
	IpcModeHOST IpcMode = "HOST"

	IpcModeTASK IpcMode = "TASK"

	IpcModeNONE IpcMode = "NONE"
)

// KernelCapabilities represents the KernelCapabilities structure
type KernelCapabilities struct {
	Add []string `json:"add,omitempty"`

	Drop []string `json:"drop,omitempty"`
}

// KeyValuePair represents the KeyValuePair structure
type KeyValuePair struct {
	Name *string `json:"name,omitempty"`

	Value *string `json:"value,omitempty"`
}

// LaunchType represents the LaunchType enum type
type LaunchType string

const (
	LaunchTypeEXTERNAL LaunchType = "EXTERNAL"

	LaunchTypeEC2 LaunchType = "EC2"

	LaunchTypeFARGATE LaunchType = "FARGATE"
)

// LimitExceededException represents the LimitExceededException structure
type LimitExceededException struct {
	Message *string `json:"message,omitempty"`
}

// LinuxParameters represents the LinuxParameters structure
type LinuxParameters struct {
	Capabilities *KernelCapabilities `json:"capabilities,omitempty"`

	Devices []Device `json:"devices,omitempty"`

	InitProcessEnabled *bool `json:"initProcessEnabled,omitempty"`

	MaxSwap *int32 `json:"maxSwap,omitempty"`

	SharedMemorySize *int32 `json:"sharedMemorySize,omitempty"`

	Swappiness *int32 `json:"swappiness,omitempty"`

	Tmpfs []Tmpfs `json:"tmpfs,omitempty"`
}

// ListAccountSettingsRequest represents the ListAccountSettingsRequest structure
type ListAccountSettingsRequest struct {
	EffectiveSettings *bool `json:"effectiveSettings,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	Name *interface{} `json:"name,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`

	PrincipalArn *string `json:"principalArn,omitempty"`

	Value *string `json:"value,omitempty"`
}

// ListAccountSettingsResponse represents the ListAccountSettingsResponse structure
type ListAccountSettingsResponse struct {
	NextToken *string `json:"nextToken,omitempty"`

	Settings []Setting `json:"settings,omitempty"`
}

// ListAttributesRequest represents the ListAttributesRequest structure
type ListAttributesRequest struct {
	AttributeName *string `json:"attributeName,omitempty"`

	AttributeValue *string `json:"attributeValue,omitempty"`

	Cluster *string `json:"cluster,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`

	TargetType interface{} `json:"targetType"`
}

// ListAttributesResponse represents the ListAttributesResponse structure
type ListAttributesResponse struct {
	Attributes []Attribute `json:"attributes,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`
}

// ListClustersRequest represents the ListClustersRequest structure
type ListClustersRequest struct {
	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`
}

// ListClustersResponse represents the ListClustersResponse structure
type ListClustersResponse struct {
	ClusterArns []string `json:"clusterArns,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`
}

// ListContainerInstancesRequest represents the ListContainerInstancesRequest structure
type ListContainerInstancesRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	Filter *string `json:"filter,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`

	Status *interface{} `json:"status,omitempty"`
}

// ListContainerInstancesResponse represents the ListContainerInstancesResponse structure
type ListContainerInstancesResponse struct {
	ContainerInstanceArns []string `json:"containerInstanceArns,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`
}

// ListServiceDeploymentsRequest represents the ListServiceDeploymentsRequest structure
type ListServiceDeploymentsRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	CreatedAt *CreatedAt `json:"createdAt,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`

	Service string `json:"service"`

	Status []interface{} `json:"status,omitempty"`
}

// ListServiceDeploymentsResponse represents the ListServiceDeploymentsResponse structure
type ListServiceDeploymentsResponse struct {
	NextToken *string `json:"nextToken,omitempty"`

	ServiceDeployments []ServiceDeploymentBrief `json:"serviceDeployments,omitempty"`
}

// ListServicesByNamespaceRequest represents the ListServicesByNamespaceRequest structure
type ListServicesByNamespaceRequest struct {
	MaxResults *int32 `json:"maxResults,omitempty"`

	Namespace string `json:"namespace"`

	NextToken *string `json:"nextToken,omitempty"`
}

// ListServicesByNamespaceResponse represents the ListServicesByNamespaceResponse structure
type ListServicesByNamespaceResponse struct {
	NextToken *string `json:"nextToken,omitempty"`

	ServiceArns []string `json:"serviceArns,omitempty"`
}

// ListServicesRequest represents the ListServicesRequest structure
type ListServicesRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`

	SchedulingStrategy *interface{} `json:"schedulingStrategy,omitempty"`
}

// ListServicesResponse represents the ListServicesResponse structure
type ListServicesResponse struct {
	NextToken *string `json:"nextToken,omitempty"`

	ServiceArns []string `json:"serviceArns,omitempty"`
}

// ListTagsForResourceRequest represents the ListTagsForResourceRequest structure
type ListTagsForResourceRequest struct {
	ResourceArn string `json:"resourceArn"`
}

// ListTagsForResourceResponse represents the ListTagsForResourceResponse structure
type ListTagsForResourceResponse struct {
	Tags []Tag `json:"tags,omitempty"`
}

// ListTaskDefinitionFamiliesRequest represents the ListTaskDefinitionFamiliesRequest structure
type ListTaskDefinitionFamiliesRequest struct {
	FamilyPrefix *string `json:"familyPrefix,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`

	Status *interface{} `json:"status,omitempty"`
}

// ListTaskDefinitionFamiliesResponse represents the ListTaskDefinitionFamiliesResponse structure
type ListTaskDefinitionFamiliesResponse struct {
	Families []string `json:"families,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`
}

// ListTaskDefinitionsRequest represents the ListTaskDefinitionsRequest structure
type ListTaskDefinitionsRequest struct {
	FamilyPrefix *string `json:"familyPrefix,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`

	Sort *interface{} `json:"sort,omitempty"`

	Status *interface{} `json:"status,omitempty"`
}

// ListTaskDefinitionsResponse represents the ListTaskDefinitionsResponse structure
type ListTaskDefinitionsResponse struct {
	NextToken *string `json:"nextToken,omitempty"`

	TaskDefinitionArns []string `json:"taskDefinitionArns,omitempty"`
}

// ListTasksRequest represents the ListTasksRequest structure
type ListTasksRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	ContainerInstance *string `json:"containerInstance,omitempty"`

	DesiredStatus *interface{} `json:"desiredStatus,omitempty"`

	Family *string `json:"family,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	MaxResults *int32 `json:"maxResults,omitempty"`

	NextToken *string `json:"nextToken,omitempty"`

	ServiceName *string `json:"serviceName,omitempty"`

	StartedBy *string `json:"startedBy,omitempty"`
}

// ListTasksResponse represents the ListTasksResponse structure
type ListTasksResponse struct {
	NextToken *string `json:"nextToken,omitempty"`

	TaskArns []string `json:"taskArns,omitempty"`
}

// LoadBalancer represents the LoadBalancer structure
type LoadBalancer struct {
	ContainerName *string `json:"containerName,omitempty"`

	ContainerPort *int32 `json:"containerPort,omitempty"`

	LoadBalancerName *string `json:"loadBalancerName,omitempty"`

	TargetGroupArn *string `json:"targetGroupArn,omitempty"`
}

// LoadBalancers represents the LoadBalancers type
type LoadBalancers []LoadBalancer

// LogConfiguration represents the LogConfiguration structure
type LogConfiguration struct {
	LogDriver interface{} `json:"logDriver"`

	Options map[string]string `json:"options,omitempty"`

	SecretOptions []Secret `json:"secretOptions,omitempty"`
}

// LogConfigurationOptionsMap represents the LogConfigurationOptionsMap type
type LogConfigurationOptionsMap map[string]string

// LogDriver represents the LogDriver enum type
type LogDriver string

const (
	LogDriverSPLUNK LogDriver = "SPLUNK"

	LogDriverAWSFIRELENS LogDriver = "AWSFIRELENS"

	LogDriverJSON_FILE LogDriver = "JSON_FILE"

	LogDriverSYSLOG LogDriver = "SYSLOG"

	LogDriverJOURNALD LogDriver = "JOURNALD"

	LogDriverGELF LogDriver = "GELF"

	LogDriverFLUENTD LogDriver = "FLUENTD"

	LogDriverAWSLOGS LogDriver = "AWSLOGS"
)

// Long represents the Long type
type Long int64

// ManagedAgent represents the ManagedAgent structure
type ManagedAgent struct {
	LastStartedAt *time.Time `json:"lastStartedAt,omitempty"`

	LastStatus *string `json:"lastStatus,omitempty"`

	Name *interface{} `json:"name,omitempty"`

	Reason *string `json:"reason,omitempty"`
}

// ManagedAgentName represents the ManagedAgentName enum type
type ManagedAgentName string

const (
	ManagedAgentNameExecuteCommandAgent ManagedAgentName = "ExecuteCommandAgent"
)

// ManagedAgentStateChange represents the ManagedAgentStateChange structure
type ManagedAgentStateChange struct {
	ContainerName string `json:"containerName"`

	ManagedAgentName interface{} `json:"managedAgentName"`

	Reason *string `json:"reason,omitempty"`

	Status string `json:"status"`
}

// ManagedAgentStateChanges represents the ManagedAgentStateChanges type
type ManagedAgentStateChanges []ManagedAgentStateChange

// ManagedAgents represents the ManagedAgents type
type ManagedAgents []ManagedAgent

// ManagedDraining represents the ManagedDraining enum type
type ManagedDraining string

const (
	ManagedDrainingENABLED ManagedDraining = "ENABLED"

	ManagedDrainingDISABLED ManagedDraining = "DISABLED"
)

// ManagedScaling represents the ManagedScaling structure
type ManagedScaling struct {
	InstanceWarmupPeriod *int32 `json:"instanceWarmupPeriod,omitempty"`

	MaximumScalingStepSize *int32 `json:"maximumScalingStepSize,omitempty"`

	MinimumScalingStepSize *int32 `json:"minimumScalingStepSize,omitempty"`

	Status *interface{} `json:"status,omitempty"`

	TargetCapacity *int32 `json:"targetCapacity,omitempty"`
}

// ManagedScalingInstanceWarmupPeriod represents the ManagedScalingInstanceWarmupPeriod type
type ManagedScalingInstanceWarmupPeriod int32

// ManagedScalingStatus represents the ManagedScalingStatus enum type
type ManagedScalingStatus string

const (
	ManagedScalingStatusENABLED ManagedScalingStatus = "ENABLED"

	ManagedScalingStatusDISABLED ManagedScalingStatus = "DISABLED"
)

// ManagedScalingStepSize represents the ManagedScalingStepSize type
type ManagedScalingStepSize int32

// ManagedScalingTargetCapacity represents the ManagedScalingTargetCapacity type
type ManagedScalingTargetCapacity int32

// ManagedStorageConfiguration represents the ManagedStorageConfiguration structure
type ManagedStorageConfiguration struct {
	FargateEphemeralStorageKmsKeyId *string `json:"fargateEphemeralStorageKmsKeyId,omitempty"`

	KmsKeyId *string `json:"kmsKeyId,omitempty"`
}

// ManagedTerminationProtection represents the ManagedTerminationProtection enum type
type ManagedTerminationProtection string

const (
	ManagedTerminationProtectionENABLED ManagedTerminationProtection = "ENABLED"

	ManagedTerminationProtectionDISABLED ManagedTerminationProtection = "DISABLED"
)

// MissingVersionException represents the MissingVersionException structure
type MissingVersionException struct {
	Message *string `json:"message,omitempty"`
}

// MountPoint represents the MountPoint structure
type MountPoint struct {
	ContainerPath *string `json:"containerPath,omitempty"`

	ReadOnly *bool `json:"readOnly,omitempty"`

	SourceVolume *string `json:"sourceVolume,omitempty"`
}

// MountPointList represents the MountPointList type
type MountPointList []MountPoint

// NamespaceNotFoundException represents the NamespaceNotFoundException structure
type NamespaceNotFoundException struct {
	Message *string `json:"message,omitempty"`
}

// NetworkBinding represents the NetworkBinding structure
type NetworkBinding struct {
	BindIP *string `json:"bindIP,omitempty"`

	ContainerPort *int32 `json:"containerPort,omitempty"`

	ContainerPortRange *string `json:"containerPortRange,omitempty"`

	HostPort *int32 `json:"hostPort,omitempty"`

	HostPortRange *string `json:"hostPortRange,omitempty"`

	Protocol *interface{} `json:"protocol,omitempty"`
}

// NetworkBindings represents the NetworkBindings type
type NetworkBindings []NetworkBinding

// NetworkConfiguration represents the NetworkConfiguration structure
type NetworkConfiguration struct {
	AwsvpcConfiguration *AwsVpcConfiguration `json:"awsvpcConfiguration,omitempty"`
}

// NetworkInterface represents the NetworkInterface structure
type NetworkInterface struct {
	AttachmentId *string `json:"attachmentId,omitempty"`

	Ipv6Address *string `json:"ipv6Address,omitempty"`

	PrivateIpv4Address *string `json:"privateIpv4Address,omitempty"`
}

// NetworkInterfaces represents the NetworkInterfaces type
type NetworkInterfaces []NetworkInterface

// NetworkMode represents the NetworkMode enum type
type NetworkMode string

const (
	NetworkModeBRIDGE NetworkMode = "BRIDGE"

	NetworkModeHOST NetworkMode = "HOST"

	NetworkModeAWSVPC NetworkMode = "AWSVPC"

	NetworkModeNONE NetworkMode = "NONE"
)

// NoUpdateAvailableException represents the NoUpdateAvailableException structure
type NoUpdateAvailableException struct {
	Message *string `json:"message,omitempty"`
}

// OSFamily represents the OSFamily enum type
type OSFamily string

const (
	OSFamilyWINDOWS_SERVER_20H2_CORE OSFamily = "WINDOWS_SERVER_20H2_CORE"

	OSFamilyLINUX OSFamily = "LINUX"

	OSFamilyWINDOWS_SERVER_2019_FULL OSFamily = "WINDOWS_SERVER_2019_FULL"

	OSFamilyWINDOWS_SERVER_2019_CORE OSFamily = "WINDOWS_SERVER_2019_CORE"

	OSFamilyWINDOWS_SERVER_2016_FULL OSFamily = "WINDOWS_SERVER_2016_FULL"

	OSFamilyWINDOWS_SERVER_2004_CORE OSFamily = "WINDOWS_SERVER_2004_CORE"

	OSFamilyWINDOWS_SERVER_2022_CORE OSFamily = "WINDOWS_SERVER_2022_CORE"

	OSFamilyWINDOWS_SERVER_2022_FULL OSFamily = "WINDOWS_SERVER_2022_FULL"
)

// PidMode represents the PidMode enum type
type PidMode string

const (
	PidModeHOST PidMode = "HOST"

	PidModeTASK PidMode = "TASK"
)

// PlacementConstraint represents the PlacementConstraint structure
type PlacementConstraint struct {
	Expression *string `json:"expression,omitempty"`

	Type *interface{} `json:"type,omitempty"`
}

// PlacementConstraintType represents the PlacementConstraintType enum type
type PlacementConstraintType string

const (
	PlacementConstraintTypeDISTINCT_INSTANCE PlacementConstraintType = "DISTINCT_INSTANCE"

	PlacementConstraintTypeMEMBER_OF PlacementConstraintType = "MEMBER_OF"
)

// PlacementConstraints represents the PlacementConstraints type
type PlacementConstraints []PlacementConstraint

// PlacementStrategies represents the PlacementStrategies type
type PlacementStrategies []PlacementStrategy

// PlacementStrategy represents the PlacementStrategy structure
type PlacementStrategy struct {
	Field *string `json:"field,omitempty"`

	Type *interface{} `json:"type,omitempty"`
}

// PlacementStrategyType represents the PlacementStrategyType enum type
type PlacementStrategyType string

const (
	PlacementStrategyTypeRANDOM PlacementStrategyType = "RANDOM"

	PlacementStrategyTypeSPREAD PlacementStrategyType = "SPREAD"

	PlacementStrategyTypeBINPACK PlacementStrategyType = "BINPACK"
)

// PlatformDevice represents the PlatformDevice structure
type PlatformDevice struct {
	Id string `json:"id"`

	Type interface{} `json:"type"`
}

// PlatformDeviceType represents the PlatformDeviceType enum type
type PlatformDeviceType string

const (
	PlatformDeviceTypeGPU PlatformDeviceType = "GPU"
)

// PlatformDevices represents the PlatformDevices type
type PlatformDevices []PlatformDevice

// PlatformTaskDefinitionIncompatibilityException represents the PlatformTaskDefinitionIncompatibilityException structure
type PlatformTaskDefinitionIncompatibilityException struct {
	Message *string `json:"message,omitempty"`
}

// PlatformUnknownException represents the PlatformUnknownException structure
type PlatformUnknownException struct {
	Message *string `json:"message,omitempty"`
}

// PortMapping represents the PortMapping structure
type PortMapping struct {
	AppProtocol *interface{} `json:"appProtocol,omitempty"`

	ContainerPort *int32 `json:"containerPort,omitempty"`

	ContainerPortRange *string `json:"containerPortRange,omitempty"`

	HostPort *int32 `json:"hostPort,omitempty"`

	Name *string `json:"name,omitempty"`

	Protocol *interface{} `json:"protocol,omitempty"`
}

// PortMappingList represents the PortMappingList type
type PortMappingList []PortMapping

// PortNumber represents the PortNumber type
type PortNumber int32

// PropagateTags represents the PropagateTags enum type
type PropagateTags string

const (
	PropagateTagsTASK_DEFINITION PropagateTags = "TASK_DEFINITION"

	PropagateTagsSERVICE PropagateTags = "SERVICE"

	PropagateTagsNONE PropagateTags = "NONE"
)

// ProtectedTask represents the ProtectedTask structure
type ProtectedTask struct {
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`

	ProtectionEnabled *bool `json:"protectionEnabled,omitempty"`

	TaskArn *string `json:"taskArn,omitempty"`
}

// ProtectedTasks represents the ProtectedTasks type
type ProtectedTasks []ProtectedTask

// ProxyConfiguration represents the ProxyConfiguration structure
type ProxyConfiguration struct {
	ContainerName string `json:"containerName"`

	Properties []KeyValuePair `json:"properties,omitempty"`

	Type *interface{} `json:"type,omitempty"`
}

// ProxyConfigurationProperties represents the ProxyConfigurationProperties type
type ProxyConfigurationProperties []KeyValuePair

// ProxyConfigurationType represents the ProxyConfigurationType enum type
type ProxyConfigurationType string

const (
	ProxyConfigurationTypeAPPMESH ProxyConfigurationType = "APPMESH"
)

// PutAccountSettingDefaultRequest represents the PutAccountSettingDefaultRequest structure
type PutAccountSettingDefaultRequest struct {
	Name interface{} `json:"name"`

	Value string `json:"value"`
}

// PutAccountSettingDefaultResponse represents the PutAccountSettingDefaultResponse structure
type PutAccountSettingDefaultResponse struct {
	Setting *Setting `json:"setting,omitempty"`
}

// PutAccountSettingRequest represents the PutAccountSettingRequest structure
type PutAccountSettingRequest struct {
	Name interface{} `json:"name"`

	PrincipalArn *string `json:"principalArn,omitempty"`

	Value string `json:"value"`
}

// PutAccountSettingResponse represents the PutAccountSettingResponse structure
type PutAccountSettingResponse struct {
	Setting *Setting `json:"setting,omitempty"`
}

// PutAttributesRequest represents the PutAttributesRequest structure
type PutAttributesRequest struct {
	Attributes []Attribute `json:"attributes"`

	Cluster *string `json:"cluster,omitempty"`
}

// PutAttributesResponse represents the PutAttributesResponse structure
type PutAttributesResponse struct {
	Attributes []Attribute `json:"attributes,omitempty"`
}

// PutClusterCapacityProvidersRequest represents the PutClusterCapacityProvidersRequest structure
type PutClusterCapacityProvidersRequest struct {
	CapacityProviders []string `json:"capacityProviders"`

	Cluster string `json:"cluster"`

	DefaultCapacityProviderStrategy []CapacityProviderStrategyItem `json:"defaultCapacityProviderStrategy"`
}

// PutClusterCapacityProvidersResponse represents the PutClusterCapacityProvidersResponse structure
type PutClusterCapacityProvidersResponse struct {
	Cluster *Cluster `json:"cluster,omitempty"`
}

// RegisterContainerInstanceRequest represents the RegisterContainerInstanceRequest structure
type RegisterContainerInstanceRequest struct {
	Attributes []Attribute `json:"attributes,omitempty"`

	Cluster *string `json:"cluster,omitempty"`

	ContainerInstanceArn *string `json:"containerInstanceArn,omitempty"`

	InstanceIdentityDocument *string `json:"instanceIdentityDocument,omitempty"`

	InstanceIdentityDocumentSignature *string `json:"instanceIdentityDocumentSignature,omitempty"`

	PlatformDevices []PlatformDevice `json:"platformDevices,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TotalResources []Resource `json:"totalResources,omitempty"`

	VersionInfo *VersionInfo `json:"versionInfo,omitempty"`
}

// RegisterContainerInstanceResponse represents the RegisterContainerInstanceResponse structure
type RegisterContainerInstanceResponse struct {
	ContainerInstance *ContainerInstance `json:"containerInstance,omitempty"`
}

// RegisterTaskDefinitionRequest represents the RegisterTaskDefinitionRequest structure
type RegisterTaskDefinitionRequest struct {
	ContainerDefinitions []ContainerDefinition `json:"containerDefinitions"`

	Cpu *string `json:"cpu,omitempty"`

	EnableFaultInjection *bool `json:"enableFaultInjection,omitempty"`

	EphemeralStorage *EphemeralStorage `json:"ephemeralStorage,omitempty"`

	ExecutionRoleArn *string `json:"executionRoleArn,omitempty"`

	Family string `json:"family"`

	InferenceAccelerators []InferenceAccelerator `json:"inferenceAccelerators,omitempty"`

	IpcMode *interface{} `json:"ipcMode,omitempty"`

	Memory *string `json:"memory,omitempty"`

	NetworkMode *interface{} `json:"networkMode,omitempty"`

	PidMode *interface{} `json:"pidMode,omitempty"`

	PlacementConstraints []TaskDefinitionPlacementConstraint `json:"placementConstraints,omitempty"`

	ProxyConfiguration *ProxyConfiguration `json:"proxyConfiguration,omitempty"`

	RequiresCompatibilities []interface{} `json:"requiresCompatibilities,omitempty"`

	RuntimePlatform *RuntimePlatform `json:"runtimePlatform,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TaskRoleArn *string `json:"taskRoleArn,omitempty"`

	Volumes []Volume `json:"volumes,omitempty"`
}

// RegisterTaskDefinitionResponse represents the RegisterTaskDefinitionResponse structure
type RegisterTaskDefinitionResponse struct {
	Tags []Tag `json:"tags,omitempty"`

	TaskDefinition *TaskDefinition `json:"taskDefinition,omitempty"`
}

// RepositoryCredentials represents the RepositoryCredentials structure
type RepositoryCredentials struct {
	CredentialsParameter string `json:"credentialsParameter"`
}

// RequiresAttributes represents the RequiresAttributes type
type RequiresAttributes []Attribute

// Resource represents the Resource structure
type Resource struct {
	DoubleValue *float64 `json:"doubleValue,omitempty"`

	IntegerValue *int32 `json:"integerValue,omitempty"`

	LongValue *int64 `json:"longValue,omitempty"`

	Name *string `json:"name,omitempty"`

	StringSetValue []string `json:"stringSetValue,omitempty"`

	Type *string `json:"type,omitempty"`
}

// ResourceIds represents the ResourceIds type
type ResourceIds []string

// ResourceInUseException represents the ResourceInUseException structure
type ResourceInUseException struct {
	Message *string `json:"message,omitempty"`
}

// ResourceNotFoundException represents the ResourceNotFoundException structure
type ResourceNotFoundException struct {
	Message *string `json:"message,omitempty"`
}

// ResourceRequirement represents the ResourceRequirement structure
type ResourceRequirement struct {
	Type interface{} `json:"type"`

	Value string `json:"value"`
}

// ResourceRequirements represents the ResourceRequirements type
type ResourceRequirements []ResourceRequirement

// ResourceType represents the ResourceType enum type
type ResourceType string

const (
	ResourceTypeGPU ResourceType = "GPU"

	ResourceTypeINFERENCE_ACCELERATOR ResourceType = "INFERENCE_ACCELERATOR"
)

// Resources represents the Resources type
type Resources []Resource

// Rollback represents the Rollback structure
type Rollback struct {
	Reason *string `json:"reason,omitempty"`

	ServiceRevisionArn *string `json:"serviceRevisionArn,omitempty"`

	StartedAt *time.Time `json:"startedAt,omitempty"`
}

// RunTaskRequest represents the RunTaskRequest structure
type RunTaskRequest struct {
	CapacityProviderStrategy []CapacityProviderStrategyItem `json:"capacityProviderStrategy,omitempty"`

	ClientToken *string `json:"clientToken,omitempty"`

	Cluster *string `json:"cluster,omitempty"`

	Count *int32 `json:"count,omitempty"`

	EnableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`

	EnableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`

	Group *string `json:"group,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	Overrides *TaskOverride `json:"overrides,omitempty"`

	PlacementConstraints []PlacementConstraint `json:"placementConstraints,omitempty"`

	PlacementStrategy []PlacementStrategy `json:"placementStrategy,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	PropagateTags *interface{} `json:"propagateTags,omitempty"`

	ReferenceId *string `json:"referenceId,omitempty"`

	StartedBy *string `json:"startedBy,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TaskDefinition string `json:"taskDefinition"`

	VolumeConfigurations []TaskVolumeConfiguration `json:"volumeConfigurations,omitempty"`
}

// RunTaskResponse represents the RunTaskResponse structure
type RunTaskResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	Tasks []Task `json:"tasks,omitempty"`
}

// RuntimePlatform represents the RuntimePlatform structure
type RuntimePlatform struct {
	CpuArchitecture *interface{} `json:"cpuArchitecture,omitempty"`

	OperatingSystemFamily *interface{} `json:"operatingSystemFamily,omitempty"`
}

// Scale represents the Scale structure
type Scale struct {
	Unit *interface{} `json:"unit,omitempty"`

	Value *float64 `json:"value,omitempty"`
}

// ScaleUnit represents the ScaleUnit enum type
type ScaleUnit string

const (
	ScaleUnitPERCENT ScaleUnit = "PERCENT"
)

// SchedulingStrategy represents the SchedulingStrategy enum type
type SchedulingStrategy string

const (
	SchedulingStrategyREPLICA SchedulingStrategy = "REPLICA"

	SchedulingStrategyDAEMON SchedulingStrategy = "DAEMON"
)

// Scope represents the Scope enum type
type Scope string

const (
	ScopeSHARED Scope = "SHARED"

	ScopeTASK Scope = "TASK"
)

// Secret represents the Secret structure
type Secret struct {
	Name string `json:"name"`

	ValueFrom string `json:"valueFrom"`
}

// SecretList represents the SecretList type
type SecretList []Secret

// SensitiveString represents the SensitiveString type
type SensitiveString string

// ServerException represents the ServerException structure
type ServerException struct {
	Message *string `json:"message,omitempty"`
}

// Service represents the Service structure
type Service struct {
	AvailabilityZoneRebalancing *interface{} `json:"availabilityZoneRebalancing,omitempty"`

	CapacityProviderStrategy []CapacityProviderStrategyItem `json:"capacityProviderStrategy,omitempty"`

	ClusterArn *string `json:"clusterArn,omitempty"`

	CreatedAt *time.Time `json:"createdAt,omitempty"`

	CreatedBy *string `json:"createdBy,omitempty"`

	DeploymentConfiguration *DeploymentConfiguration `json:"deploymentConfiguration,omitempty"`

	DeploymentController *DeploymentController `json:"deploymentController,omitempty"`

	Deployments []Deployment `json:"deployments,omitempty"`

	DesiredCount *int32 `json:"desiredCount,omitempty"`

	EnableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`

	EnableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`

	Events []ServiceEvent `json:"events,omitempty"`

	HealthCheckGracePeriodSeconds *int32 `json:"healthCheckGracePeriodSeconds,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	LoadBalancers []LoadBalancer `json:"loadBalancers,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	PendingCount *int32 `json:"pendingCount,omitempty"`

	PlacementConstraints []PlacementConstraint `json:"placementConstraints,omitempty"`

	PlacementStrategy []PlacementStrategy `json:"placementStrategy,omitempty"`

	PlatformFamily *string `json:"platformFamily,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	PropagateTags *interface{} `json:"propagateTags,omitempty"`

	RoleArn *string `json:"roleArn,omitempty"`

	RunningCount *int32 `json:"runningCount,omitempty"`

	SchedulingStrategy *interface{} `json:"schedulingStrategy,omitempty"`

	ServiceArn *string `json:"serviceArn,omitempty"`

	ServiceName *string `json:"serviceName,omitempty"`

	ServiceRegistries []ServiceRegistry `json:"serviceRegistries,omitempty"`

	Status *string `json:"status,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TaskDefinition *string `json:"taskDefinition,omitempty"`

	TaskSets []TaskSet `json:"taskSets,omitempty"`
}

// ServiceConnectClientAlias represents the ServiceConnectClientAlias structure
type ServiceConnectClientAlias struct {
	DnsName *string `json:"dnsName,omitempty"`

	Port int32 `json:"port"`
}

// ServiceConnectClientAliasList represents the ServiceConnectClientAliasList type
type ServiceConnectClientAliasList []ServiceConnectClientAlias

// ServiceConnectConfiguration represents the ServiceConnectConfiguration structure
type ServiceConnectConfiguration struct {
	Enabled bool `json:"enabled"`

	LogConfiguration *LogConfiguration `json:"logConfiguration,omitempty"`

	Namespace *string `json:"namespace,omitempty"`

	Services []ServiceConnectService `json:"services,omitempty"`
}

// ServiceConnectService represents the ServiceConnectService structure
type ServiceConnectService struct {
	ClientAliases []ServiceConnectClientAlias `json:"clientAliases,omitempty"`

	DiscoveryName *string `json:"discoveryName,omitempty"`

	IngressPortOverride *int32 `json:"ingressPortOverride,omitempty"`

	PortName string `json:"portName"`

	Timeout *TimeoutConfiguration `json:"timeout,omitempty"`

	Tls *ServiceConnectTlsConfiguration `json:"tls,omitempty"`
}

// ServiceConnectServiceList represents the ServiceConnectServiceList type
type ServiceConnectServiceList []ServiceConnectService

// ServiceConnectServiceResource represents the ServiceConnectServiceResource structure
type ServiceConnectServiceResource struct {
	DiscoveryArn *string `json:"discoveryArn,omitempty"`

	DiscoveryName *string `json:"discoveryName,omitempty"`
}

// ServiceConnectServiceResourceList represents the ServiceConnectServiceResourceList type
type ServiceConnectServiceResourceList []ServiceConnectServiceResource

// ServiceConnectTlsCertificateAuthority represents the ServiceConnectTlsCertificateAuthority structure
type ServiceConnectTlsCertificateAuthority struct {
	AwsPcaAuthorityArn *string `json:"awsPcaAuthorityArn,omitempty"`
}

// ServiceConnectTlsConfiguration represents the ServiceConnectTlsConfiguration structure
type ServiceConnectTlsConfiguration struct {
	IssuerCertificateAuthority ServiceConnectTlsCertificateAuthority `json:"issuerCertificateAuthority"`

	KmsKey *string `json:"kmsKey,omitempty"`

	RoleArn *string `json:"roleArn,omitempty"`
}

// ServiceDeployment represents the ServiceDeployment structure
type ServiceDeployment struct {
	Alarms *ServiceDeploymentAlarms `json:"alarms,omitempty"`

	ClusterArn *string `json:"clusterArn,omitempty"`

	CreatedAt *time.Time `json:"createdAt,omitempty"`

	DeploymentCircuitBreaker *ServiceDeploymentCircuitBreaker `json:"deploymentCircuitBreaker,omitempty"`

	DeploymentConfiguration *DeploymentConfiguration `json:"deploymentConfiguration,omitempty"`

	FinishedAt *time.Time `json:"finishedAt,omitempty"`

	Rollback *Rollback `json:"rollback,omitempty"`

	ServiceArn *string `json:"serviceArn,omitempty"`

	ServiceDeploymentArn *string `json:"serviceDeploymentArn,omitempty"`

	SourceServiceRevisions []ServiceRevisionSummary `json:"sourceServiceRevisions,omitempty"`

	StartedAt *time.Time `json:"startedAt,omitempty"`

	Status *interface{} `json:"status,omitempty"`

	StatusReason *string `json:"statusReason,omitempty"`

	StoppedAt *time.Time `json:"stoppedAt,omitempty"`

	TargetServiceRevision *ServiceRevisionSummary `json:"targetServiceRevision,omitempty"`

	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// ServiceDeploymentAlarms represents the ServiceDeploymentAlarms structure
type ServiceDeploymentAlarms struct {
	AlarmNames []string `json:"alarmNames,omitempty"`

	Status *interface{} `json:"status,omitempty"`

	TriggeredAlarmNames []string `json:"triggeredAlarmNames,omitempty"`
}

// ServiceDeploymentBrief represents the ServiceDeploymentBrief structure
type ServiceDeploymentBrief struct {
	ClusterArn *string `json:"clusterArn,omitempty"`

	CreatedAt *time.Time `json:"createdAt,omitempty"`

	FinishedAt *time.Time `json:"finishedAt,omitempty"`

	ServiceArn *string `json:"serviceArn,omitempty"`

	ServiceDeploymentArn *string `json:"serviceDeploymentArn,omitempty"`

	StartedAt *time.Time `json:"startedAt,omitempty"`

	Status *interface{} `json:"status,omitempty"`

	StatusReason *string `json:"statusReason,omitempty"`

	TargetServiceRevisionArn *string `json:"targetServiceRevisionArn,omitempty"`
}

// ServiceDeploymentCircuitBreaker represents the ServiceDeploymentCircuitBreaker structure
type ServiceDeploymentCircuitBreaker struct {
	FailureCount *int32 `json:"failureCount,omitempty"`

	Status *interface{} `json:"status,omitempty"`

	Threshold *int32 `json:"threshold,omitempty"`
}

// ServiceDeploymentNotFoundException represents the ServiceDeploymentNotFoundException structure
type ServiceDeploymentNotFoundException struct {
	Message *string `json:"message,omitempty"`
}

// ServiceDeploymentRollbackMonitorsStatus represents the ServiceDeploymentRollbackMonitorsStatus enum type
type ServiceDeploymentRollbackMonitorsStatus string

const (
	ServiceDeploymentRollbackMonitorsStatusMONITORING ServiceDeploymentRollbackMonitorsStatus = "MONITORING"

	ServiceDeploymentRollbackMonitorsStatusMONITORING_COMPLETE ServiceDeploymentRollbackMonitorsStatus = "MONITORING_COMPLETE"

	ServiceDeploymentRollbackMonitorsStatusDISABLED ServiceDeploymentRollbackMonitorsStatus = "DISABLED"

	ServiceDeploymentRollbackMonitorsStatusTRIGGERED ServiceDeploymentRollbackMonitorsStatus = "TRIGGERED"
)

// ServiceDeploymentStatus represents the ServiceDeploymentStatus enum type
type ServiceDeploymentStatus string

const (
	ServiceDeploymentStatusPENDING ServiceDeploymentStatus = "PENDING"

	ServiceDeploymentStatusSUCCESSFUL ServiceDeploymentStatus = "SUCCESSFUL"

	ServiceDeploymentStatusSTOPPED ServiceDeploymentStatus = "STOPPED"

	ServiceDeploymentStatusSTOP_REQUESTED ServiceDeploymentStatus = "STOP_REQUESTED"

	ServiceDeploymentStatusROLLBACK_REQUESTED ServiceDeploymentStatus = "ROLLBACK_REQUESTED"

	ServiceDeploymentStatusROLLBACK_SUCCESSFUL ServiceDeploymentStatus = "ROLLBACK_SUCCESSFUL"

	ServiceDeploymentStatusROLLBACK_FAILED ServiceDeploymentStatus = "ROLLBACK_FAILED"

	ServiceDeploymentStatusIN_PROGRESS ServiceDeploymentStatus = "IN_PROGRESS"

	ServiceDeploymentStatusROLLBACK_IN_PROGRESS ServiceDeploymentStatus = "ROLLBACK_IN_PROGRESS"
)

// ServiceDeploymentStatusList represents the ServiceDeploymentStatusList type
type ServiceDeploymentStatusList []interface{}

// ServiceDeployments represents the ServiceDeployments type
type ServiceDeployments []ServiceDeployment

// ServiceDeploymentsBrief represents the ServiceDeploymentsBrief type
type ServiceDeploymentsBrief []ServiceDeploymentBrief

// ServiceEvent represents the ServiceEvent structure
type ServiceEvent struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	Id *string `json:"id,omitempty"`

	Message *string `json:"message,omitempty"`
}

// ServiceEvents represents the ServiceEvents type
type ServiceEvents []ServiceEvent

// ServiceField represents the ServiceField enum type
type ServiceField string

const (
	ServiceFieldTAGS ServiceField = "TAGS"
)

// ServiceFieldList represents the ServiceFieldList type
type ServiceFieldList []interface{}

// ServiceManagedEBSVolumeConfiguration represents the ServiceManagedEBSVolumeConfiguration structure
type ServiceManagedEBSVolumeConfiguration struct {
	Encrypted *bool `json:"encrypted,omitempty"`

	FilesystemType *interface{} `json:"filesystemType,omitempty"`

	Iops *int32 `json:"iops,omitempty"`

	KmsKeyId *string `json:"kmsKeyId,omitempty"`

	RoleArn string `json:"roleArn"`

	SizeInGiB *int32 `json:"sizeInGiB,omitempty"`

	SnapshotId *string `json:"snapshotId,omitempty"`

	TagSpecifications []EBSTagSpecification `json:"tagSpecifications,omitempty"`

	Throughput *int32 `json:"throughput,omitempty"`

	VolumeInitializationRate *int32 `json:"volumeInitializationRate,omitempty"`

	VolumeType *string `json:"volumeType,omitempty"`
}

// ServiceNotActiveException represents the ServiceNotActiveException structure
type ServiceNotActiveException struct {
	Message *string `json:"message,omitempty"`
}

// ServiceNotFoundException represents the ServiceNotFoundException structure
type ServiceNotFoundException struct {
	Message *string `json:"message,omitempty"`
}

// ServiceRegistries represents the ServiceRegistries type
type ServiceRegistries []ServiceRegistry

// ServiceRegistry represents the ServiceRegistry structure
type ServiceRegistry struct {
	ContainerName *string `json:"containerName,omitempty"`

	ContainerPort *int32 `json:"containerPort,omitempty"`

	Port *int32 `json:"port,omitempty"`

	RegistryArn *string `json:"registryArn,omitempty"`
}

// ServiceRevision represents the ServiceRevision structure
type ServiceRevision struct {
	CapacityProviderStrategy []CapacityProviderStrategyItem `json:"capacityProviderStrategy,omitempty"`

	ClusterArn *string `json:"clusterArn,omitempty"`

	ContainerImages []ContainerImage `json:"containerImages,omitempty"`

	CreatedAt *time.Time `json:"createdAt,omitempty"`

	FargateEphemeralStorage *DeploymentEphemeralStorage `json:"fargateEphemeralStorage,omitempty"`

	GuardDutyEnabled *bool `json:"guardDutyEnabled,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	LoadBalancers []LoadBalancer `json:"loadBalancers,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	PlatformFamily *string `json:"platformFamily,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	ServiceArn *string `json:"serviceArn,omitempty"`

	ServiceConnectConfiguration *ServiceConnectConfiguration `json:"serviceConnectConfiguration,omitempty"`

	ServiceRegistries []ServiceRegistry `json:"serviceRegistries,omitempty"`

	ServiceRevisionArn *string `json:"serviceRevisionArn,omitempty"`

	TaskDefinition *string `json:"taskDefinition,omitempty"`

	VolumeConfigurations []ServiceVolumeConfiguration `json:"volumeConfigurations,omitempty"`

	VpcLatticeConfigurations []VpcLatticeConfiguration `json:"vpcLatticeConfigurations,omitempty"`
}

// ServiceRevisionSummary represents the ServiceRevisionSummary structure
type ServiceRevisionSummary struct {
	Arn *string `json:"arn,omitempty"`

	PendingTaskCount *int32 `json:"pendingTaskCount,omitempty"`

	RequestedTaskCount *int32 `json:"requestedTaskCount,omitempty"`

	RunningTaskCount *int32 `json:"runningTaskCount,omitempty"`
}

// ServiceRevisions represents the ServiceRevisions type
type ServiceRevisions []ServiceRevision

// ServiceRevisionsSummaryList represents the ServiceRevisionsSummaryList type
type ServiceRevisionsSummaryList []ServiceRevisionSummary

// ServiceVolumeConfiguration represents the ServiceVolumeConfiguration structure
type ServiceVolumeConfiguration struct {
	ManagedEBSVolume *ServiceManagedEBSVolumeConfiguration `json:"managedEBSVolume,omitempty"`

	Name string `json:"name"`
}

// ServiceVolumeConfigurations represents the ServiceVolumeConfigurations type
type ServiceVolumeConfigurations []ServiceVolumeConfiguration

// Services represents the Services type
type Services []Service

// Session represents the Session structure
type Session struct {
	SessionId *string `json:"sessionId,omitempty"`

	StreamUrl *string `json:"streamUrl,omitempty"`

	TokenValue *string `json:"tokenValue,omitempty"`
}

// Setting represents the Setting structure
type Setting struct {
	Name *interface{} `json:"name,omitempty"`

	PrincipalArn *string `json:"principalArn,omitempty"`

	Type *interface{} `json:"type,omitempty"`

	Value *string `json:"value,omitempty"`
}

// SettingName represents the SettingName enum type
type SettingName string

const (
	SettingNameSERVICE_LONG_ARN_FORMAT SettingName = "SERVICE_LONG_ARN_FORMAT"

	SettingNameCONTAINER_INSTANCE_LONG_ARN_FORMAT SettingName = "CONTAINER_INSTANCE_LONG_ARN_FORMAT"

	SettingNameAWSVPC_TRUNKING SettingName = "AWSVPC_TRUNKING"

	SettingNameCONTAINER_INSIGHTS SettingName = "CONTAINER_INSIGHTS"

	SettingNameTAG_RESOURCE_AUTHORIZATION SettingName = "TAG_RESOURCE_AUTHORIZATION"

	SettingNameFARGATE_TASK_RETIREMENT_WAIT_PERIOD SettingName = "FARGATE_TASK_RETIREMENT_WAIT_PERIOD"

	SettingNameTASK_LONG_ARN_FORMAT SettingName = "TASK_LONG_ARN_FORMAT"

	SettingNameFARGATE_FIPS_MODE SettingName = "FARGATE_FIPS_MODE"

	SettingNameGUARD_DUTY_ACTIVATE SettingName = "GUARD_DUTY_ACTIVATE"

	SettingNameDEFAULT_LOG_DRIVER_MODE SettingName = "DEFAULT_LOG_DRIVER_MODE"
)

// SettingType represents the SettingType enum type
type SettingType string

const (
	SettingTypeUSER SettingType = "USER"

	SettingTypeAWS_MANAGED SettingType = "AWS_MANAGED"
)

// Settings represents the Settings type
type Settings []Setting

// SortOrder represents the SortOrder enum type
type SortOrder string

const (
	SortOrderASC SortOrder = "ASC"

	SortOrderDESC SortOrder = "DESC"
)

// StabilityStatus represents the StabilityStatus enum type
type StabilityStatus string

const (
	StabilityStatusSTEADY_STATE StabilityStatus = "STEADY_STATE"

	StabilityStatusSTABILIZING StabilityStatus = "STABILIZING"
)

// StartTaskRequest represents the StartTaskRequest structure
type StartTaskRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	ContainerInstances []string `json:"containerInstances"`

	EnableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`

	EnableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`

	Group *string `json:"group,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	Overrides *TaskOverride `json:"overrides,omitempty"`

	PropagateTags *interface{} `json:"propagateTags,omitempty"`

	ReferenceId *string `json:"referenceId,omitempty"`

	StartedBy *string `json:"startedBy,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TaskDefinition string `json:"taskDefinition"`

	VolumeConfigurations []TaskVolumeConfiguration `json:"volumeConfigurations,omitempty"`
}

// StartTaskResponse represents the StartTaskResponse structure
type StartTaskResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	Tasks []Task `json:"tasks,omitempty"`
}

// Statistics represents the Statistics type
type Statistics []KeyValuePair

// StopServiceDeploymentRequest represents the StopServiceDeploymentRequest structure
type StopServiceDeploymentRequest struct {
	ServiceDeploymentArn string `json:"serviceDeploymentArn"`

	StopType *interface{} `json:"stopType,omitempty"`
}

// StopServiceDeploymentResponse represents the StopServiceDeploymentResponse structure
type StopServiceDeploymentResponse struct {
	ServiceDeploymentArn *string `json:"serviceDeploymentArn,omitempty"`
}

// StopServiceDeploymentStopType represents the StopServiceDeploymentStopType enum type
type StopServiceDeploymentStopType string

const (
	StopServiceDeploymentStopTypeABORT StopServiceDeploymentStopType = "ABORT"

	StopServiceDeploymentStopTypeROLLBACK StopServiceDeploymentStopType = "ROLLBACK"
)

// StopTaskRequest represents the StopTaskRequest structure
type StopTaskRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	Reason *string `json:"reason,omitempty"`

	Task string `json:"task"`
}

// StopTaskResponse represents the StopTaskResponse structure
type StopTaskResponse struct {
	Task *Task `json:"task,omitempty"`
}

// String represents the String type
type String string

// StringList represents the StringList type
type StringList []string

// StringMap represents the StringMap type
type StringMap map[string]string

// SubmitAttachmentStateChangesRequest represents the SubmitAttachmentStateChangesRequest structure
type SubmitAttachmentStateChangesRequest struct {
	Attachments []AttachmentStateChange `json:"attachments"`

	Cluster *string `json:"cluster,omitempty"`
}

// SubmitAttachmentStateChangesResponse represents the SubmitAttachmentStateChangesResponse structure
type SubmitAttachmentStateChangesResponse struct {
	Acknowledgment *string `json:"acknowledgment,omitempty"`
}

// SubmitContainerStateChangeRequest represents the SubmitContainerStateChangeRequest structure
type SubmitContainerStateChangeRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	ContainerName *string `json:"containerName,omitempty"`

	ExitCode *int32 `json:"exitCode,omitempty"`

	NetworkBindings []NetworkBinding `json:"networkBindings,omitempty"`

	Reason *string `json:"reason,omitempty"`

	RuntimeId *string `json:"runtimeId,omitempty"`

	Status *string `json:"status,omitempty"`

	Task *string `json:"task,omitempty"`
}

// SubmitContainerStateChangeResponse represents the SubmitContainerStateChangeResponse structure
type SubmitContainerStateChangeResponse struct {
	Acknowledgment *string `json:"acknowledgment,omitempty"`
}

// SubmitTaskStateChangeRequest represents the SubmitTaskStateChangeRequest structure
type SubmitTaskStateChangeRequest struct {
	Attachments []AttachmentStateChange `json:"attachments,omitempty"`

	Cluster *string `json:"cluster,omitempty"`

	Containers []ContainerStateChange `json:"containers,omitempty"`

	ExecutionStoppedAt *time.Time `json:"executionStoppedAt,omitempty"`

	ManagedAgents []ManagedAgentStateChange `json:"managedAgents,omitempty"`

	PullStartedAt *time.Time `json:"pullStartedAt,omitempty"`

	PullStoppedAt *time.Time `json:"pullStoppedAt,omitempty"`

	Reason *string `json:"reason,omitempty"`

	Status *string `json:"status,omitempty"`

	Task *string `json:"task,omitempty"`
}

// SubmitTaskStateChangeResponse represents the SubmitTaskStateChangeResponse structure
type SubmitTaskStateChangeResponse struct {
	Acknowledgment *string `json:"acknowledgment,omitempty"`
}

// SystemControl represents the SystemControl structure
type SystemControl struct {
	Namespace *string `json:"namespace,omitempty"`

	Value *string `json:"value,omitempty"`
}

// SystemControls represents the SystemControls type
type SystemControls []SystemControl

// Tag represents the Tag structure
type Tag struct {
	Key *string `json:"key,omitempty"`

	Value *string `json:"value,omitempty"`
}

// TagKey represents the TagKey type
type TagKey string

// TagKeys represents the TagKeys type
type TagKeys []string

// TagResourceRequest represents the TagResourceRequest structure
type TagResourceRequest struct {
	ResourceArn string `json:"resourceArn"`

	Tags []Tag `json:"tags"`
}

// TagResourceResponse represents the TagResourceResponse type
type TagResourceResponse TagResourceResponse

// TagValue represents the TagValue type
type TagValue string

// Tags represents the Tags type
type Tags []Tag

// TargetNotConnectedException represents the TargetNotConnectedException structure
type TargetNotConnectedException struct {
	Message *string `json:"message,omitempty"`
}

// TargetNotFoundException represents the TargetNotFoundException structure
type TargetNotFoundException struct {
	Message *string `json:"message,omitempty"`
}

// TargetType represents the TargetType enum type
type TargetType string

const (
	TargetTypeCONTAINER_INSTANCE TargetType = "CONTAINER_INSTANCE"
)

// Task represents the Task structure
type Task struct {
	Attachments []Attachment `json:"attachments,omitempty"`

	Attributes []Attribute `json:"attributes,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty"`

	CapacityProviderName *string `json:"capacityProviderName,omitempty"`

	ClusterArn *string `json:"clusterArn,omitempty"`

	Connectivity *interface{} `json:"connectivity,omitempty"`

	ConnectivityAt *time.Time `json:"connectivityAt,omitempty"`

	ContainerInstanceArn *string `json:"containerInstanceArn,omitempty"`

	Containers []Container `json:"containers,omitempty"`

	Cpu *string `json:"cpu,omitempty"`

	CreatedAt *time.Time `json:"createdAt,omitempty"`

	DesiredStatus *string `json:"desiredStatus,omitempty"`

	EnableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`

	EphemeralStorage *EphemeralStorage `json:"ephemeralStorage,omitempty"`

	ExecutionStoppedAt *time.Time `json:"executionStoppedAt,omitempty"`

	FargateEphemeralStorage *TaskEphemeralStorage `json:"fargateEphemeralStorage,omitempty"`

	Group *string `json:"group,omitempty"`

	HealthStatus *interface{} `json:"healthStatus,omitempty"`

	InferenceAccelerators []InferenceAccelerator `json:"inferenceAccelerators,omitempty"`

	LastStatus *string `json:"lastStatus,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	Memory *string `json:"memory,omitempty"`

	Overrides *TaskOverride `json:"overrides,omitempty"`

	PlatformFamily *string `json:"platformFamily,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	PullStartedAt *time.Time `json:"pullStartedAt,omitempty"`

	PullStoppedAt *time.Time `json:"pullStoppedAt,omitempty"`

	StartedAt *time.Time `json:"startedAt,omitempty"`

	StartedBy *string `json:"startedBy,omitempty"`

	StopCode *interface{} `json:"stopCode,omitempty"`

	StoppedAt *time.Time `json:"stoppedAt,omitempty"`

	StoppedReason *string `json:"stoppedReason,omitempty"`

	StoppingAt *time.Time `json:"stoppingAt,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TaskArn *string `json:"taskArn,omitempty"`

	TaskDefinitionArn *string `json:"taskDefinitionArn,omitempty"`

	Version *int64 `json:"version,omitempty"`
}

// TaskDefinition represents the TaskDefinition structure
type TaskDefinition struct {
	Compatibilities []interface{} `json:"compatibilities,omitempty"`

	ContainerDefinitions []ContainerDefinition `json:"containerDefinitions,omitempty"`

	Cpu *string `json:"cpu,omitempty"`

	DeregisteredAt *time.Time `json:"deregisteredAt,omitempty"`

	EnableFaultInjection *bool `json:"enableFaultInjection,omitempty"`

	EphemeralStorage *EphemeralStorage `json:"ephemeralStorage,omitempty"`

	ExecutionRoleArn *string `json:"executionRoleArn,omitempty"`

	Family *string `json:"family,omitempty"`

	InferenceAccelerators []InferenceAccelerator `json:"inferenceAccelerators,omitempty"`

	IpcMode *interface{} `json:"ipcMode,omitempty"`

	Memory *string `json:"memory,omitempty"`

	NetworkMode *interface{} `json:"networkMode,omitempty"`

	PidMode *interface{} `json:"pidMode,omitempty"`

	PlacementConstraints []TaskDefinitionPlacementConstraint `json:"placementConstraints,omitempty"`

	ProxyConfiguration *ProxyConfiguration `json:"proxyConfiguration,omitempty"`

	RegisteredAt *time.Time `json:"registeredAt,omitempty"`

	RegisteredBy *string `json:"registeredBy,omitempty"`

	RequiresAttributes []Attribute `json:"requiresAttributes,omitempty"`

	RequiresCompatibilities []interface{} `json:"requiresCompatibilities,omitempty"`

	Revision *int32 `json:"revision,omitempty"`

	RuntimePlatform *RuntimePlatform `json:"runtimePlatform,omitempty"`

	Status *interface{} `json:"status,omitempty"`

	TaskDefinitionArn *string `json:"taskDefinitionArn,omitempty"`

	TaskRoleArn *string `json:"taskRoleArn,omitempty"`

	Volumes []Volume `json:"volumes,omitempty"`
}

// TaskDefinitionFamilyStatus represents the TaskDefinitionFamilyStatus enum type
type TaskDefinitionFamilyStatus string

const (
	TaskDefinitionFamilyStatusACTIVE TaskDefinitionFamilyStatus = "ACTIVE"

	TaskDefinitionFamilyStatusINACTIVE TaskDefinitionFamilyStatus = "INACTIVE"

	TaskDefinitionFamilyStatusALL TaskDefinitionFamilyStatus = "ALL"
)

// TaskDefinitionField represents the TaskDefinitionField enum type
type TaskDefinitionField string

const (
	TaskDefinitionFieldTAGS TaskDefinitionField = "TAGS"
)

// TaskDefinitionFieldList represents the TaskDefinitionFieldList type
type TaskDefinitionFieldList []interface{}

// TaskDefinitionList represents the TaskDefinitionList type
type TaskDefinitionList []TaskDefinition

// TaskDefinitionPlacementConstraint represents the TaskDefinitionPlacementConstraint structure
type TaskDefinitionPlacementConstraint struct {
	Expression *string `json:"expression,omitempty"`

	Type *interface{} `json:"type,omitempty"`
}

// TaskDefinitionPlacementConstraintType represents the TaskDefinitionPlacementConstraintType enum type
type TaskDefinitionPlacementConstraintType string

const (
	TaskDefinitionPlacementConstraintTypeMEMBER_OF TaskDefinitionPlacementConstraintType = "MEMBER_OF"
)

// TaskDefinitionPlacementConstraints represents the TaskDefinitionPlacementConstraints type
type TaskDefinitionPlacementConstraints []TaskDefinitionPlacementConstraint

// TaskDefinitionStatus represents the TaskDefinitionStatus enum type
type TaskDefinitionStatus string

const (
	TaskDefinitionStatusACTIVE TaskDefinitionStatus = "ACTIVE"

	TaskDefinitionStatusINACTIVE TaskDefinitionStatus = "INACTIVE"

	TaskDefinitionStatusDELETE_IN_PROGRESS TaskDefinitionStatus = "DELETE_IN_PROGRESS"
)

// TaskEphemeralStorage represents the TaskEphemeralStorage structure
type TaskEphemeralStorage struct {
	KmsKeyId *string `json:"kmsKeyId,omitempty"`

	SizeInGiB *int32 `json:"sizeInGiB,omitempty"`
}

// TaskField represents the TaskField enum type
type TaskField string

const (
	TaskFieldTAGS TaskField = "TAGS"
)

// TaskFieldList represents the TaskFieldList type
type TaskFieldList []interface{}

// TaskFilesystemType represents the TaskFilesystemType enum type
type TaskFilesystemType string

const (
	TaskFilesystemTypeEXT4 TaskFilesystemType = "EXT4"

	TaskFilesystemTypeXFS TaskFilesystemType = "XFS"

	TaskFilesystemTypeNTFS TaskFilesystemType = "NTFS"

	TaskFilesystemTypeEXT3 TaskFilesystemType = "EXT3"
)

// TaskManagedEBSVolumeConfiguration represents the TaskManagedEBSVolumeConfiguration structure
type TaskManagedEBSVolumeConfiguration struct {
	Encrypted *bool `json:"encrypted,omitempty"`

	FilesystemType *interface{} `json:"filesystemType,omitempty"`

	Iops *int32 `json:"iops,omitempty"`

	KmsKeyId *string `json:"kmsKeyId,omitempty"`

	RoleArn string `json:"roleArn"`

	SizeInGiB *int32 `json:"sizeInGiB,omitempty"`

	SnapshotId *string `json:"snapshotId,omitempty"`

	TagSpecifications []EBSTagSpecification `json:"tagSpecifications,omitempty"`

	TerminationPolicy *TaskManagedEBSVolumeTerminationPolicy `json:"terminationPolicy,omitempty"`

	Throughput *int32 `json:"throughput,omitempty"`

	VolumeInitializationRate *int32 `json:"volumeInitializationRate,omitempty"`

	VolumeType *string `json:"volumeType,omitempty"`
}

// TaskManagedEBSVolumeTerminationPolicy represents the TaskManagedEBSVolumeTerminationPolicy structure
type TaskManagedEBSVolumeTerminationPolicy struct {
	DeleteOnTermination bool `json:"deleteOnTermination"`
}

// TaskOverride represents the TaskOverride structure
type TaskOverride struct {
	ContainerOverrides []ContainerOverride `json:"containerOverrides,omitempty"`

	Cpu *string `json:"cpu,omitempty"`

	EphemeralStorage *EphemeralStorage `json:"ephemeralStorage,omitempty"`

	ExecutionRoleArn *string `json:"executionRoleArn,omitempty"`

	InferenceAcceleratorOverrides []InferenceAcceleratorOverride `json:"inferenceAcceleratorOverrides,omitempty"`

	Memory *string `json:"memory,omitempty"`

	TaskRoleArn *string `json:"taskRoleArn,omitempty"`
}

// TaskSet represents the TaskSet structure
type TaskSet struct {
	CapacityProviderStrategy []CapacityProviderStrategyItem `json:"capacityProviderStrategy,omitempty"`

	ClusterArn *string `json:"clusterArn,omitempty"`

	ComputedDesiredCount *int32 `json:"computedDesiredCount,omitempty"`

	CreatedAt *time.Time `json:"createdAt,omitempty"`

	ExternalId *string `json:"externalId,omitempty"`

	FargateEphemeralStorage *DeploymentEphemeralStorage `json:"fargateEphemeralStorage,omitempty"`

	Id *string `json:"id,omitempty"`

	LaunchType *interface{} `json:"launchType,omitempty"`

	LoadBalancers []LoadBalancer `json:"loadBalancers,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	PendingCount *int32 `json:"pendingCount,omitempty"`

	PlatformFamily *string `json:"platformFamily,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	RunningCount *int32 `json:"runningCount,omitempty"`

	Scale *Scale `json:"scale,omitempty"`

	ServiceArn *string `json:"serviceArn,omitempty"`

	ServiceRegistries []ServiceRegistry `json:"serviceRegistries,omitempty"`

	StabilityStatus *interface{} `json:"stabilityStatus,omitempty"`

	StabilityStatusAt *time.Time `json:"stabilityStatusAt,omitempty"`

	StartedBy *string `json:"startedBy,omitempty"`

	Status *string `json:"status,omitempty"`

	Tags []Tag `json:"tags,omitempty"`

	TaskDefinition *string `json:"taskDefinition,omitempty"`

	TaskSetArn *string `json:"taskSetArn,omitempty"`

	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// TaskSetField represents the TaskSetField enum type
type TaskSetField string

const (
	TaskSetFieldTAGS TaskSetField = "TAGS"
)

// TaskSetFieldList represents the TaskSetFieldList type
type TaskSetFieldList []interface{}

// TaskSetNotFoundException represents the TaskSetNotFoundException structure
type TaskSetNotFoundException struct {
	Message *string `json:"message,omitempty"`
}

// TaskSets represents the TaskSets type
type TaskSets []TaskSet

// TaskStopCode represents the TaskStopCode enum type
type TaskStopCode string

const (
	TaskStopCodeUSER_INITIATED TaskStopCode = "USER_INITIATED"

	TaskStopCodeSERVICE_SCHEDULER_INITIATED TaskStopCode = "SERVICE_SCHEDULER_INITIATED"

	TaskStopCodeSPOT_INTERRUPTION TaskStopCode = "SPOT_INTERRUPTION"

	TaskStopCodeTERMINATION_NOTICE TaskStopCode = "TERMINATION_NOTICE"

	TaskStopCodeTASK_FAILED_TO_START TaskStopCode = "TASK_FAILED_TO_START"

	TaskStopCodeESSENTIAL_CONTAINER_EXITED TaskStopCode = "ESSENTIAL_CONTAINER_EXITED"
)

// TaskVolumeConfiguration represents the TaskVolumeConfiguration structure
type TaskVolumeConfiguration struct {
	ManagedEBSVolume *TaskManagedEBSVolumeConfiguration `json:"managedEBSVolume,omitempty"`

	Name string `json:"name"`
}

// TaskVolumeConfigurations represents the TaskVolumeConfigurations type
type TaskVolumeConfigurations []TaskVolumeConfiguration

// Tasks represents the Tasks type
type Tasks []Task

// TimeoutConfiguration represents the TimeoutConfiguration structure
type TimeoutConfiguration struct {
	IdleTimeoutSeconds *int32 `json:"idleTimeoutSeconds,omitempty"`

	PerRequestTimeoutSeconds *int32 `json:"perRequestTimeoutSeconds,omitempty"`
}

// Timestamp represents the Timestamp type
type Timestamp time.Time

// Tmpfs represents the Tmpfs structure
type Tmpfs struct {
	ContainerPath string `json:"containerPath"`

	MountOptions []string `json:"mountOptions,omitempty"`

	Size int32 `json:"size"`
}

// TmpfsList represents the TmpfsList type
type TmpfsList []Tmpfs

// TransportProtocol represents the TransportProtocol enum type
type TransportProtocol string

const (
	TransportProtocolTCP TransportProtocol = "TCP"

	TransportProtocolUDP TransportProtocol = "UDP"
)

// Ulimit represents the Ulimit structure
type Ulimit struct {
	HardLimit int32 `json:"hardLimit"`

	Name interface{} `json:"name"`

	SoftLimit int32 `json:"softLimit"`
}

// UlimitList represents the UlimitList type
type UlimitList []Ulimit

// UlimitName represents the UlimitName enum type
type UlimitName string

const (
	UlimitNameMSGQUEUE UlimitName = "MSGQUEUE"

	UlimitNameRSS UlimitName = "RSS"

	UlimitNameNOFILE UlimitName = "NOFILE"

	UlimitNameRTTIME UlimitName = "RTTIME"

	UlimitNameLOCKS UlimitName = "LOCKS"

	UlimitNameNPROC UlimitName = "NPROC"

	UlimitNameSIGPENDING UlimitName = "SIGPENDING"

	UlimitNameMEMLOCK UlimitName = "MEMLOCK"

	UlimitNameNICE UlimitName = "NICE"

	UlimitNameRTPRIO UlimitName = "RTPRIO"

	UlimitNameSTACK UlimitName = "STACK"

	UlimitNameCORE UlimitName = "CORE"

	UlimitNameCPU UlimitName = "CPU"

	UlimitNameDATA UlimitName = "DATA"

	UlimitNameFSIZE UlimitName = "FSIZE"
)

// UnsupportedFeatureException represents the UnsupportedFeatureException structure
type UnsupportedFeatureException struct {
	Message *string `json:"message,omitempty"`
}

// UntagResourceRequest represents the UntagResourceRequest structure
type UntagResourceRequest struct {
	ResourceArn string `json:"resourceArn"`

	TagKeys []string `json:"tagKeys"`
}

// UntagResourceResponse represents the UntagResourceResponse type
type UntagResourceResponse UntagResourceResponse

// UpdateCapacityProviderRequest represents the UpdateCapacityProviderRequest structure
type UpdateCapacityProviderRequest struct {
	AutoScalingGroupProvider AutoScalingGroupProviderUpdate `json:"autoScalingGroupProvider"`

	Name string `json:"name"`
}

// UpdateCapacityProviderResponse represents the UpdateCapacityProviderResponse structure
type UpdateCapacityProviderResponse struct {
	CapacityProvider *CapacityProvider `json:"capacityProvider,omitempty"`
}

// UpdateClusterRequest represents the UpdateClusterRequest structure
type UpdateClusterRequest struct {
	Cluster string `json:"cluster"`

	Configuration *ClusterConfiguration `json:"configuration,omitempty"`

	ServiceConnectDefaults *ClusterServiceConnectDefaultsRequest `json:"serviceConnectDefaults,omitempty"`

	Settings []ClusterSetting `json:"settings,omitempty"`
}

// UpdateClusterResponse represents the UpdateClusterResponse structure
type UpdateClusterResponse struct {
	Cluster *Cluster `json:"cluster,omitempty"`
}

// UpdateClusterSettingsRequest represents the UpdateClusterSettingsRequest structure
type UpdateClusterSettingsRequest struct {
	Cluster string `json:"cluster"`

	Settings []ClusterSetting `json:"settings"`
}

// UpdateClusterSettingsResponse represents the UpdateClusterSettingsResponse structure
type UpdateClusterSettingsResponse struct {
	Cluster *Cluster `json:"cluster,omitempty"`
}

// UpdateContainerAgentRequest represents the UpdateContainerAgentRequest structure
type UpdateContainerAgentRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	ContainerInstance string `json:"containerInstance"`
}

// UpdateContainerAgentResponse represents the UpdateContainerAgentResponse structure
type UpdateContainerAgentResponse struct {
	ContainerInstance *ContainerInstance `json:"containerInstance,omitempty"`
}

// UpdateContainerInstancesStateRequest represents the UpdateContainerInstancesStateRequest structure
type UpdateContainerInstancesStateRequest struct {
	Cluster *string `json:"cluster,omitempty"`

	ContainerInstances []string `json:"containerInstances"`

	Status interface{} `json:"status"`
}

// UpdateContainerInstancesStateResponse represents the UpdateContainerInstancesStateResponse structure
type UpdateContainerInstancesStateResponse struct {
	ContainerInstances []ContainerInstance `json:"containerInstances,omitempty"`

	Failures []Failure `json:"failures,omitempty"`
}

// UpdateInProgressException represents the UpdateInProgressException structure
type UpdateInProgressException struct {
	Message *string `json:"message,omitempty"`
}

// UpdateServicePrimaryTaskSetRequest represents the UpdateServicePrimaryTaskSetRequest structure
type UpdateServicePrimaryTaskSetRequest struct {
	Cluster string `json:"cluster"`

	PrimaryTaskSet string `json:"primaryTaskSet"`

	Service string `json:"service"`
}

// UpdateServicePrimaryTaskSetResponse represents the UpdateServicePrimaryTaskSetResponse structure
type UpdateServicePrimaryTaskSetResponse struct {
	TaskSet *TaskSet `json:"taskSet,omitempty"`
}

// UpdateServiceRequest represents the UpdateServiceRequest structure
type UpdateServiceRequest struct {
	AvailabilityZoneRebalancing *interface{} `json:"availabilityZoneRebalancing,omitempty"`

	CapacityProviderStrategy []CapacityProviderStrategyItem `json:"capacityProviderStrategy,omitempty"`

	Cluster *string `json:"cluster,omitempty"`

	DeploymentConfiguration *DeploymentConfiguration `json:"deploymentConfiguration,omitempty"`

	DesiredCount *int32 `json:"desiredCount,omitempty"`

	EnableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`

	EnableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`

	ForceNewDeployment *bool `json:"forceNewDeployment,omitempty"`

	HealthCheckGracePeriodSeconds *int32 `json:"healthCheckGracePeriodSeconds,omitempty"`

	LoadBalancers []LoadBalancer `json:"loadBalancers,omitempty"`

	NetworkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`

	PlacementConstraints []PlacementConstraint `json:"placementConstraints,omitempty"`

	PlacementStrategy []PlacementStrategy `json:"placementStrategy,omitempty"`

	PlatformVersion *string `json:"platformVersion,omitempty"`

	PropagateTags *interface{} `json:"propagateTags,omitempty"`

	Service string `json:"service"`

	ServiceConnectConfiguration *ServiceConnectConfiguration `json:"serviceConnectConfiguration,omitempty"`

	ServiceRegistries []ServiceRegistry `json:"serviceRegistries,omitempty"`

	TaskDefinition *string `json:"taskDefinition,omitempty"`

	VolumeConfigurations []ServiceVolumeConfiguration `json:"volumeConfigurations,omitempty"`

	VpcLatticeConfigurations []VpcLatticeConfiguration `json:"vpcLatticeConfigurations,omitempty"`
}

// UpdateServiceResponse represents the UpdateServiceResponse structure
type UpdateServiceResponse struct {
	Service *Service `json:"service,omitempty"`
}

// UpdateTaskProtectionRequest represents the UpdateTaskProtectionRequest structure
type UpdateTaskProtectionRequest struct {
	Cluster string `json:"cluster"`

	ExpiresInMinutes *int32 `json:"expiresInMinutes,omitempty"`

	ProtectionEnabled bool `json:"protectionEnabled"`

	Tasks []string `json:"tasks"`
}

// UpdateTaskProtectionResponse represents the UpdateTaskProtectionResponse structure
type UpdateTaskProtectionResponse struct {
	Failures []Failure `json:"failures,omitempty"`

	ProtectedTasks []ProtectedTask `json:"protectedTasks,omitempty"`
}

// UpdateTaskSetRequest represents the UpdateTaskSetRequest structure
type UpdateTaskSetRequest struct {
	Cluster string `json:"cluster"`

	Scale Scale `json:"scale"`

	Service string `json:"service"`

	TaskSet string `json:"taskSet"`
}

// UpdateTaskSetResponse represents the UpdateTaskSetResponse structure
type UpdateTaskSetResponse struct {
	TaskSet *TaskSet `json:"taskSet,omitempty"`
}

// VersionConsistency represents the VersionConsistency enum type
type VersionConsistency string

const (
	VersionConsistencyENABLED VersionConsistency = "ENABLED"

	VersionConsistencyDISABLED VersionConsistency = "DISABLED"
)

// VersionInfo represents the VersionInfo structure
type VersionInfo struct {
	AgentHash *string `json:"agentHash,omitempty"`

	AgentVersion *string `json:"agentVersion,omitempty"`

	DockerVersion *string `json:"dockerVersion,omitempty"`
}

// Volume represents the Volume structure
type Volume struct {
	ConfiguredAtLaunch *bool `json:"configuredAtLaunch,omitempty"`

	DockerVolumeConfiguration *DockerVolumeConfiguration `json:"dockerVolumeConfiguration,omitempty"`

	EfsVolumeConfiguration *EFSVolumeConfiguration `json:"efsVolumeConfiguration,omitempty"`

	FsxWindowsFileServerVolumeConfiguration *FSxWindowsFileServerVolumeConfiguration `json:"fsxWindowsFileServerVolumeConfiguration,omitempty"`

	Host *HostVolumeProperties `json:"host,omitempty"`

	Name *string `json:"name,omitempty"`
}

// VolumeFrom represents the VolumeFrom structure
type VolumeFrom struct {
	ReadOnly *bool `json:"readOnly,omitempty"`

	SourceContainer *string `json:"sourceContainer,omitempty"`
}

// VolumeFromList represents the VolumeFromList type
type VolumeFromList []VolumeFrom

// VolumeList represents the VolumeList type
type VolumeList []Volume

// VpcLatticeConfiguration represents the VpcLatticeConfiguration structure
type VpcLatticeConfiguration struct {
	PortName string `json:"portName"`

	RoleArn string `json:"roleArn"`

	TargetGroupArn string `json:"targetGroupArn"`
}

// VpcLatticeConfigurations represents the VpcLatticeConfigurations type
type VpcLatticeConfigurations []VpcLatticeConfiguration
