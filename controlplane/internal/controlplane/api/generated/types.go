// Code generated by cmd/codegen. DO NOT EDIT.

package generated

import "time"

// AccessDeniedException represents the AccessDeniedException structure
type AccessDeniedException struct {
	message *string `json:"message,omitempty"`
}

// Attachment represents the Attachment structure
type Attachment struct {
	status *string `json:"status,omitempty"`
	details *AttachmentDetails `json:"details,omitempty"`
	id *string `json:"id,omitempty"`
	type *string `json:"type,omitempty"`
}

// AttachmentDetails represents a list type
type AttachmentDetails []*KeyValuePair

// AttachmentStateChange represents the AttachmentStateChange structure
type AttachmentStateChange struct {
	attachmentArn *string `json:"attachmentArn"`
	status *string `json:"status"`
}

// AttachmentStateChanges represents a list type
type AttachmentStateChanges []*AttachmentStateChange

// Attachments represents a list type
type Attachments []*Attachment

// Attribute represents the Attribute structure
type Attribute struct {
	name *string `json:"name"`
	value *string `json:"value,omitempty"`
	targetType *TargetType `json:"targetType,omitempty"`
	targetId *string `json:"targetId,omitempty"`
}

// AttributeLimitExceededException represents the AttributeLimitExceededException structure
type AttributeLimitExceededException struct {
	message *string `json:"message,omitempty"`
}

// Attributes represents a list type
type Attributes []*Attribute

// AutoScalingGroupProvider represents the AutoScalingGroupProvider structure
type AutoScalingGroupProvider struct {
	autoScalingGroupArn *string `json:"autoScalingGroupArn"`
	managedScaling *ManagedScaling `json:"managedScaling,omitempty"`
	managedTerminationProtection *ManagedTerminationProtection `json:"managedTerminationProtection,omitempty"`
	managedDraining *ManagedDraining `json:"managedDraining,omitempty"`
}

// AutoScalingGroupProviderUpdate represents the AutoScalingGroupProviderUpdate structure
type AutoScalingGroupProviderUpdate struct {
	managedScaling *ManagedScaling `json:"managedScaling,omitempty"`
	managedTerminationProtection *ManagedTerminationProtection `json:"managedTerminationProtection,omitempty"`
	managedDraining *ManagedDraining `json:"managedDraining,omitempty"`
}

// AwsVpcConfiguration represents the AwsVpcConfiguration structure
type AwsVpcConfiguration struct {
	subnets StringList `json:"subnets"`
	securityGroups StringList `json:"securityGroups,omitempty"`
	assignPublicIp *AssignPublicIp `json:"assignPublicIp,omitempty"`
}

// BlockedException represents the BlockedException structure
type BlockedException struct {
	message *string `json:"message,omitempty"`
}

// CapacityProvider represents the CapacityProvider structure
type CapacityProvider struct {
	tags *Tags `json:"tags,omitempty"`
	capacityProviderArn *string `json:"capacityProviderArn,omitempty"`
	name *string `json:"name,omitempty"`
	status *CapacityProviderStatus `json:"status,omitempty"`
	autoScalingGroupProvider *AutoScalingGroupProvider `json:"autoScalingGroupProvider,omitempty"`
	updateStatus *CapacityProviderUpdateStatus `json:"updateStatus,omitempty"`
	updateStatusReason *string `json:"updateStatusReason,omitempty"`
}

// CapacityProviderFieldList represents a list type
type CapacityProviderFieldList []*CapacityProviderField

// CapacityProviderStrategy represents a list type
type CapacityProviderStrategy []*CapacityProviderStrategyItem

// CapacityProviderStrategyItem represents the CapacityProviderStrategyItem structure
type CapacityProviderStrategyItem struct {
	capacityProvider *string `json:"capacityProvider"`
	weight *CapacityProviderStrategyItemWeight `json:"weight,omitempty"`
	base *CapacityProviderStrategyItemBase `json:"base,omitempty"`
}

// CapacityProviders represents a list type
type CapacityProviders []*CapacityProvider

// ClientException represents the ClientException structure
type ClientException struct {
	message *string `json:"message,omitempty"`
}

// Cluster represents the Cluster structure
type Cluster struct {
	clusterName *string `json:"clusterName,omitempty"`
	configuration *ClusterConfiguration `json:"configuration,omitempty"`
	status *string `json:"status,omitempty"`
	pendingTasksCount *int32 `json:"pendingTasksCount,omitempty"`
	capacityProviders StringList `json:"capacityProviders,omitempty"`
	attachments *Attachments `json:"attachments,omitempty"`
	registeredContainerInstancesCount *int32 `json:"registeredContainerInstancesCount,omitempty"`
	runningTasksCount *int32 `json:"runningTasksCount,omitempty"`
	clusterArn *string `json:"clusterArn,omitempty"`
	settings *ClusterSettings `json:"settings,omitempty"`
	attachmentsStatus *string `json:"attachmentsStatus,omitempty"`
	activeServicesCount *int32 `json:"activeServicesCount,omitempty"`
	statistics *Statistics `json:"statistics,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	defaultCapacityProviderStrategy *CapacityProviderStrategy `json:"defaultCapacityProviderStrategy,omitempty"`
	serviceConnectDefaults *ClusterServiceConnectDefaults `json:"serviceConnectDefaults,omitempty"`
}

// ClusterConfiguration represents the ClusterConfiguration structure
type ClusterConfiguration struct {
	executeCommandConfiguration *ExecuteCommandConfiguration `json:"executeCommandConfiguration,omitempty"`
	managedStorageConfiguration *ManagedStorageConfiguration `json:"managedStorageConfiguration,omitempty"`
}

// ClusterContainsContainerInstancesException represents the ClusterContainsContainerInstancesException structure
type ClusterContainsContainerInstancesException struct {
	message *string `json:"message,omitempty"`
}

// ClusterContainsServicesException represents the ClusterContainsServicesException structure
type ClusterContainsServicesException struct {
	message *string `json:"message,omitempty"`
}

// ClusterContainsTasksException represents the ClusterContainsTasksException structure
type ClusterContainsTasksException struct {
	message *string `json:"message,omitempty"`
}

// ClusterFieldList represents a list type
type ClusterFieldList []*ClusterField

// ClusterNotFoundException represents the ClusterNotFoundException structure
type ClusterNotFoundException struct {
	message *string `json:"message,omitempty"`
}

// ClusterServiceConnectDefaults represents the ClusterServiceConnectDefaults structure
type ClusterServiceConnectDefaults struct {
	namespace *string `json:"namespace,omitempty"`
}

// ClusterServiceConnectDefaultsRequest represents the ClusterServiceConnectDefaultsRequest structure
type ClusterServiceConnectDefaultsRequest struct {
	namespace *string `json:"namespace"`
}

// ClusterSetting represents the ClusterSetting structure
type ClusterSetting struct {
	name *ClusterSettingName `json:"name,omitempty"`
	value *string `json:"value,omitempty"`
}

// ClusterSettings represents a list type
type ClusterSettings []*ClusterSetting

// Clusters represents a list type
type Clusters []*Cluster

// CompatibilityList represents a list type
type CompatibilityList []*Compatibility

// ConflictException represents the ConflictException structure
type ConflictException struct {
	resourceIds *ResourceIds `json:"resourceIds,omitempty"`
	message *string `json:"message,omitempty"`
}

// Container represents the Container structure
type Container struct {
	reason *string `json:"reason,omitempty"`
	networkInterfaces *NetworkInterfaces `json:"networkInterfaces,omitempty"`
	taskArn *string `json:"taskArn,omitempty"`
	imageDigest *string `json:"imageDigest,omitempty"`
	runtimeId *string `json:"runtimeId,omitempty"`
	lastStatus *string `json:"lastStatus,omitempty"`
	healthStatus *HealthStatus `json:"healthStatus,omitempty"`
	managedAgents *ManagedAgents `json:"managedAgents,omitempty"`
	gpuIds *GpuIds `json:"gpuIds,omitempty"`
	cpu *string `json:"cpu,omitempty"`
	name *string `json:"name,omitempty"`
	networkBindings *NetworkBindings `json:"networkBindings,omitempty"`
	memory *string `json:"memory,omitempty"`
	memoryReservation *string `json:"memoryReservation,omitempty"`
	containerArn *string `json:"containerArn,omitempty"`
	image *string `json:"image,omitempty"`
	exitCode *int32 `json:"exitCode,omitempty"`
}

// ContainerDefinition represents the ContainerDefinition structure
type ContainerDefinition struct {
	image *string `json:"image,omitempty"`
	memoryReservation *int32 `json:"memoryReservation,omitempty"`
	user *string `json:"user,omitempty"`
	dnsServers StringList `json:"dnsServers,omitempty"`
	healthCheck *HealthCheck `json:"healthCheck,omitempty"`
	portMappings PortMappingList `json:"portMappings,omitempty"`
	environment *EnvironmentVariables `json:"environment,omitempty"`
	environmentFiles *EnvironmentFiles `json:"environmentFiles,omitempty"`
	workingDirectory *string `json:"workingDirectory,omitempty"`
	extraHosts HostEntryList `json:"extraHosts,omitempty"`
	dockerSecurityOptions StringList `json:"dockerSecurityOptions,omitempty"`
	pseudoTerminal *bool `json:"pseudoTerminal,omitempty"`
	ulimits UlimitList `json:"ulimits,omitempty"`
	cpu *int32 `json:"cpu,omitempty"`
	memory *int32 `json:"memory,omitempty"`
	firelensConfiguration *FirelensConfiguration `json:"firelensConfiguration,omitempty"`
	credentialSpecs StringList `json:"credentialSpecs,omitempty"`
	links StringList `json:"links,omitempty"`
	mountPoints MountPointList `json:"mountPoints,omitempty"`
	stopTimeout *int32 `json:"stopTimeout,omitempty"`
	versionConsistency *VersionConsistency `json:"versionConsistency,omitempty"`
	readonlyRootFilesystem *bool `json:"readonlyRootFilesystem,omitempty"`
	logConfiguration *LogConfiguration `json:"logConfiguration,omitempty"`
	name *string `json:"name,omitempty"`
	repositoryCredentials *RepositoryCredentials `json:"repositoryCredentials,omitempty"`
	restartPolicy *ContainerRestartPolicy `json:"restartPolicy,omitempty"`
	command StringList `json:"command,omitempty"`
	resourceRequirements *ResourceRequirements `json:"resourceRequirements,omitempty"`
	entryPoint StringList `json:"entryPoint,omitempty"`
	secrets SecretList `json:"secrets,omitempty"`
	hostname *string `json:"hostname,omitempty"`
	interactive *bool `json:"interactive,omitempty"`
	essential *bool `json:"essential,omitempty"`
	linuxParameters *LinuxParameters `json:"linuxParameters,omitempty"`
	disableNetworking *bool `json:"disableNetworking,omitempty"`
	privileged *bool `json:"privileged,omitempty"`
	dnsSearchDomains StringList `json:"dnsSearchDomains,omitempty"`
	dockerLabels DockerLabelsMap `json:"dockerLabels,omitempty"`
	volumesFrom VolumeFromList `json:"volumesFrom,omitempty"`
	dependsOn *ContainerDependencies `json:"dependsOn,omitempty"`
	startTimeout *int32 `json:"startTimeout,omitempty"`
	systemControls *SystemControls `json:"systemControls,omitempty"`
}

// ContainerDefinitions represents a list type
type ContainerDefinitions []*ContainerDefinition

// ContainerDependencies represents a list type
type ContainerDependencies []*ContainerDependency

// ContainerDependency represents the ContainerDependency structure
type ContainerDependency struct {
	condition *ContainerCondition `json:"condition"`
	containerName *string `json:"containerName"`
}

// ContainerImage represents the ContainerImage structure
type ContainerImage struct {
	containerName *string `json:"containerName,omitempty"`
	imageDigest *string `json:"imageDigest,omitempty"`
	image *string `json:"image,omitempty"`
}

// ContainerImages represents a list type
type ContainerImages []*ContainerImage

// ContainerInstance represents the ContainerInstance structure
type ContainerInstance struct {
	containerInstanceArn *string `json:"containerInstanceArn,omitempty"`
	statusReason *string `json:"statusReason,omitempty"`
	ec2InstanceId *string `json:"ec2InstanceId,omitempty"`
	pendingTasksCount *int32 `json:"pendingTasksCount,omitempty"`
	agentUpdateStatus *AgentUpdateStatus `json:"agentUpdateStatus,omitempty"`
	attributes *Attributes `json:"attributes,omitempty"`
	capacityProviderName *string `json:"capacityProviderName,omitempty"`
	version *int64 `json:"version,omitempty"`
	remainingResources *Resources `json:"remainingResources,omitempty"`
	agentConnected *bool `json:"agentConnected,omitempty"`
	runningTasksCount *int32 `json:"runningTasksCount,omitempty"`
	registeredAt *time.Time `json:"registeredAt,omitempty"`
	attachments *Attachments `json:"attachments,omitempty"`
	healthStatus *ContainerInstanceHealthStatus `json:"healthStatus,omitempty"`
	versionInfo *VersionInfo `json:"versionInfo,omitempty"`
	registeredResources *Resources `json:"registeredResources,omitempty"`
	status *string `json:"status,omitempty"`
	tags *Tags `json:"tags,omitempty"`
}

// ContainerInstanceFieldList represents a list type
type ContainerInstanceFieldList []*ContainerInstanceField

// ContainerInstanceHealthStatus represents the ContainerInstanceHealthStatus structure
type ContainerInstanceHealthStatus struct {
	details InstanceHealthCheckResultList `json:"details,omitempty"`
	overallStatus *InstanceHealthCheckState `json:"overallStatus,omitempty"`
}

// ContainerInstances represents a list type
type ContainerInstances []*ContainerInstance

// ContainerOverride represents the ContainerOverride structure
type ContainerOverride struct {
	environmentFiles *EnvironmentFiles `json:"environmentFiles,omitempty"`
	cpu *int32 `json:"cpu,omitempty"`
	memory *int32 `json:"memory,omitempty"`
	memoryReservation *int32 `json:"memoryReservation,omitempty"`
	resourceRequirements *ResourceRequirements `json:"resourceRequirements,omitempty"`
	name *string `json:"name,omitempty"`
	command StringList `json:"command,omitempty"`
	environment *EnvironmentVariables `json:"environment,omitempty"`
}

// ContainerOverrides represents a list type
type ContainerOverrides []*ContainerOverride

// ContainerRestartPolicy represents the ContainerRestartPolicy structure
type ContainerRestartPolicy struct {
	enabled *bool `json:"enabled"`
	ignoredExitCodes IntegerList `json:"ignoredExitCodes,omitempty"`
	restartAttemptPeriod *int32 `json:"restartAttemptPeriod,omitempty"`
}

// ContainerStateChange represents the ContainerStateChange structure
type ContainerStateChange struct {
	containerName *string `json:"containerName,omitempty"`
	imageDigest *string `json:"imageDigest,omitempty"`
	runtimeId *string `json:"runtimeId,omitempty"`
	exitCode *int32 `json:"exitCode,omitempty"`
	networkBindings *NetworkBindings `json:"networkBindings,omitempty"`
	reason *string `json:"reason,omitempty"`
	status *string `json:"status,omitempty"`
}

// ContainerStateChanges represents a list type
type ContainerStateChanges []*ContainerStateChange

// Containers represents a list type
type Containers []*Container

// CreateCapacityProviderRequest represents the CreateCapacityProviderRequest structure
type CreateCapacityProviderRequest struct {
	name *string `json:"name"`
	autoScalingGroupProvider *AutoScalingGroupProvider `json:"autoScalingGroupProvider"`
	tags *Tags `json:"tags,omitempty"`
}

// CreateCapacityProviderResponse represents the CreateCapacityProviderResponse structure
type CreateCapacityProviderResponse struct {
	capacityProvider *CapacityProvider `json:"capacityProvider,omitempty"`
}

// CreateClusterRequest represents the CreateClusterRequest structure
type CreateClusterRequest struct {
	settings *ClusterSettings `json:"settings,omitempty"`
	configuration *ClusterConfiguration `json:"configuration,omitempty"`
	capacityProviders StringList `json:"capacityProviders,omitempty"`
	defaultCapacityProviderStrategy *CapacityProviderStrategy `json:"defaultCapacityProviderStrategy,omitempty"`
	serviceConnectDefaults *ClusterServiceConnectDefaultsRequest `json:"serviceConnectDefaults,omitempty"`
	clusterName *string `json:"clusterName,omitempty"`
	tags *Tags `json:"tags,omitempty"`
}

// CreateClusterResponse represents the CreateClusterResponse structure
type CreateClusterResponse struct {
	cluster *Cluster `json:"cluster,omitempty"`
}

// CreateServiceRequest represents the CreateServiceRequest structure
type CreateServiceRequest struct {
	serviceConnectConfiguration *ServiceConnectConfiguration `json:"serviceConnectConfiguration,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	clientToken *string `json:"clientToken,omitempty"`
	role *string `json:"role,omitempty"`
	placementConstraints *PlacementConstraints `json:"placementConstraints,omitempty"`
	volumeConfigurations *ServiceVolumeConfigurations `json:"volumeConfigurations,omitempty"`
	vpcLatticeConfigurations *VpcLatticeConfigurations `json:"vpcLatticeConfigurations,omitempty"`
	taskDefinition *string `json:"taskDefinition,omitempty"`
	serviceRegistries *ServiceRegistries `json:"serviceRegistries,omitempty"`
	capacityProviderStrategy *CapacityProviderStrategy `json:"capacityProviderStrategy,omitempty"`
	enableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`
	serviceName *string `json:"serviceName"`
	platformVersion *string `json:"platformVersion,omitempty"`
	deploymentConfiguration *DeploymentConfiguration `json:"deploymentConfiguration,omitempty"`
	placementStrategy *PlacementStrategies `json:"placementStrategy,omitempty"`
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
	schedulingStrategy *SchedulingStrategy `json:"schedulingStrategy,omitempty"`
	deploymentController *DeploymentController `json:"deploymentController,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	availabilityZoneRebalancing *AvailabilityZoneRebalancing `json:"availabilityZoneRebalancing,omitempty"`
	loadBalancers *LoadBalancers `json:"loadBalancers,omitempty"`
	desiredCount *int32 `json:"desiredCount,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
	healthCheckGracePeriodSeconds *int32 `json:"healthCheckGracePeriodSeconds,omitempty"`
	enableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`
	propagateTags *PropagateTags `json:"propagateTags,omitempty"`
}

// CreateServiceResponse represents the CreateServiceResponse structure
type CreateServiceResponse struct {
	service *Service `json:"service,omitempty"`
}

// CreateTaskSetRequest represents the CreateTaskSetRequest structure
type CreateTaskSetRequest struct {
	cluster *string `json:"cluster"`
	loadBalancers *LoadBalancers `json:"loadBalancers,omitempty"`
	serviceRegistries *ServiceRegistries `json:"serviceRegistries,omitempty"`
	capacityProviderStrategy *CapacityProviderStrategy `json:"capacityProviderStrategy,omitempty"`
	scale *Scale `json:"scale,omitempty"`
	externalId *string `json:"externalId,omitempty"`
	taskDefinition *string `json:"taskDefinition"`
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
	platformVersion *string `json:"platformVersion,omitempty"`
	clientToken *string `json:"clientToken,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	service *string `json:"service"`
}

// CreateTaskSetResponse represents the CreateTaskSetResponse structure
type CreateTaskSetResponse struct {
	taskSet *TaskSet `json:"taskSet,omitempty"`
}

// CreatedAt represents the CreatedAt structure
type CreatedAt struct {
	before *time.Time `json:"before,omitempty"`
	after *time.Time `json:"after,omitempty"`
}

// DeleteAccountSettingRequest represents the DeleteAccountSettingRequest structure
type DeleteAccountSettingRequest struct {
	name *SettingName `json:"name"`
	principalArn *string `json:"principalArn,omitempty"`
}

// DeleteAccountSettingResponse represents the DeleteAccountSettingResponse structure
type DeleteAccountSettingResponse struct {
	setting *Setting `json:"setting,omitempty"`
}

// DeleteAttributesRequest represents the DeleteAttributesRequest structure
type DeleteAttributesRequest struct {
	cluster *string `json:"cluster,omitempty"`
	attributes *Attributes `json:"attributes"`
}

// DeleteAttributesResponse represents the DeleteAttributesResponse structure
type DeleteAttributesResponse struct {
	attributes *Attributes `json:"attributes,omitempty"`
}

// DeleteCapacityProviderRequest represents the DeleteCapacityProviderRequest structure
type DeleteCapacityProviderRequest struct {
	capacityProvider *string `json:"capacityProvider"`
}

// DeleteCapacityProviderResponse represents the DeleteCapacityProviderResponse structure
type DeleteCapacityProviderResponse struct {
	capacityProvider *CapacityProvider `json:"capacityProvider,omitempty"`
}

// DeleteClusterRequest represents the DeleteClusterRequest structure
type DeleteClusterRequest struct {
	cluster *string `json:"cluster"`
}

// DeleteClusterResponse represents the DeleteClusterResponse structure
type DeleteClusterResponse struct {
	cluster *Cluster `json:"cluster,omitempty"`
}

// DeleteServiceRequest represents the DeleteServiceRequest structure
type DeleteServiceRequest struct {
	cluster *string `json:"cluster,omitempty"`
	service *string `json:"service"`
	force *bool `json:"force,omitempty"`
}

// DeleteServiceResponse represents the DeleteServiceResponse structure
type DeleteServiceResponse struct {
	service *Service `json:"service,omitempty"`
}

// DeleteTaskDefinitionsRequest represents the DeleteTaskDefinitionsRequest structure
type DeleteTaskDefinitionsRequest struct {
	taskDefinitions StringList `json:"taskDefinitions"`
}

// DeleteTaskDefinitionsResponse represents the DeleteTaskDefinitionsResponse structure
type DeleteTaskDefinitionsResponse struct {
	taskDefinitions TaskDefinitionList `json:"taskDefinitions,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// DeleteTaskSetRequest represents the DeleteTaskSetRequest structure
type DeleteTaskSetRequest struct {
	taskSet *string `json:"taskSet"`
	force *bool `json:"force,omitempty"`
	cluster *string `json:"cluster"`
	service *string `json:"service"`
}

// DeleteTaskSetResponse represents the DeleteTaskSetResponse structure
type DeleteTaskSetResponse struct {
	taskSet *TaskSet `json:"taskSet,omitempty"`
}

// Deployment represents the Deployment structure
type Deployment struct {
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
	taskDefinition *string `json:"taskDefinition,omitempty"`
	failedTasks *int32 `json:"failedTasks,omitempty"`
	capacityProviderStrategy *CapacityProviderStrategy `json:"capacityProviderStrategy,omitempty"`
	serviceConnectConfiguration *ServiceConnectConfiguration `json:"serviceConnectConfiguration,omitempty"`
	serviceConnectResources ServiceConnectServiceResourceList `json:"serviceConnectResources,omitempty"`
	fargateEphemeralStorage *DeploymentEphemeralStorage `json:"fargateEphemeralStorage,omitempty"`
	vpcLatticeConfigurations *VpcLatticeConfigurations `json:"vpcLatticeConfigurations,omitempty"`
	id *string `json:"id,omitempty"`
	status *string `json:"status,omitempty"`
	createdAt *time.Time `json:"createdAt,omitempty"`
	updatedAt *time.Time `json:"updatedAt,omitempty"`
	volumeConfigurations *ServiceVolumeConfigurations `json:"volumeConfigurations,omitempty"`
	desiredCount *int32 `json:"desiredCount,omitempty"`
	pendingCount *int32 `json:"pendingCount,omitempty"`
	runningCount *int32 `json:"runningCount,omitempty"`
	platformVersion *string `json:"platformVersion,omitempty"`
	platformFamily *string `json:"platformFamily,omitempty"`
	rolloutState *DeploymentRolloutState `json:"rolloutState,omitempty"`
	rolloutStateReason *string `json:"rolloutStateReason,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
}

// DeploymentAlarms represents the DeploymentAlarms structure
type DeploymentAlarms struct {
	enable *bool `json:"enable"`
	alarmNames StringList `json:"alarmNames"`
	rollback *bool `json:"rollback"`
}

// DeploymentCircuitBreaker represents the DeploymentCircuitBreaker structure
type DeploymentCircuitBreaker struct {
	enable *bool `json:"enable"`
	rollback *bool `json:"rollback"`
}

// DeploymentConfiguration represents the DeploymentConfiguration structure
type DeploymentConfiguration struct {
	alarms *DeploymentAlarms `json:"alarms,omitempty"`
	deploymentCircuitBreaker *DeploymentCircuitBreaker `json:"deploymentCircuitBreaker,omitempty"`
	maximumPercent *int32 `json:"maximumPercent,omitempty"`
	minimumHealthyPercent *int32 `json:"minimumHealthyPercent,omitempty"`
}

// DeploymentController represents the DeploymentController structure
type DeploymentController struct {
	type *DeploymentControllerType `json:"type"`
}

// DeploymentEphemeralStorage represents the DeploymentEphemeralStorage structure
type DeploymentEphemeralStorage struct {
	kmsKeyId *string `json:"kmsKeyId,omitempty"`
}

// Deployments represents a list type
type Deployments []*Deployment

// DeregisterContainerInstanceRequest represents the DeregisterContainerInstanceRequest structure
type DeregisterContainerInstanceRequest struct {
	cluster *string `json:"cluster,omitempty"`
	containerInstance *string `json:"containerInstance"`
	force *bool `json:"force,omitempty"`
}

// DeregisterContainerInstanceResponse represents the DeregisterContainerInstanceResponse structure
type DeregisterContainerInstanceResponse struct {
	containerInstance *ContainerInstance `json:"containerInstance,omitempty"`
}

// DeregisterTaskDefinitionRequest represents the DeregisterTaskDefinitionRequest structure
type DeregisterTaskDefinitionRequest struct {
	taskDefinition *string `json:"taskDefinition"`
}

// DeregisterTaskDefinitionResponse represents the DeregisterTaskDefinitionResponse structure
type DeregisterTaskDefinitionResponse struct {
	taskDefinition *TaskDefinition `json:"taskDefinition,omitempty"`
}

// DescribeCapacityProvidersRequest represents the DescribeCapacityProvidersRequest structure
type DescribeCapacityProvidersRequest struct {
	nextToken *string `json:"nextToken,omitempty"`
	capacityProviders StringList `json:"capacityProviders,omitempty"`
	include CapacityProviderFieldList `json:"include,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
}

// DescribeCapacityProvidersResponse represents the DescribeCapacityProvidersResponse structure
type DescribeCapacityProvidersResponse struct {
	capacityProviders *CapacityProviders `json:"capacityProviders,omitempty"`
	failures *Failures `json:"failures,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// DescribeClustersRequest represents the DescribeClustersRequest structure
type DescribeClustersRequest struct {
	clusters StringList `json:"clusters,omitempty"`
	include ClusterFieldList `json:"include,omitempty"`
}

// DescribeClustersResponse represents the DescribeClustersResponse structure
type DescribeClustersResponse struct {
	clusters *Clusters `json:"clusters,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// DescribeContainerInstancesRequest represents the DescribeContainerInstancesRequest structure
type DescribeContainerInstancesRequest struct {
	cluster *string `json:"cluster,omitempty"`
	containerInstances StringList `json:"containerInstances"`
	include ContainerInstanceFieldList `json:"include,omitempty"`
}

// DescribeContainerInstancesResponse represents the DescribeContainerInstancesResponse structure
type DescribeContainerInstancesResponse struct {
	failures *Failures `json:"failures,omitempty"`
	containerInstances *ContainerInstances `json:"containerInstances,omitempty"`
}

// DescribeServiceDeploymentsRequest represents the DescribeServiceDeploymentsRequest structure
type DescribeServiceDeploymentsRequest struct {
	serviceDeploymentArns StringList `json:"serviceDeploymentArns"`
}

// DescribeServiceDeploymentsResponse represents the DescribeServiceDeploymentsResponse structure
type DescribeServiceDeploymentsResponse struct {
	serviceDeployments *ServiceDeployments `json:"serviceDeployments,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// DescribeServiceRevisionsRequest represents the DescribeServiceRevisionsRequest structure
type DescribeServiceRevisionsRequest struct {
	serviceRevisionArns StringList `json:"serviceRevisionArns"`
}

// DescribeServiceRevisionsResponse represents the DescribeServiceRevisionsResponse structure
type DescribeServiceRevisionsResponse struct {
	serviceRevisions *ServiceRevisions `json:"serviceRevisions,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// DescribeServicesRequest represents the DescribeServicesRequest structure
type DescribeServicesRequest struct {
	cluster *string `json:"cluster,omitempty"`
	services StringList `json:"services"`
	include ServiceFieldList `json:"include,omitempty"`
}

// DescribeServicesResponse represents the DescribeServicesResponse structure
type DescribeServicesResponse struct {
	services *Services `json:"services,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// DescribeTaskDefinitionRequest represents the DescribeTaskDefinitionRequest structure
type DescribeTaskDefinitionRequest struct {
	include TaskDefinitionFieldList `json:"include,omitempty"`
	taskDefinition *string `json:"taskDefinition"`
}

// DescribeTaskDefinitionResponse represents the DescribeTaskDefinitionResponse structure
type DescribeTaskDefinitionResponse struct {
	taskDefinition *TaskDefinition `json:"taskDefinition,omitempty"`
	tags *Tags `json:"tags,omitempty"`
}

// DescribeTaskSetsRequest represents the DescribeTaskSetsRequest structure
type DescribeTaskSetsRequest struct {
	cluster *string `json:"cluster"`
	service *string `json:"service"`
	taskSets StringList `json:"taskSets,omitempty"`
	include TaskSetFieldList `json:"include,omitempty"`
}

// DescribeTaskSetsResponse represents the DescribeTaskSetsResponse structure
type DescribeTaskSetsResponse struct {
	taskSets *TaskSets `json:"taskSets,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// DescribeTasksRequest represents the DescribeTasksRequest structure
type DescribeTasksRequest struct {
	cluster *string `json:"cluster,omitempty"`
	tasks StringList `json:"tasks"`
	include TaskFieldList `json:"include,omitempty"`
}

// DescribeTasksResponse represents the DescribeTasksResponse structure
type DescribeTasksResponse struct {
	tasks *Tasks `json:"tasks,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// Device represents the Device structure
type Device struct {
	hostPath *string `json:"hostPath"`
	containerPath *string `json:"containerPath,omitempty"`
	permissions *DeviceCgroupPermissions `json:"permissions,omitempty"`
}

// DeviceCgroupPermissions represents a list type
type DeviceCgroupPermissions []*DeviceCgroupPermission

// DevicesList represents a list type
type DevicesList []*Device

// DiscoverPollEndpointRequest represents the DiscoverPollEndpointRequest structure
type DiscoverPollEndpointRequest struct {
	containerInstance *string `json:"containerInstance,omitempty"`
	cluster *string `json:"cluster,omitempty"`
}

// DiscoverPollEndpointResponse represents the DiscoverPollEndpointResponse structure
type DiscoverPollEndpointResponse struct {
	endpoint *string `json:"endpoint,omitempty"`
	telemetryEndpoint *string `json:"telemetryEndpoint,omitempty"`
	serviceConnectEndpoint *string `json:"serviceConnectEndpoint,omitempty"`
}

// DockerLabelsMap represents a map type  
type DockerLabelsMap map[*string]*string

// DockerVolumeConfiguration represents the DockerVolumeConfiguration structure
type DockerVolumeConfiguration struct {
	scope *Scope `json:"scope,omitempty"`
	autoprovision *bool `json:"autoprovision,omitempty"`
	driver *string `json:"driver,omitempty"`
	driverOpts StringMap `json:"driverOpts,omitempty"`
	labels StringMap `json:"labels,omitempty"`
}

// EBSTagSpecification represents the EBSTagSpecification structure
type EBSTagSpecification struct {
	resourceType *EBSResourceType `json:"resourceType"`
	tags *Tags `json:"tags,omitempty"`
	propagateTags *PropagateTags `json:"propagateTags,omitempty"`
}

// EBSTagSpecifications represents a list type
type EBSTagSpecifications []*EBSTagSpecification

// EFSAuthorizationConfig represents the EFSAuthorizationConfig structure
type EFSAuthorizationConfig struct {
	iam *EFSAuthorizationConfigIAM `json:"iam,omitempty"`
	accessPointId *string `json:"accessPointId,omitempty"`
}

// EFSVolumeConfiguration represents the EFSVolumeConfiguration structure
type EFSVolumeConfiguration struct {
	fileSystemId *string `json:"fileSystemId"`
	rootDirectory *string `json:"rootDirectory,omitempty"`
	transitEncryption *EFSTransitEncryption `json:"transitEncryption,omitempty"`
	transitEncryptionPort *int32 `json:"transitEncryptionPort,omitempty"`
	authorizationConfig *EFSAuthorizationConfig `json:"authorizationConfig,omitempty"`
}

// EnvironmentFile represents the EnvironmentFile structure
type EnvironmentFile struct {
	value *string `json:"value"`
	type *EnvironmentFileType `json:"type"`
}

// EnvironmentFiles represents a list type
type EnvironmentFiles []*EnvironmentFile

// EnvironmentVariables represents a list type
type EnvironmentVariables []*KeyValuePair

// EphemeralStorage represents the EphemeralStorage structure
type EphemeralStorage struct {
	sizeInGiB *int32 `json:"sizeInGiB"`
}

// ExecuteCommandConfiguration represents the ExecuteCommandConfiguration structure
type ExecuteCommandConfiguration struct {
	kmsKeyId *string `json:"kmsKeyId,omitempty"`
	logging *ExecuteCommandLogging `json:"logging,omitempty"`
	logConfiguration *ExecuteCommandLogConfiguration `json:"logConfiguration,omitempty"`
}

// ExecuteCommandLogConfiguration represents the ExecuteCommandLogConfiguration structure
type ExecuteCommandLogConfiguration struct {
	cloudWatchLogGroupName *string `json:"cloudWatchLogGroupName,omitempty"`
	cloudWatchEncryptionEnabled *bool `json:"cloudWatchEncryptionEnabled,omitempty"`
	s3BucketName *string `json:"s3BucketName,omitempty"`
	s3EncryptionEnabled *bool `json:"s3EncryptionEnabled,omitempty"`
	s3KeyPrefix *string `json:"s3KeyPrefix,omitempty"`
}

// ExecuteCommandRequest represents the ExecuteCommandRequest structure
type ExecuteCommandRequest struct {
	interactive *bool `json:"interactive"`
	task *string `json:"task"`
	cluster *string `json:"cluster,omitempty"`
	container *string `json:"container,omitempty"`
	command *string `json:"command"`
}

// ExecuteCommandResponse represents the ExecuteCommandResponse structure
type ExecuteCommandResponse struct {
	session *Session `json:"session,omitempty"`
	taskArn *string `json:"taskArn,omitempty"`
	clusterArn *string `json:"clusterArn,omitempty"`
	containerArn *string `json:"containerArn,omitempty"`
	containerName *string `json:"containerName,omitempty"`
	interactive *bool `json:"interactive,omitempty"`
}

// FSxWindowsFileServerAuthorizationConfig represents the FSxWindowsFileServerAuthorizationConfig structure
type FSxWindowsFileServerAuthorizationConfig struct {
	credentialsParameter *string `json:"credentialsParameter"`
	domain *string `json:"domain"`
}

// FSxWindowsFileServerVolumeConfiguration represents the FSxWindowsFileServerVolumeConfiguration structure
type FSxWindowsFileServerVolumeConfiguration struct {
	rootDirectory *string `json:"rootDirectory"`
	authorizationConfig *FSxWindowsFileServerAuthorizationConfig `json:"authorizationConfig"`
	fileSystemId *string `json:"fileSystemId"`
}

// Failure represents the Failure structure
type Failure struct {
	arn *string `json:"arn,omitempty"`
	reason *string `json:"reason,omitempty"`
	detail *string `json:"detail,omitempty"`
}

// Failures represents a list type
type Failures []*Failure

// FirelensConfiguration represents the FirelensConfiguration structure
type FirelensConfiguration struct {
	options FirelensConfigurationOptionsMap `json:"options,omitempty"`
	type *FirelensConfigurationType `json:"type"`
}

// FirelensConfigurationOptionsMap represents a map type  
type FirelensConfigurationOptionsMap map[*string]*string

// GetTaskProtectionRequest represents the GetTaskProtectionRequest structure
type GetTaskProtectionRequest struct {
	cluster *string `json:"cluster"`
	tasks StringList `json:"tasks,omitempty"`
}

// GetTaskProtectionResponse represents the GetTaskProtectionResponse structure
type GetTaskProtectionResponse struct {
	protectedTasks *ProtectedTasks `json:"protectedTasks,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// GpuIds represents a list type
type GpuIds []*string

// HealthCheck represents the HealthCheck structure
type HealthCheck struct {
	command StringList `json:"command"`
	interval *int32 `json:"interval,omitempty"`
	timeout *int32 `json:"timeout,omitempty"`
	retries *int32 `json:"retries,omitempty"`
	startPeriod *int32 `json:"startPeriod,omitempty"`
}

// HostEntry represents the HostEntry structure
type HostEntry struct {
	ipAddress *string `json:"ipAddress"`
	hostname *string `json:"hostname"`
}

// HostEntryList represents a list type
type HostEntryList []*HostEntry

// HostVolumeProperties represents the HostVolumeProperties structure
type HostVolumeProperties struct {
	sourcePath *string `json:"sourcePath,omitempty"`
}

// InferenceAccelerator represents the InferenceAccelerator structure
type InferenceAccelerator struct {
	deviceName *string `json:"deviceName"`
	deviceType *string `json:"deviceType"`
}

// InferenceAcceleratorOverride represents the InferenceAcceleratorOverride structure
type InferenceAcceleratorOverride struct {
	deviceName *string `json:"deviceName,omitempty"`
	deviceType *string `json:"deviceType,omitempty"`
}

// InferenceAcceleratorOverrides represents a list type
type InferenceAcceleratorOverrides []*InferenceAcceleratorOverride

// InferenceAccelerators represents a list type
type InferenceAccelerators []*InferenceAccelerator

// InstanceHealthCheckResult represents the InstanceHealthCheckResult structure
type InstanceHealthCheckResult struct {
	type *InstanceHealthCheckType `json:"type,omitempty"`
	status *InstanceHealthCheckState `json:"status,omitempty"`
	lastUpdated *time.Time `json:"lastUpdated,omitempty"`
	lastStatusChange *time.Time `json:"lastStatusChange,omitempty"`
}

// InstanceHealthCheckResultList represents a list type
type InstanceHealthCheckResultList []*InstanceHealthCheckResult

// IntegerList represents a list type
type IntegerList []*int32

// InvalidParameterException represents the InvalidParameterException structure
type InvalidParameterException struct {
	message *string `json:"message,omitempty"`
}

// KernelCapabilities represents the KernelCapabilities structure
type KernelCapabilities struct {
	add StringList `json:"add,omitempty"`
	drop StringList `json:"drop,omitempty"`
}

// KeyValuePair represents the KeyValuePair structure
type KeyValuePair struct {
	value *string `json:"value,omitempty"`
	name *string `json:"name,omitempty"`
}

// LimitExceededException represents the LimitExceededException structure
type LimitExceededException struct {
	message *string `json:"message,omitempty"`
}

// LinuxParameters represents the LinuxParameters structure
type LinuxParameters struct {
	capabilities *KernelCapabilities `json:"capabilities,omitempty"`
	devices DevicesList `json:"devices,omitempty"`
	initProcessEnabled *bool `json:"initProcessEnabled,omitempty"`
	sharedMemorySize *int32 `json:"sharedMemorySize,omitempty"`
	tmpfs TmpfsList `json:"tmpfs,omitempty"`
	maxSwap *int32 `json:"maxSwap,omitempty"`
	swappiness *int32 `json:"swappiness,omitempty"`
}

// ListAccountSettingsRequest represents the ListAccountSettingsRequest structure
type ListAccountSettingsRequest struct {
	name *SettingName `json:"name,omitempty"`
	value *string `json:"value,omitempty"`
	principalArn *string `json:"principalArn,omitempty"`
	effectiveSettings *bool `json:"effectiveSettings,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
}

// ListAccountSettingsResponse represents the ListAccountSettingsResponse structure
type ListAccountSettingsResponse struct {
	settings *Settings `json:"settings,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// ListAttributesRequest represents the ListAttributesRequest structure
type ListAttributesRequest struct {
	targetType *TargetType `json:"targetType"`
	attributeName *string `json:"attributeName,omitempty"`
	attributeValue *string `json:"attributeValue,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
	cluster *string `json:"cluster,omitempty"`
}

// ListAttributesResponse represents the ListAttributesResponse structure
type ListAttributesResponse struct {
	attributes *Attributes `json:"attributes,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// ListClustersRequest represents the ListClustersRequest structure
type ListClustersRequest struct {
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
}

// ListClustersResponse represents the ListClustersResponse structure
type ListClustersResponse struct {
	nextToken *string `json:"nextToken,omitempty"`
	clusterArns StringList `json:"clusterArns,omitempty"`
}

// ListContainerInstancesRequest represents the ListContainerInstancesRequest structure
type ListContainerInstancesRequest struct {
	status *ContainerInstanceStatus `json:"status,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	filter *string `json:"filter,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
}

// ListContainerInstancesResponse represents the ListContainerInstancesResponse structure
type ListContainerInstancesResponse struct {
	nextToken *string `json:"nextToken,omitempty"`
	containerInstanceArns StringList `json:"containerInstanceArns,omitempty"`
}

// ListServiceDeploymentsRequest represents the ListServiceDeploymentsRequest structure
type ListServiceDeploymentsRequest struct {
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
	service *string `json:"service"`
	cluster *string `json:"cluster,omitempty"`
	status ServiceDeploymentStatusList `json:"status,omitempty"`
	createdAt *CreatedAt `json:"createdAt,omitempty"`
}

// ListServiceDeploymentsResponse represents the ListServiceDeploymentsResponse structure
type ListServiceDeploymentsResponse struct {
	serviceDeployments *ServiceDeploymentsBrief `json:"serviceDeployments,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// ListServicesByNamespaceRequest represents the ListServicesByNamespaceRequest structure
type ListServicesByNamespaceRequest struct {
	namespace *string `json:"namespace"`
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
}

// ListServicesByNamespaceResponse represents the ListServicesByNamespaceResponse structure
type ListServicesByNamespaceResponse struct {
	serviceArns StringList `json:"serviceArns,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// ListServicesRequest represents the ListServicesRequest structure
type ListServicesRequest struct {
	cluster *string `json:"cluster,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
	schedulingStrategy *SchedulingStrategy `json:"schedulingStrategy,omitempty"`
}

// ListServicesResponse represents the ListServicesResponse structure
type ListServicesResponse struct {
	serviceArns StringList `json:"serviceArns,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// ListTagsForResourceRequest represents the ListTagsForResourceRequest structure
type ListTagsForResourceRequest struct {
	resourceArn *string `json:"resourceArn"`
}

// ListTagsForResourceResponse represents the ListTagsForResourceResponse structure
type ListTagsForResourceResponse struct {
	tags *Tags `json:"tags,omitempty"`
}

// ListTaskDefinitionFamiliesRequest represents the ListTaskDefinitionFamiliesRequest structure
type ListTaskDefinitionFamiliesRequest struct {
	status *TaskDefinitionFamilyStatus `json:"status,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
	familyPrefix *string `json:"familyPrefix,omitempty"`
}

// ListTaskDefinitionFamiliesResponse represents the ListTaskDefinitionFamiliesResponse structure
type ListTaskDefinitionFamiliesResponse struct {
	families StringList `json:"families,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// ListTaskDefinitionsRequest represents the ListTaskDefinitionsRequest structure
type ListTaskDefinitionsRequest struct {
	familyPrefix *string `json:"familyPrefix,omitempty"`
	status *TaskDefinitionStatus `json:"status,omitempty"`
	sort *SortOrder `json:"sort,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
}

// ListTaskDefinitionsResponse represents the ListTaskDefinitionsResponse structure
type ListTaskDefinitionsResponse struct {
	taskDefinitionArns StringList `json:"taskDefinitionArns,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// ListTasksRequest represents the ListTasksRequest structure
type ListTasksRequest struct {
	serviceName *string `json:"serviceName,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	containerInstance *string `json:"containerInstance,omitempty"`
	family *string `json:"family,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
	startedBy *string `json:"startedBy,omitempty"`
	desiredStatus *DesiredStatus `json:"desiredStatus,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
	maxResults *int32 `json:"maxResults,omitempty"`
}

// ListTasksResponse represents the ListTasksResponse structure
type ListTasksResponse struct {
	taskArns StringList `json:"taskArns,omitempty"`
	nextToken *string `json:"nextToken,omitempty"`
}

// LoadBalancer represents the LoadBalancer structure
type LoadBalancer struct {
	targetGroupArn *string `json:"targetGroupArn,omitempty"`
	loadBalancerName *string `json:"loadBalancerName,omitempty"`
	containerName *string `json:"containerName,omitempty"`
	containerPort *int32 `json:"containerPort,omitempty"`
}

// LoadBalancers represents a list type
type LoadBalancers []*LoadBalancer

// LogConfiguration represents the LogConfiguration structure
type LogConfiguration struct {
	secretOptions SecretList `json:"secretOptions,omitempty"`
	logDriver *LogDriver `json:"logDriver"`
	options LogConfigurationOptionsMap `json:"options,omitempty"`
}

// LogConfigurationOptionsMap represents a map type  
type LogConfigurationOptionsMap map[*string]*string

// ManagedAgent represents the ManagedAgent structure
type ManagedAgent struct {
	lastStartedAt *time.Time `json:"lastStartedAt,omitempty"`
	name *ManagedAgentName `json:"name,omitempty"`
	reason *string `json:"reason,omitempty"`
	lastStatus *string `json:"lastStatus,omitempty"`
}

// ManagedAgentStateChange represents the ManagedAgentStateChange structure
type ManagedAgentStateChange struct {
	containerName *string `json:"containerName"`
	managedAgentName *ManagedAgentName `json:"managedAgentName"`
	status *string `json:"status"`
	reason *string `json:"reason,omitempty"`
}

// ManagedAgentStateChanges represents a list type
type ManagedAgentStateChanges []*ManagedAgentStateChange

// ManagedAgents represents a list type
type ManagedAgents []*ManagedAgent

// ManagedScaling represents the ManagedScaling structure
type ManagedScaling struct {
	targetCapacity *ManagedScalingTargetCapacity `json:"targetCapacity,omitempty"`
	minimumScalingStepSize *ManagedScalingStepSize `json:"minimumScalingStepSize,omitempty"`
	maximumScalingStepSize *ManagedScalingStepSize `json:"maximumScalingStepSize,omitempty"`
	instanceWarmupPeriod *ManagedScalingInstanceWarmupPeriod `json:"instanceWarmupPeriod,omitempty"`
	status *ManagedScalingStatus `json:"status,omitempty"`
}

// ManagedStorageConfiguration represents the ManagedStorageConfiguration structure
type ManagedStorageConfiguration struct {
	kmsKeyId *string `json:"kmsKeyId,omitempty"`
	fargateEphemeralStorageKmsKeyId *string `json:"fargateEphemeralStorageKmsKeyId,omitempty"`
}

// MissingVersionException represents the MissingVersionException structure
type MissingVersionException struct {
	message *string `json:"message,omitempty"`
}

// MountPoint represents the MountPoint structure
type MountPoint struct {
	sourceVolume *string `json:"sourceVolume,omitempty"`
	containerPath *string `json:"containerPath,omitempty"`
	readOnly *bool `json:"readOnly,omitempty"`
}

// MountPointList represents a list type
type MountPointList []*MountPoint

// NamespaceNotFoundException represents the NamespaceNotFoundException structure
type NamespaceNotFoundException struct {
	message *string `json:"message,omitempty"`
}

// NetworkBinding represents the NetworkBinding structure
type NetworkBinding struct {
	containerPort *int32 `json:"containerPort,omitempty"`
	hostPort *int32 `json:"hostPort,omitempty"`
	protocol *TransportProtocol `json:"protocol,omitempty"`
	containerPortRange *string `json:"containerPortRange,omitempty"`
	hostPortRange *string `json:"hostPortRange,omitempty"`
	bindIP *string `json:"bindIP,omitempty"`
}

// NetworkBindings represents a list type
type NetworkBindings []*NetworkBinding

// NetworkConfiguration represents the NetworkConfiguration structure
type NetworkConfiguration struct {
	awsvpcConfiguration *AwsVpcConfiguration `json:"awsvpcConfiguration,omitempty"`
}

// NetworkInterface represents the NetworkInterface structure
type NetworkInterface struct {
	attachmentId *string `json:"attachmentId,omitempty"`
	privateIpv4Address *string `json:"privateIpv4Address,omitempty"`
	ipv6Address *string `json:"ipv6Address,omitempty"`
}

// NetworkInterfaces represents a list type
type NetworkInterfaces []*NetworkInterface

// NoUpdateAvailableException represents the NoUpdateAvailableException structure
type NoUpdateAvailableException struct {
	message *string `json:"message,omitempty"`
}

// PlacementConstraint represents the PlacementConstraint structure
type PlacementConstraint struct {
	type *PlacementConstraintType `json:"type,omitempty"`
	expression *string `json:"expression,omitempty"`
}

// PlacementConstraints represents a list type
type PlacementConstraints []*PlacementConstraint

// PlacementStrategies represents a list type
type PlacementStrategies []*PlacementStrategy

// PlacementStrategy represents the PlacementStrategy structure
type PlacementStrategy struct {
	type *PlacementStrategyType `json:"type,omitempty"`
	field *string `json:"field,omitempty"`
}

// PlatformDevice represents the PlatformDevice structure
type PlatformDevice struct {
	id *string `json:"id"`
	type *PlatformDeviceType `json:"type"`
}

// PlatformDevices represents a list type
type PlatformDevices []*PlatformDevice

// PlatformTaskDefinitionIncompatibilityException represents the PlatformTaskDefinitionIncompatibilityException structure
type PlatformTaskDefinitionIncompatibilityException struct {
	message *string `json:"message,omitempty"`
}

// PlatformUnknownException represents the PlatformUnknownException structure
type PlatformUnknownException struct {
	message *string `json:"message,omitempty"`
}

// PortMapping represents the PortMapping structure
type PortMapping struct {
	name *string `json:"name,omitempty"`
	appProtocol *ApplicationProtocol `json:"appProtocol,omitempty"`
	containerPortRange *string `json:"containerPortRange,omitempty"`
	containerPort *int32 `json:"containerPort,omitempty"`
	hostPort *int32 `json:"hostPort,omitempty"`
	protocol *TransportProtocol `json:"protocol,omitempty"`
}

// PortMappingList represents a list type
type PortMappingList []*PortMapping

// ProtectedTask represents the ProtectedTask structure
type ProtectedTask struct {
	expirationDate *time.Time `json:"expirationDate,omitempty"`
	taskArn *string `json:"taskArn,omitempty"`
	protectionEnabled *bool `json:"protectionEnabled,omitempty"`
}

// ProtectedTasks represents a list type
type ProtectedTasks []*ProtectedTask

// ProxyConfiguration represents the ProxyConfiguration structure
type ProxyConfiguration struct {
	properties *ProxyConfigurationProperties `json:"properties,omitempty"`
	type *ProxyConfigurationType `json:"type,omitempty"`
	containerName *string `json:"containerName"`
}

// ProxyConfigurationProperties represents a list type
type ProxyConfigurationProperties []*KeyValuePair

// PutAccountSettingDefaultRequest represents the PutAccountSettingDefaultRequest structure
type PutAccountSettingDefaultRequest struct {
	name *SettingName `json:"name"`
	value *string `json:"value"`
}

// PutAccountSettingDefaultResponse represents the PutAccountSettingDefaultResponse structure
type PutAccountSettingDefaultResponse struct {
	setting *Setting `json:"setting,omitempty"`
}

// PutAccountSettingRequest represents the PutAccountSettingRequest structure
type PutAccountSettingRequest struct {
	name *SettingName `json:"name"`
	value *string `json:"value"`
	principalArn *string `json:"principalArn,omitempty"`
}

// PutAccountSettingResponse represents the PutAccountSettingResponse structure
type PutAccountSettingResponse struct {
	setting *Setting `json:"setting,omitempty"`
}

// PutAttributesRequest represents the PutAttributesRequest structure
type PutAttributesRequest struct {
	cluster *string `json:"cluster,omitempty"`
	attributes *Attributes `json:"attributes"`
}

// PutAttributesResponse represents the PutAttributesResponse structure
type PutAttributesResponse struct {
	attributes *Attributes `json:"attributes,omitempty"`
}

// PutClusterCapacityProvidersRequest represents the PutClusterCapacityProvidersRequest structure
type PutClusterCapacityProvidersRequest struct {
	cluster *string `json:"cluster"`
	capacityProviders StringList `json:"capacityProviders"`
	defaultCapacityProviderStrategy *CapacityProviderStrategy `json:"defaultCapacityProviderStrategy"`
}

// PutClusterCapacityProvidersResponse represents the PutClusterCapacityProvidersResponse structure
type PutClusterCapacityProvidersResponse struct {
	cluster *Cluster `json:"cluster,omitempty"`
}

// RegisterContainerInstanceRequest represents the RegisterContainerInstanceRequest structure
type RegisterContainerInstanceRequest struct {
	versionInfo *VersionInfo `json:"versionInfo,omitempty"`
	containerInstanceArn *string `json:"containerInstanceArn,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	instanceIdentityDocument *string `json:"instanceIdentityDocument,omitempty"`
	instanceIdentityDocumentSignature *string `json:"instanceIdentityDocumentSignature,omitempty"`
	attributes *Attributes `json:"attributes,omitempty"`
	platformDevices *PlatformDevices `json:"platformDevices,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	totalResources *Resources `json:"totalResources,omitempty"`
}

// RegisterContainerInstanceResponse represents the RegisterContainerInstanceResponse structure
type RegisterContainerInstanceResponse struct {
	containerInstance *ContainerInstance `json:"containerInstance,omitempty"`
}

// RegisterTaskDefinitionRequest represents the RegisterTaskDefinitionRequest structure
type RegisterTaskDefinitionRequest struct {
	tags *Tags `json:"tags,omitempty"`
	pidMode *PidMode `json:"pidMode,omitempty"`
	ephemeralStorage *EphemeralStorage `json:"ephemeralStorage,omitempty"`
	executionRoleArn *string `json:"executionRoleArn,omitempty"`
	memory *string `json:"memory,omitempty"`
	ipcMode *IpcMode `json:"ipcMode,omitempty"`
	inferenceAccelerators *InferenceAccelerators `json:"inferenceAccelerators,omitempty"`
	taskRoleArn *string `json:"taskRoleArn,omitempty"`
	volumes VolumeList `json:"volumes,omitempty"`
	enableFaultInjection *bool `json:"enableFaultInjection,omitempty"`
	networkMode *NetworkMode `json:"networkMode,omitempty"`
	requiresCompatibilities CompatibilityList `json:"requiresCompatibilities,omitempty"`
	proxyConfiguration *ProxyConfiguration `json:"proxyConfiguration,omitempty"`
	runtimePlatform *RuntimePlatform `json:"runtimePlatform,omitempty"`
	family *string `json:"family"`
	containerDefinitions *ContainerDefinitions `json:"containerDefinitions"`
	placementConstraints *TaskDefinitionPlacementConstraints `json:"placementConstraints,omitempty"`
	cpu *string `json:"cpu,omitempty"`
}

// RegisterTaskDefinitionResponse represents the RegisterTaskDefinitionResponse structure
type RegisterTaskDefinitionResponse struct {
	taskDefinition *TaskDefinition `json:"taskDefinition,omitempty"`
	tags *Tags `json:"tags,omitempty"`
}

// RepositoryCredentials represents the RepositoryCredentials structure
type RepositoryCredentials struct {
	credentialsParameter *string `json:"credentialsParameter"`
}

// RequiresAttributes represents a list type
type RequiresAttributes []*Attribute

// Resource represents the Resource structure
type Resource struct {
	name *string `json:"name,omitempty"`
	type *string `json:"type,omitempty"`
	doubleValue *float64 `json:"doubleValue,omitempty"`
	longValue *int64 `json:"longValue,omitempty"`
	integerValue *int32 `json:"integerValue,omitempty"`
	stringSetValue StringList `json:"stringSetValue,omitempty"`
}

// ResourceIds represents a list type
type ResourceIds []*string

// ResourceInUseException represents the ResourceInUseException structure
type ResourceInUseException struct {
	message *string `json:"message,omitempty"`
}

// ResourceNotFoundException represents the ResourceNotFoundException structure
type ResourceNotFoundException struct {
	message *string `json:"message,omitempty"`
}

// ResourceRequirement represents the ResourceRequirement structure
type ResourceRequirement struct {
	value *string `json:"value"`
	type *ResourceType `json:"type"`
}

// ResourceRequirements represents a list type
type ResourceRequirements []*ResourceRequirement

// Resources represents a list type
type Resources []*Resource

// Rollback represents the Rollback structure
type Rollback struct {
	reason *string `json:"reason,omitempty"`
	startedAt *time.Time `json:"startedAt,omitempty"`
	serviceRevisionArn *string `json:"serviceRevisionArn,omitempty"`
}

// RunTaskRequest represents the RunTaskRequest structure
type RunTaskRequest struct {
	capacityProviderStrategy *CapacityProviderStrategy `json:"capacityProviderStrategy,omitempty"`
	enableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`
	placementConstraints *PlacementConstraints `json:"placementConstraints,omitempty"`
	platformVersion *string `json:"platformVersion,omitempty"`
	startedBy *string `json:"startedBy,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	enableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`
	placementStrategy *PlacementStrategies `json:"placementStrategy,omitempty"`
	propagateTags *PropagateTags `json:"propagateTags,omitempty"`
	taskDefinition *string `json:"taskDefinition"`
	volumeConfigurations *TaskVolumeConfigurations `json:"volumeConfigurations,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
	referenceId *string `json:"referenceId,omitempty"`
	clientToken *string `json:"clientToken,omitempty"`
	count *int32 `json:"count,omitempty"`
	group *string `json:"group,omitempty"`
	overrides *TaskOverride `json:"overrides,omitempty"`
}

// RunTaskResponse represents the RunTaskResponse structure
type RunTaskResponse struct {
	tasks *Tasks `json:"tasks,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// RuntimePlatform represents the RuntimePlatform structure
type RuntimePlatform struct {
	cpuArchitecture *CPUArchitecture `json:"cpuArchitecture,omitempty"`
	operatingSystemFamily *OSFamily `json:"operatingSystemFamily,omitempty"`
}

// Scale represents the Scale structure
type Scale struct {
	value *float64 `json:"value,omitempty"`
	unit *ScaleUnit `json:"unit,omitempty"`
}

// Secret represents the Secret structure
type Secret struct {
	name *string `json:"name"`
	valueFrom *string `json:"valueFrom"`
}

// SecretList represents a list type
type SecretList []*Secret

// ServerException represents the ServerException structure
type ServerException struct {
	message *string `json:"message,omitempty"`
}

// Service represents the Service structure
type Service struct {
	placementConstraints *PlacementConstraints `json:"placementConstraints,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	availabilityZoneRebalancing *AvailabilityZoneRebalancing `json:"availabilityZoneRebalancing,omitempty"`
	loadBalancers *LoadBalancers `json:"loadBalancers,omitempty"`
	runningCount *int32 `json:"runningCount,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
	platformVersion *string `json:"platformVersion,omitempty"`
	roleArn *string `json:"roleArn,omitempty"`
	createdAt *time.Time `json:"createdAt,omitempty"`
	serviceArn *string `json:"serviceArn,omitempty"`
	clusterArn *string `json:"clusterArn,omitempty"`
	pendingCount *int32 `json:"pendingCount,omitempty"`
	enableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`
	enableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`
	serviceName *string `json:"serviceName,omitempty"`
	status *string `json:"status,omitempty"`
	serviceRegistries *ServiceRegistries `json:"serviceRegistries,omitempty"`
	capacityProviderStrategy *CapacityProviderStrategy `json:"capacityProviderStrategy,omitempty"`
	taskDefinition *string `json:"taskDefinition,omitempty"`
	deployments *Deployments `json:"deployments,omitempty"`
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
	deploymentController *DeploymentController `json:"deploymentController,omitempty"`
	placementStrategy *PlacementStrategies `json:"placementStrategy,omitempty"`
	schedulingStrategy *SchedulingStrategy `json:"schedulingStrategy,omitempty"`
	desiredCount *int32 `json:"desiredCount,omitempty"`
	deploymentConfiguration *DeploymentConfiguration `json:"deploymentConfiguration,omitempty"`
	events *ServiceEvents `json:"events,omitempty"`
	healthCheckGracePeriodSeconds *int32 `json:"healthCheckGracePeriodSeconds,omitempty"`
	createdBy *string `json:"createdBy,omitempty"`
	propagateTags *PropagateTags `json:"propagateTags,omitempty"`
	platformFamily *string `json:"platformFamily,omitempty"`
	taskSets *TaskSets `json:"taskSets,omitempty"`
}

// ServiceConnectClientAlias represents the ServiceConnectClientAlias structure
type ServiceConnectClientAlias struct {
	port *PortNumber `json:"port"`
	dnsName *string `json:"dnsName,omitempty"`
}

// ServiceConnectClientAliasList represents a list type
type ServiceConnectClientAliasList []*ServiceConnectClientAlias

// ServiceConnectConfiguration represents the ServiceConnectConfiguration structure
type ServiceConnectConfiguration struct {
	namespace *string `json:"namespace,omitempty"`
	services ServiceConnectServiceList `json:"services,omitempty"`
	logConfiguration *LogConfiguration `json:"logConfiguration,omitempty"`
	enabled *bool `json:"enabled"`
}

// ServiceConnectService represents the ServiceConnectService structure
type ServiceConnectService struct {
	portName *string `json:"portName"`
	discoveryName *string `json:"discoveryName,omitempty"`
	clientAliases ServiceConnectClientAliasList `json:"clientAliases,omitempty"`
	ingressPortOverride *PortNumber `json:"ingressPortOverride,omitempty"`
	timeout *TimeoutConfiguration `json:"timeout,omitempty"`
	tls *ServiceConnectTlsConfiguration `json:"tls,omitempty"`
}

// ServiceConnectServiceList represents a list type
type ServiceConnectServiceList []*ServiceConnectService

// ServiceConnectServiceResource represents the ServiceConnectServiceResource structure
type ServiceConnectServiceResource struct {
	discoveryName *string `json:"discoveryName,omitempty"`
	discoveryArn *string `json:"discoveryArn,omitempty"`
}

// ServiceConnectServiceResourceList represents a list type
type ServiceConnectServiceResourceList []*ServiceConnectServiceResource

// ServiceConnectTlsCertificateAuthority represents the ServiceConnectTlsCertificateAuthority structure
type ServiceConnectTlsCertificateAuthority struct {
	awsPcaAuthorityArn *string `json:"awsPcaAuthorityArn,omitempty"`
}

// ServiceConnectTlsConfiguration represents the ServiceConnectTlsConfiguration structure
type ServiceConnectTlsConfiguration struct {
	issuerCertificateAuthority *ServiceConnectTlsCertificateAuthority `json:"issuerCertificateAuthority"`
	kmsKey *string `json:"kmsKey,omitempty"`
	roleArn *string `json:"roleArn,omitempty"`
}

// ServiceDeployment represents the ServiceDeployment structure
type ServiceDeployment struct {
	rollback *Rollback `json:"rollback,omitempty"`
	updatedAt *time.Time `json:"updatedAt,omitempty"`
	status *ServiceDeploymentStatus `json:"status,omitempty"`
	createdAt *time.Time `json:"createdAt,omitempty"`
	stoppedAt *time.Time `json:"stoppedAt,omitempty"`
	sourceServiceRevisions ServiceRevisionsSummaryList `json:"sourceServiceRevisions,omitempty"`
	deploymentConfiguration *DeploymentConfiguration `json:"deploymentConfiguration,omitempty"`
	statusReason *string `json:"statusReason,omitempty"`
	serviceDeploymentArn *string `json:"serviceDeploymentArn,omitempty"`
	serviceArn *string `json:"serviceArn,omitempty"`
	clusterArn *string `json:"clusterArn,omitempty"`
	startedAt *time.Time `json:"startedAt,omitempty"`
	finishedAt *time.Time `json:"finishedAt,omitempty"`
	targetServiceRevision *ServiceRevisionSummary `json:"targetServiceRevision,omitempty"`
	deploymentCircuitBreaker *ServiceDeploymentCircuitBreaker `json:"deploymentCircuitBreaker,omitempty"`
	alarms *ServiceDeploymentAlarms `json:"alarms,omitempty"`
}

// ServiceDeploymentAlarms represents the ServiceDeploymentAlarms structure
type ServiceDeploymentAlarms struct {
	status *ServiceDeploymentRollbackMonitorsStatus `json:"status,omitempty"`
	alarmNames StringList `json:"alarmNames,omitempty"`
	triggeredAlarmNames StringList `json:"triggeredAlarmNames,omitempty"`
}

// ServiceDeploymentBrief represents the ServiceDeploymentBrief structure
type ServiceDeploymentBrief struct {
	serviceDeploymentArn *string `json:"serviceDeploymentArn,omitempty"`
	startedAt *time.Time `json:"startedAt,omitempty"`
	createdAt *time.Time `json:"createdAt,omitempty"`
	finishedAt *time.Time `json:"finishedAt,omitempty"`
	status *ServiceDeploymentStatus `json:"status,omitempty"`
	serviceArn *string `json:"serviceArn,omitempty"`
	clusterArn *string `json:"clusterArn,omitempty"`
	targetServiceRevisionArn *string `json:"targetServiceRevisionArn,omitempty"`
	statusReason *string `json:"statusReason,omitempty"`
}

// ServiceDeploymentCircuitBreaker represents the ServiceDeploymentCircuitBreaker structure
type ServiceDeploymentCircuitBreaker struct {
	status *ServiceDeploymentRollbackMonitorsStatus `json:"status,omitempty"`
	failureCount *int32 `json:"failureCount,omitempty"`
	threshold *int32 `json:"threshold,omitempty"`
}

// ServiceDeploymentNotFoundException represents the ServiceDeploymentNotFoundException structure
type ServiceDeploymentNotFoundException struct {
	message *string `json:"message,omitempty"`
}

// ServiceDeploymentStatusList represents a list type
type ServiceDeploymentStatusList []*ServiceDeploymentStatus

// ServiceDeployments represents a list type
type ServiceDeployments []*ServiceDeployment

// ServiceDeploymentsBrief represents a list type
type ServiceDeploymentsBrief []*ServiceDeploymentBrief

// ServiceEvent represents the ServiceEvent structure
type ServiceEvent struct {
	id *string `json:"id,omitempty"`
	createdAt *time.Time `json:"createdAt,omitempty"`
	message *string `json:"message,omitempty"`
}

// ServiceEvents represents a list type
type ServiceEvents []*ServiceEvent

// ServiceFieldList represents a list type
type ServiceFieldList []*ServiceField

// ServiceManagedEBSVolumeConfiguration represents the ServiceManagedEBSVolumeConfiguration structure
type ServiceManagedEBSVolumeConfiguration struct {
	iops *int32 `json:"iops,omitempty"`
	throughput *int32 `json:"throughput,omitempty"`
	tagSpecifications *EBSTagSpecifications `json:"tagSpecifications,omitempty"`
	encrypted *bool `json:"encrypted,omitempty"`
	sizeInGiB *int32 `json:"sizeInGiB,omitempty"`
	snapshotId *EBSSnapshotId `json:"snapshotId,omitempty"`
	roleArn *IAMRoleArn `json:"roleArn"`
	filesystemType *TaskFilesystemType `json:"filesystemType,omitempty"`
	kmsKeyId *EBSKMSKeyId `json:"kmsKeyId,omitempty"`
	volumeType *EBSVolumeType `json:"volumeType,omitempty"`
	volumeInitializationRate *int32 `json:"volumeInitializationRate,omitempty"`
}

// ServiceNotActiveException represents the ServiceNotActiveException structure
type ServiceNotActiveException struct {
	message *string `json:"message,omitempty"`
}

// ServiceNotFoundException represents the ServiceNotFoundException structure
type ServiceNotFoundException struct {
	message *string `json:"message,omitempty"`
}

// ServiceRegistries represents a list type
type ServiceRegistries []*ServiceRegistry

// ServiceRegistry represents the ServiceRegistry structure
type ServiceRegistry struct {
	port *int32 `json:"port,omitempty"`
	containerName *string `json:"containerName,omitempty"`
	containerPort *int32 `json:"containerPort,omitempty"`
	registryArn *string `json:"registryArn,omitempty"`
}

// ServiceRevision represents the ServiceRevision structure
type ServiceRevision struct {
	loadBalancers *LoadBalancers `json:"loadBalancers,omitempty"`
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
	serviceConnectConfiguration *ServiceConnectConfiguration `json:"serviceConnectConfiguration,omitempty"`
	serviceRevisionArn *string `json:"serviceRevisionArn,omitempty"`
	taskDefinition *string `json:"taskDefinition,omitempty"`
	platformVersion *string `json:"platformVersion,omitempty"`
	serviceRegistries *ServiceRegistries `json:"serviceRegistries,omitempty"`
	containerImages *ContainerImages `json:"containerImages,omitempty"`
	guardDutyEnabled *bool `json:"guardDutyEnabled,omitempty"`
	clusterArn *string `json:"clusterArn,omitempty"`
	volumeConfigurations *ServiceVolumeConfigurations `json:"volumeConfigurations,omitempty"`
	fargateEphemeralStorage *DeploymentEphemeralStorage `json:"fargateEphemeralStorage,omitempty"`
	createdAt *time.Time `json:"createdAt,omitempty"`
	platformFamily *string `json:"platformFamily,omitempty"`
	vpcLatticeConfigurations *VpcLatticeConfigurations `json:"vpcLatticeConfigurations,omitempty"`
	serviceArn *string `json:"serviceArn,omitempty"`
	capacityProviderStrategy *CapacityProviderStrategy `json:"capacityProviderStrategy,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
}

// ServiceRevisionSummary represents the ServiceRevisionSummary structure
type ServiceRevisionSummary struct {
	arn *string `json:"arn,omitempty"`
	requestedTaskCount *int32 `json:"requestedTaskCount,omitempty"`
	runningTaskCount *int32 `json:"runningTaskCount,omitempty"`
	pendingTaskCount *int32 `json:"pendingTaskCount,omitempty"`
}

// ServiceRevisions represents a list type
type ServiceRevisions []*ServiceRevision

// ServiceRevisionsSummaryList represents a list type
type ServiceRevisionsSummaryList []*ServiceRevisionSummary

// ServiceVolumeConfiguration represents the ServiceVolumeConfiguration structure
type ServiceVolumeConfiguration struct {
	name *ECSVolumeName `json:"name"`
	managedEBSVolume *ServiceManagedEBSVolumeConfiguration `json:"managedEBSVolume,omitempty"`
}

// ServiceVolumeConfigurations represents a list type
type ServiceVolumeConfigurations []*ServiceVolumeConfiguration

// Services represents a list type
type Services []*Service

// Session represents the Session structure
type Session struct {
	sessionId *string `json:"sessionId,omitempty"`
	streamUrl *string `json:"streamUrl,omitempty"`
	tokenValue *SensitiveString `json:"tokenValue,omitempty"`
}

// Setting represents the Setting structure
type Setting struct {
	principalArn *string `json:"principalArn,omitempty"`
	type *SettingType `json:"type,omitempty"`
	name *SettingName `json:"name,omitempty"`
	value *string `json:"value,omitempty"`
}

// Settings represents a list type
type Settings []*Setting

// StartTaskRequest represents the StartTaskRequest structure
type StartTaskRequest struct {
	referenceId *string `json:"referenceId,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	containerInstances StringList `json:"containerInstances"`
	enableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`
	overrides *TaskOverride `json:"overrides,omitempty"`
	propagateTags *PropagateTags `json:"propagateTags,omitempty"`
	startedBy *string `json:"startedBy,omitempty"`
	taskDefinition *string `json:"taskDefinition"`
	volumeConfigurations *TaskVolumeConfigurations `json:"volumeConfigurations,omitempty"`
	enableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`
	group *string `json:"group,omitempty"`
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
}

// StartTaskResponse represents the StartTaskResponse structure
type StartTaskResponse struct {
	tasks *Tasks `json:"tasks,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// Statistics represents a list type
type Statistics []*KeyValuePair

// StopServiceDeploymentRequest represents the StopServiceDeploymentRequest structure
type StopServiceDeploymentRequest struct {
	serviceDeploymentArn *string `json:"serviceDeploymentArn"`
	stopType *StopServiceDeploymentStopType `json:"stopType,omitempty"`
}

// StopServiceDeploymentResponse represents the StopServiceDeploymentResponse structure
type StopServiceDeploymentResponse struct {
	serviceDeploymentArn *string `json:"serviceDeploymentArn,omitempty"`
}

// StopTaskRequest represents the StopTaskRequest structure
type StopTaskRequest struct {
	reason *string `json:"reason,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	task *string `json:"task"`
}

// StopTaskResponse represents the StopTaskResponse structure
type StopTaskResponse struct {
	task *Task `json:"task,omitempty"`
}

// StringList represents a list type
type StringList []*string

// StringMap represents a map type  
type StringMap map[*string]*string

// SubmitAttachmentStateChangesRequest represents the SubmitAttachmentStateChangesRequest structure
type SubmitAttachmentStateChangesRequest struct {
	cluster *string `json:"cluster,omitempty"`
	attachments *AttachmentStateChanges `json:"attachments"`
}

// SubmitAttachmentStateChangesResponse represents the SubmitAttachmentStateChangesResponse structure
type SubmitAttachmentStateChangesResponse struct {
	acknowledgment *string `json:"acknowledgment,omitempty"`
}

// SubmitContainerStateChangeRequest represents the SubmitContainerStateChangeRequest structure
type SubmitContainerStateChangeRequest struct {
	reason *string `json:"reason,omitempty"`
	networkBindings *NetworkBindings `json:"networkBindings,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	task *string `json:"task,omitempty"`
	containerName *string `json:"containerName,omitempty"`
	runtimeId *string `json:"runtimeId,omitempty"`
	status *string `json:"status,omitempty"`
	exitCode *int32 `json:"exitCode,omitempty"`
}

// SubmitContainerStateChangeResponse represents the SubmitContainerStateChangeResponse structure
type SubmitContainerStateChangeResponse struct {
	acknowledgment *string `json:"acknowledgment,omitempty"`
}

// SubmitTaskStateChangeRequest represents the SubmitTaskStateChangeRequest structure
type SubmitTaskStateChangeRequest struct {
	cluster *string `json:"cluster,omitempty"`
	reason *string `json:"reason,omitempty"`
	attachments *AttachmentStateChanges `json:"attachments,omitempty"`
	managedAgents *ManagedAgentStateChanges `json:"managedAgents,omitempty"`
	pullStartedAt *time.Time `json:"pullStartedAt,omitempty"`
	pullStoppedAt *time.Time `json:"pullStoppedAt,omitempty"`
	executionStoppedAt *time.Time `json:"executionStoppedAt,omitempty"`
	task *string `json:"task,omitempty"`
	status *string `json:"status,omitempty"`
	containers *ContainerStateChanges `json:"containers,omitempty"`
}

// SubmitTaskStateChangeResponse represents the SubmitTaskStateChangeResponse structure
type SubmitTaskStateChangeResponse struct {
	acknowledgment *string `json:"acknowledgment,omitempty"`
}

// SystemControl represents the SystemControl structure
type SystemControl struct {
	namespace *string `json:"namespace,omitempty"`
	value *string `json:"value,omitempty"`
}

// SystemControls represents a list type
type SystemControls []*SystemControl

// Tag represents the Tag structure
type Tag struct {
	key *TagKey `json:"key,omitempty"`
	value *TagValue `json:"value,omitempty"`
}

// TagKeys represents a list type
type TagKeys []*TagKey

// TagResourceRequest represents the TagResourceRequest structure
type TagResourceRequest struct {
	tags *Tags `json:"tags"`
	resourceArn *string `json:"resourceArn"`
}

// TagResourceResponse represents the TagResourceResponse structure
type TagResourceResponse struct {
}

// Tags represents a list type
type Tags []*Tag

// TargetNotConnectedException represents the TargetNotConnectedException structure
type TargetNotConnectedException struct {
	message *string `json:"message,omitempty"`
}

// TargetNotFoundException represents the TargetNotFoundException structure
type TargetNotFoundException struct {
	message *string `json:"message,omitempty"`
}

// Task represents the Task structure
type Task struct {
	startedAt *time.Time `json:"startedAt,omitempty"`
	availabilityZone *string `json:"availabilityZone,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
	platformVersion *string `json:"platformVersion,omitempty"`
	platformFamily *string `json:"platformFamily,omitempty"`
	stoppedReason *string `json:"stoppedReason,omitempty"`
	attributes *Attributes `json:"attributes,omitempty"`
	enableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	version *int64 `json:"version,omitempty"`
	connectivityAt *time.Time `json:"connectivityAt,omitempty"`
	memory *string `json:"memory,omitempty"`
	stoppingAt *time.Time `json:"stoppingAt,omitempty"`
	ephemeralStorage *EphemeralStorage `json:"ephemeralStorage,omitempty"`
	containerInstanceArn *string `json:"containerInstanceArn,omitempty"`
	cpu *string `json:"cpu,omitempty"`
	lastStatus *string `json:"lastStatus,omitempty"`
	stoppedAt *time.Time `json:"stoppedAt,omitempty"`
	taskArn *string `json:"taskArn,omitempty"`
	desiredStatus *string `json:"desiredStatus,omitempty"`
	executionStoppedAt *time.Time `json:"executionStoppedAt,omitempty"`
	healthStatus *HealthStatus `json:"healthStatus,omitempty"`
	overrides *TaskOverride `json:"overrides,omitempty"`
	taskDefinitionArn *string `json:"taskDefinitionArn,omitempty"`
	fargateEphemeralStorage *TaskEphemeralStorage `json:"fargateEphemeralStorage,omitempty"`
	attachments *Attachments `json:"attachments,omitempty"`
	clusterArn *string `json:"clusterArn,omitempty"`
	connectivity *Connectivity `json:"connectivity,omitempty"`
	containers *Containers `json:"containers,omitempty"`
	createdAt *time.Time `json:"createdAt,omitempty"`
	group *string `json:"group,omitempty"`
	inferenceAccelerators *InferenceAccelerators `json:"inferenceAccelerators,omitempty"`
	stopCode *TaskStopCode `json:"stopCode,omitempty"`
	capacityProviderName *string `json:"capacityProviderName,omitempty"`
	pullStartedAt *time.Time `json:"pullStartedAt,omitempty"`
	pullStoppedAt *time.Time `json:"pullStoppedAt,omitempty"`
	startedBy *string `json:"startedBy,omitempty"`
}

// TaskDefinition represents the TaskDefinition structure
type TaskDefinition struct {
	requiresCompatibilities CompatibilityList `json:"requiresCompatibilities,omitempty"`
	cpu *string `json:"cpu,omitempty"`
	family *string `json:"family,omitempty"`
	executionRoleArn *string `json:"executionRoleArn,omitempty"`
	networkMode *NetworkMode `json:"networkMode,omitempty"`
	registeredBy *string `json:"registeredBy,omitempty"`
	ephemeralStorage *EphemeralStorage `json:"ephemeralStorage,omitempty"`
	enableFaultInjection *bool `json:"enableFaultInjection,omitempty"`
	taskDefinitionArn *string `json:"taskDefinitionArn,omitempty"`
	status *TaskDefinitionStatus `json:"status,omitempty"`
	placementConstraints *TaskDefinitionPlacementConstraints `json:"placementConstraints,omitempty"`
	runtimePlatform *RuntimePlatform `json:"runtimePlatform,omitempty"`
	ipcMode *IpcMode `json:"ipcMode,omitempty"`
	proxyConfiguration *ProxyConfiguration `json:"proxyConfiguration,omitempty"`
	registeredAt *time.Time `json:"registeredAt,omitempty"`
	taskRoleArn *string `json:"taskRoleArn,omitempty"`
	revision *int32 `json:"revision,omitempty"`
	requiresAttributes *RequiresAttributes `json:"requiresAttributes,omitempty"`
	memory *string `json:"memory,omitempty"`
	inferenceAccelerators *InferenceAccelerators `json:"inferenceAccelerators,omitempty"`
	pidMode *PidMode `json:"pidMode,omitempty"`
	deregisteredAt *time.Time `json:"deregisteredAt,omitempty"`
	containerDefinitions *ContainerDefinitions `json:"containerDefinitions,omitempty"`
	volumes VolumeList `json:"volumes,omitempty"`
	compatibilities CompatibilityList `json:"compatibilities,omitempty"`
}

// TaskDefinitionFieldList represents a list type
type TaskDefinitionFieldList []*TaskDefinitionField

// TaskDefinitionList represents a list type
type TaskDefinitionList []*TaskDefinition

// TaskDefinitionPlacementConstraint represents the TaskDefinitionPlacementConstraint structure
type TaskDefinitionPlacementConstraint struct {
	type *TaskDefinitionPlacementConstraintType `json:"type,omitempty"`
	expression *string `json:"expression,omitempty"`
}

// TaskDefinitionPlacementConstraints represents a list type
type TaskDefinitionPlacementConstraints []*TaskDefinitionPlacementConstraint

// TaskEphemeralStorage represents the TaskEphemeralStorage structure
type TaskEphemeralStorage struct {
	kmsKeyId *string `json:"kmsKeyId,omitempty"`
	sizeInGiB *int32 `json:"sizeInGiB,omitempty"`
}

// TaskFieldList represents a list type
type TaskFieldList []*TaskField

// TaskManagedEBSVolumeConfiguration represents the TaskManagedEBSVolumeConfiguration structure
type TaskManagedEBSVolumeConfiguration struct {
	iops *int32 `json:"iops,omitempty"`
	volumeType *EBSVolumeType `json:"volumeType,omitempty"`
	snapshotId *EBSSnapshotId `json:"snapshotId,omitempty"`
	throughput *int32 `json:"throughput,omitempty"`
	tagSpecifications *EBSTagSpecifications `json:"tagSpecifications,omitempty"`
	roleArn *IAMRoleArn `json:"roleArn"`
	terminationPolicy *TaskManagedEBSVolumeTerminationPolicy `json:"terminationPolicy,omitempty"`
	filesystemType *TaskFilesystemType `json:"filesystemType,omitempty"`
	encrypted *bool `json:"encrypted,omitempty"`
	kmsKeyId *EBSKMSKeyId `json:"kmsKeyId,omitempty"`
	sizeInGiB *int32 `json:"sizeInGiB,omitempty"`
	volumeInitializationRate *int32 `json:"volumeInitializationRate,omitempty"`
}

// TaskManagedEBSVolumeTerminationPolicy represents the TaskManagedEBSVolumeTerminationPolicy structure
type TaskManagedEBSVolumeTerminationPolicy struct {
	deleteOnTermination *bool `json:"deleteOnTermination"`
}

// TaskOverride represents the TaskOverride structure
type TaskOverride struct {
	executionRoleArn *string `json:"executionRoleArn,omitempty"`
	memory *string `json:"memory,omitempty"`
	taskRoleArn *string `json:"taskRoleArn,omitempty"`
	ephemeralStorage *EphemeralStorage `json:"ephemeralStorage,omitempty"`
	containerOverrides *ContainerOverrides `json:"containerOverrides,omitempty"`
	cpu *string `json:"cpu,omitempty"`
	inferenceAcceleratorOverrides *InferenceAcceleratorOverrides `json:"inferenceAcceleratorOverrides,omitempty"`
}

// TaskSet represents the TaskSet structure
type TaskSet struct {
	pendingCount *int32 `json:"pendingCount,omitempty"`
	createdAt *time.Time `json:"createdAt,omitempty"`
	serviceArn *string `json:"serviceArn,omitempty"`
	startedBy *string `json:"startedBy,omitempty"`
	externalId *string `json:"externalId,omitempty"`
	status *string `json:"status,omitempty"`
	taskDefinition *string `json:"taskDefinition,omitempty"`
	computedDesiredCount *int32 `json:"computedDesiredCount,omitempty"`
	clusterArn *string `json:"clusterArn,omitempty"`
	runningCount *int32 `json:"runningCount,omitempty"`
	updatedAt *time.Time `json:"updatedAt,omitempty"`
	launchType *LaunchType `json:"launchType,omitempty"`
	capacityProviderStrategy *CapacityProviderStrategy `json:"capacityProviderStrategy,omitempty"`
	platformVersion *string `json:"platformVersion,omitempty"`
	loadBalancers *LoadBalancers `json:"loadBalancers,omitempty"`
	serviceRegistries *ServiceRegistries `json:"serviceRegistries,omitempty"`
	id *string `json:"id,omitempty"`
	taskSetArn *string `json:"taskSetArn,omitempty"`
	scale *Scale `json:"scale,omitempty"`
	stabilityStatus *StabilityStatus `json:"stabilityStatus,omitempty"`
	stabilityStatusAt *time.Time `json:"stabilityStatusAt,omitempty"`
	platformFamily *string `json:"platformFamily,omitempty"`
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
	tags *Tags `json:"tags,omitempty"`
	fargateEphemeralStorage *DeploymentEphemeralStorage `json:"fargateEphemeralStorage,omitempty"`
}

// TaskSetFieldList represents a list type
type TaskSetFieldList []*TaskSetField

// TaskSetNotFoundException represents the TaskSetNotFoundException structure
type TaskSetNotFoundException struct {
	message *string `json:"message,omitempty"`
}

// TaskSets represents a list type
type TaskSets []*TaskSet

// TaskVolumeConfiguration represents the TaskVolumeConfiguration structure
type TaskVolumeConfiguration struct {
	name *ECSVolumeName `json:"name"`
	managedEBSVolume *TaskManagedEBSVolumeConfiguration `json:"managedEBSVolume,omitempty"`
}

// TaskVolumeConfigurations represents a list type
type TaskVolumeConfigurations []*TaskVolumeConfiguration

// Tasks represents a list type
type Tasks []*Task

// TimeoutConfiguration represents the TimeoutConfiguration structure
type TimeoutConfiguration struct {
	idleTimeoutSeconds *Duration `json:"idleTimeoutSeconds,omitempty"`
	perRequestTimeoutSeconds *Duration `json:"perRequestTimeoutSeconds,omitempty"`
}

// Tmpfs represents the Tmpfs structure
type Tmpfs struct {
	containerPath *string `json:"containerPath"`
	size *int32 `json:"size"`
	mountOptions StringList `json:"mountOptions,omitempty"`
}

// TmpfsList represents a list type
type TmpfsList []*Tmpfs

// Ulimit represents the Ulimit structure
type Ulimit struct {
	name *UlimitName `json:"name"`
	softLimit *int32 `json:"softLimit"`
	hardLimit *int32 `json:"hardLimit"`
}

// UlimitList represents a list type
type UlimitList []*Ulimit

// UnsupportedFeatureException represents the UnsupportedFeatureException structure
type UnsupportedFeatureException struct {
	message *string `json:"message,omitempty"`
}

// UntagResourceRequest represents the UntagResourceRequest structure
type UntagResourceRequest struct {
	tagKeys *TagKeys `json:"tagKeys"`
	resourceArn *string `json:"resourceArn"`
}

// UntagResourceResponse represents the UntagResourceResponse structure
type UntagResourceResponse struct {
}

// UpdateCapacityProviderRequest represents the UpdateCapacityProviderRequest structure
type UpdateCapacityProviderRequest struct {
	name *string `json:"name"`
	autoScalingGroupProvider *AutoScalingGroupProviderUpdate `json:"autoScalingGroupProvider"`
}

// UpdateCapacityProviderResponse represents the UpdateCapacityProviderResponse structure
type UpdateCapacityProviderResponse struct {
	capacityProvider *CapacityProvider `json:"capacityProvider,omitempty"`
}

// UpdateClusterRequest represents the UpdateClusterRequest structure
type UpdateClusterRequest struct {
	cluster *string `json:"cluster"`
	settings *ClusterSettings `json:"settings,omitempty"`
	configuration *ClusterConfiguration `json:"configuration,omitempty"`
	serviceConnectDefaults *ClusterServiceConnectDefaultsRequest `json:"serviceConnectDefaults,omitempty"`
}

// UpdateClusterResponse represents the UpdateClusterResponse structure
type UpdateClusterResponse struct {
	cluster *Cluster `json:"cluster,omitempty"`
}

// UpdateClusterSettingsRequest represents the UpdateClusterSettingsRequest structure
type UpdateClusterSettingsRequest struct {
	cluster *string `json:"cluster"`
	settings *ClusterSettings `json:"settings"`
}

// UpdateClusterSettingsResponse represents the UpdateClusterSettingsResponse structure
type UpdateClusterSettingsResponse struct {
	cluster *Cluster `json:"cluster,omitempty"`
}

// UpdateContainerAgentRequest represents the UpdateContainerAgentRequest structure
type UpdateContainerAgentRequest struct {
	cluster *string `json:"cluster,omitempty"`
	containerInstance *string `json:"containerInstance"`
}

// UpdateContainerAgentResponse represents the UpdateContainerAgentResponse structure
type UpdateContainerAgentResponse struct {
	containerInstance *ContainerInstance `json:"containerInstance,omitempty"`
}

// UpdateContainerInstancesStateRequest represents the UpdateContainerInstancesStateRequest structure
type UpdateContainerInstancesStateRequest struct {
	cluster *string `json:"cluster,omitempty"`
	containerInstances StringList `json:"containerInstances"`
	status *ContainerInstanceStatus `json:"status"`
}

// UpdateContainerInstancesStateResponse represents the UpdateContainerInstancesStateResponse structure
type UpdateContainerInstancesStateResponse struct {
	containerInstances *ContainerInstances `json:"containerInstances,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// UpdateInProgressException represents the UpdateInProgressException structure
type UpdateInProgressException struct {
	message *string `json:"message,omitempty"`
}

// UpdateServicePrimaryTaskSetRequest represents the UpdateServicePrimaryTaskSetRequest structure
type UpdateServicePrimaryTaskSetRequest struct {
	cluster *string `json:"cluster"`
	service *string `json:"service"`
	primaryTaskSet *string `json:"primaryTaskSet"`
}

// UpdateServicePrimaryTaskSetResponse represents the UpdateServicePrimaryTaskSetResponse structure
type UpdateServicePrimaryTaskSetResponse struct {
	taskSet *TaskSet `json:"taskSet,omitempty"`
}

// UpdateServiceRequest represents the UpdateServiceRequest structure
type UpdateServiceRequest struct {
	capacityProviderStrategy *CapacityProviderStrategy `json:"capacityProviderStrategy,omitempty"`
	enableExecuteCommand *bool `json:"enableExecuteCommand,omitempty"`
	loadBalancers *LoadBalancers `json:"loadBalancers,omitempty"`
	serviceConnectConfiguration *ServiceConnectConfiguration `json:"serviceConnectConfiguration,omitempty"`
	healthCheckGracePeriodSeconds *int32 `json:"healthCheckGracePeriodSeconds,omitempty"`
	cluster *string `json:"cluster,omitempty"`
	deploymentConfiguration *DeploymentConfiguration `json:"deploymentConfiguration,omitempty"`
	networkConfiguration *NetworkConfiguration `json:"networkConfiguration,omitempty"`
	placementConstraints *PlacementConstraints `json:"placementConstraints,omitempty"`
	placementStrategy *PlacementStrategies `json:"placementStrategy,omitempty"`
	enableECSManagedTags *bool `json:"enableECSManagedTags,omitempty"`
	volumeConfigurations *ServiceVolumeConfigurations `json:"volumeConfigurations,omitempty"`
	taskDefinition *string `json:"taskDefinition,omitempty"`
	availabilityZoneRebalancing *AvailabilityZoneRebalancing `json:"availabilityZoneRebalancing,omitempty"`
	platformVersion *string `json:"platformVersion,omitempty"`
	propagateTags *PropagateTags `json:"propagateTags,omitempty"`
	serviceRegistries *ServiceRegistries `json:"serviceRegistries,omitempty"`
	service *string `json:"service"`
	desiredCount *int32 `json:"desiredCount,omitempty"`
	forceNewDeployment *bool `json:"forceNewDeployment,omitempty"`
	vpcLatticeConfigurations *VpcLatticeConfigurations `json:"vpcLatticeConfigurations,omitempty"`
}

// UpdateServiceResponse represents the UpdateServiceResponse structure
type UpdateServiceResponse struct {
	service *Service `json:"service,omitempty"`
}

// UpdateTaskProtectionRequest represents the UpdateTaskProtectionRequest structure
type UpdateTaskProtectionRequest struct {
	expiresInMinutes *int32 `json:"expiresInMinutes,omitempty"`
	cluster *string `json:"cluster"`
	tasks StringList `json:"tasks"`
	protectionEnabled *bool `json:"protectionEnabled"`
}

// UpdateTaskProtectionResponse represents the UpdateTaskProtectionResponse structure
type UpdateTaskProtectionResponse struct {
	protectedTasks *ProtectedTasks `json:"protectedTasks,omitempty"`
	failures *Failures `json:"failures,omitempty"`
}

// UpdateTaskSetRequest represents the UpdateTaskSetRequest structure
type UpdateTaskSetRequest struct {
	scale *Scale `json:"scale"`
	cluster *string `json:"cluster"`
	service *string `json:"service"`
	taskSet *string `json:"taskSet"`
}

// UpdateTaskSetResponse represents the UpdateTaskSetResponse structure
type UpdateTaskSetResponse struct {
	taskSet *TaskSet `json:"taskSet,omitempty"`
}

// VersionInfo represents the VersionInfo structure
type VersionInfo struct {
	agentVersion *string `json:"agentVersion,omitempty"`
	agentHash *string `json:"agentHash,omitempty"`
	dockerVersion *string `json:"dockerVersion,omitempty"`
}

// Volume represents the Volume structure
type Volume struct {
	name *string `json:"name,omitempty"`
	host *HostVolumeProperties `json:"host,omitempty"`
	dockerVolumeConfiguration *DockerVolumeConfiguration `json:"dockerVolumeConfiguration,omitempty"`
	efsVolumeConfiguration *EFSVolumeConfiguration `json:"efsVolumeConfiguration,omitempty"`
	fsxWindowsFileServerVolumeConfiguration *FSxWindowsFileServerVolumeConfiguration `json:"fsxWindowsFileServerVolumeConfiguration,omitempty"`
	configuredAtLaunch *bool `json:"configuredAtLaunch,omitempty"`
}

// VolumeFrom represents the VolumeFrom structure
type VolumeFrom struct {
	sourceContainer *string `json:"sourceContainer,omitempty"`
	readOnly *bool `json:"readOnly,omitempty"`
}

// VolumeFromList represents a list type
type VolumeFromList []*VolumeFrom

// VolumeList represents a list type
type VolumeList []*Volume

// VpcLatticeConfiguration represents the VpcLatticeConfiguration structure
type VpcLatticeConfiguration struct {
	roleArn *IAMRoleArn `json:"roleArn"`
	targetGroupArn *string `json:"targetGroupArn"`
	portName *string `json:"portName"`
}

// VpcLatticeConfigurations represents a list type
type VpcLatticeConfigurations []*VpcLatticeConfiguration
