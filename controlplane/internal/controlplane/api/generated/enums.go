// Code generated by cmd/codegen. DO NOT EDIT.

package generated

// AgentUpdateStatus represents an enum type
type AgentUpdateStatus string

// Enum values for AgentUpdateStatus
const (
	AgentUpdateStatusFailed AgentUpdateStatus = "FAILED"
	AgentUpdateStatusPending AgentUpdateStatus = "PENDING"
	AgentUpdateStatusStaged AgentUpdateStatus = "STAGED"
	AgentUpdateStatusStaging AgentUpdateStatus = "STAGING"
	AgentUpdateStatusUpdated AgentUpdateStatus = "UPDATED"
	AgentUpdateStatusUpdating AgentUpdateStatus = "UPDATING"
)

// Values returns all known values for AgentUpdateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (AgentUpdateStatus) Values() []AgentUpdateStatus {
	return []AgentUpdateStatus{
		"FAILED",
		"PENDING",
		"STAGED",
		"STAGING",
		"UPDATED",
		"UPDATING",
	}
}

// ApplicationProtocol represents an enum type
type ApplicationProtocol string

// Enum values for ApplicationProtocol
const (
	ApplicationProtocolGrpc ApplicationProtocol = "grpc"
	ApplicationProtocolHttp ApplicationProtocol = "http"
	ApplicationProtocolHttp2 ApplicationProtocol = "http2"
)

// Values returns all known values for ApplicationProtocol. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ApplicationProtocol) Values() []ApplicationProtocol {
	return []ApplicationProtocol{
		"grpc",
		"http",
		"http2",
	}
}

// AssignPublicIp represents an enum type
type AssignPublicIp string

// Enum values for AssignPublicIp
const (
	AssignPublicIpDisabled AssignPublicIp = "DISABLED"
	AssignPublicIpEnabled AssignPublicIp = "ENABLED"
)

// Values returns all known values for AssignPublicIp. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (AssignPublicIp) Values() []AssignPublicIp {
	return []AssignPublicIp{
		"DISABLED",
		"ENABLED",
	}
}

// AvailabilityZoneRebalancing represents an enum type
type AvailabilityZoneRebalancing string

// Enum values for AvailabilityZoneRebalancing
const (
	AvailabilityZoneRebalancingDisabled AvailabilityZoneRebalancing = "DISABLED"
	AvailabilityZoneRebalancingEnabled AvailabilityZoneRebalancing = "ENABLED"
)

// Values returns all known values for AvailabilityZoneRebalancing. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (AvailabilityZoneRebalancing) Values() []AvailabilityZoneRebalancing {
	return []AvailabilityZoneRebalancing{
		"DISABLED",
		"ENABLED",
	}
}

// CPUArchitecture represents an enum type
type CPUArchitecture string

// Enum values for CPUArchitecture
const (
	CPUArchitectureArm64 CPUArchitecture = "ARM64"
	CPUArchitectureX8664 CPUArchitecture = "X86_64"
)

// Values returns all known values for CPUArchitecture. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (CPUArchitecture) Values() []CPUArchitecture {
	return []CPUArchitecture{
		"ARM64",
		"X86_64",
	}
}

// CapacityProviderField represents an enum type
type CapacityProviderField string

// Enum values for CapacityProviderField
const (
	CapacityProviderFieldTags CapacityProviderField = "TAGS"
)

// Values returns all known values for CapacityProviderField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (CapacityProviderField) Values() []CapacityProviderField {
	return []CapacityProviderField{
		"TAGS",
	}
}

// CapacityProviderStatus represents an enum type
type CapacityProviderStatus string

// Enum values for CapacityProviderStatus
const (
	CapacityProviderStatusActive CapacityProviderStatus = "ACTIVE"
	CapacityProviderStatusInactive CapacityProviderStatus = "INACTIVE"
)

// Values returns all known values for CapacityProviderStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (CapacityProviderStatus) Values() []CapacityProviderStatus {
	return []CapacityProviderStatus{
		"ACTIVE",
		"INACTIVE",
	}
}

// CapacityProviderUpdateStatus represents an enum type
type CapacityProviderUpdateStatus string

// Enum values for CapacityProviderUpdateStatus
const (
	CapacityProviderUpdateStatusDeleteComplete CapacityProviderUpdateStatus = "DELETE_COMPLETE"
	CapacityProviderUpdateStatusDeleteFailed CapacityProviderUpdateStatus = "DELETE_FAILED"
	CapacityProviderUpdateStatusDeleteInProgress CapacityProviderUpdateStatus = "DELETE_IN_PROGRESS"
	CapacityProviderUpdateStatusUpdateComplete CapacityProviderUpdateStatus = "UPDATE_COMPLETE"
	CapacityProviderUpdateStatusUpdateFailed CapacityProviderUpdateStatus = "UPDATE_FAILED"
	CapacityProviderUpdateStatusUpdateInProgress CapacityProviderUpdateStatus = "UPDATE_IN_PROGRESS"
)

// Values returns all known values for CapacityProviderUpdateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (CapacityProviderUpdateStatus) Values() []CapacityProviderUpdateStatus {
	return []CapacityProviderUpdateStatus{
		"DELETE_COMPLETE",
		"DELETE_FAILED",
		"DELETE_IN_PROGRESS",
		"UPDATE_COMPLETE",
		"UPDATE_FAILED",
		"UPDATE_IN_PROGRESS",
	}
}

// ClusterField represents an enum type
type ClusterField string

// Enum values for ClusterField
const (
	ClusterFieldAttachments ClusterField = "ATTACHMENTS"
	ClusterFieldConfigurations ClusterField = "CONFIGURATIONS"
	ClusterFieldSettings ClusterField = "SETTINGS"
	ClusterFieldStatistics ClusterField = "STATISTICS"
	ClusterFieldTags ClusterField = "TAGS"
)

// Values returns all known values for ClusterField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ClusterField) Values() []ClusterField {
	return []ClusterField{
		"ATTACHMENTS",
		"CONFIGURATIONS",
		"SETTINGS",
		"STATISTICS",
		"TAGS",
	}
}

// ClusterSettingName represents an enum type
type ClusterSettingName string

// Enum values for ClusterSettingName
const (
	ClusterSettingNameContainerInsights ClusterSettingName = "containerInsights"
)

// Values returns all known values for ClusterSettingName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ClusterSettingName) Values() []ClusterSettingName {
	return []ClusterSettingName{
		"containerInsights",
	}
}

// Compatibility represents an enum type
type Compatibility string

// Enum values for Compatibility
const (
	CompatibilityEc2 Compatibility = "EC2"
	CompatibilityExternal Compatibility = "EXTERNAL"
	CompatibilityFargate Compatibility = "FARGATE"
)

// Values returns all known values for Compatibility. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (Compatibility) Values() []Compatibility {
	return []Compatibility{
		"EC2",
		"EXTERNAL",
		"FARGATE",
	}
}

// Connectivity represents an enum type
type Connectivity string

// Enum values for Connectivity
const (
	ConnectivityConnected Connectivity = "CONNECTED"
	ConnectivityDisconnected Connectivity = "DISCONNECTED"
)

// Values returns all known values for Connectivity. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (Connectivity) Values() []Connectivity {
	return []Connectivity{
		"CONNECTED",
		"DISCONNECTED",
	}
}

// ContainerCondition represents an enum type
type ContainerCondition string

// Enum values for ContainerCondition
const (
	ContainerConditionComplete ContainerCondition = "COMPLETE"
	ContainerConditionHealthy ContainerCondition = "HEALTHY"
	ContainerConditionStart ContainerCondition = "START"
	ContainerConditionSuccess ContainerCondition = "SUCCESS"
)

// Values returns all known values for ContainerCondition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ContainerCondition) Values() []ContainerCondition {
	return []ContainerCondition{
		"COMPLETE",
		"HEALTHY",
		"START",
		"SUCCESS",
	}
}

// ContainerInstanceField represents an enum type
type ContainerInstanceField string

// Enum values for ContainerInstanceField
const (
	ContainerInstanceFieldContainerInstanceHealth ContainerInstanceField = "CONTAINER_INSTANCE_HEALTH"
	ContainerInstanceFieldTags ContainerInstanceField = "TAGS"
)

// Values returns all known values for ContainerInstanceField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ContainerInstanceField) Values() []ContainerInstanceField {
	return []ContainerInstanceField{
		"CONTAINER_INSTANCE_HEALTH",
		"TAGS",
	}
}

// ContainerInstanceStatus represents an enum type
type ContainerInstanceStatus string

// Enum values for ContainerInstanceStatus
const (
	ContainerInstanceStatusActive ContainerInstanceStatus = "ACTIVE"
	ContainerInstanceStatusDeregistering ContainerInstanceStatus = "DEREGISTERING"
	ContainerInstanceStatusDraining ContainerInstanceStatus = "DRAINING"
	ContainerInstanceStatusRegistering ContainerInstanceStatus = "REGISTERING"
	ContainerInstanceStatusRegistrationFailed ContainerInstanceStatus = "REGISTRATION_FAILED"
)

// Values returns all known values for ContainerInstanceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ContainerInstanceStatus) Values() []ContainerInstanceStatus {
	return []ContainerInstanceStatus{
		"ACTIVE",
		"DEREGISTERING",
		"DRAINING",
		"REGISTERING",
		"REGISTRATION_FAILED",
	}
}

// DeploymentControllerType represents an enum type
type DeploymentControllerType string

// Enum values for DeploymentControllerType
const (
	DeploymentControllerTypeCodeDeploy DeploymentControllerType = "CODE_DEPLOY"
	DeploymentControllerTypeEcs DeploymentControllerType = "ECS"
	DeploymentControllerTypeExternal DeploymentControllerType = "EXTERNAL"
)

// Values returns all known values for DeploymentControllerType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (DeploymentControllerType) Values() []DeploymentControllerType {
	return []DeploymentControllerType{
		"CODE_DEPLOY",
		"ECS",
		"EXTERNAL",
	}
}

// DeploymentRolloutState represents an enum type
type DeploymentRolloutState string

// Enum values for DeploymentRolloutState
const (
	DeploymentRolloutStateCompleted DeploymentRolloutState = "COMPLETED"
	DeploymentRolloutStateFailed DeploymentRolloutState = "FAILED"
	DeploymentRolloutStateInProgress DeploymentRolloutState = "IN_PROGRESS"
)

// Values returns all known values for DeploymentRolloutState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (DeploymentRolloutState) Values() []DeploymentRolloutState {
	return []DeploymentRolloutState{
		"COMPLETED",
		"FAILED",
		"IN_PROGRESS",
	}
}

// DesiredStatus represents an enum type
type DesiredStatus string

// Enum values for DesiredStatus
const (
	DesiredStatusPending DesiredStatus = "PENDING"
	DesiredStatusRunning DesiredStatus = "RUNNING"
	DesiredStatusStopped DesiredStatus = "STOPPED"
)

// Values returns all known values for DesiredStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (DesiredStatus) Values() []DesiredStatus {
	return []DesiredStatus{
		"PENDING",
		"RUNNING",
		"STOPPED",
	}
}

// DeviceCgroupPermission represents an enum type
type DeviceCgroupPermission string

// Enum values for DeviceCgroupPermission
const (
	DeviceCgroupPermissionMknod DeviceCgroupPermission = "mknod"
	DeviceCgroupPermissionRead DeviceCgroupPermission = "read"
	DeviceCgroupPermissionWrite DeviceCgroupPermission = "write"
)

// Values returns all known values for DeviceCgroupPermission. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (DeviceCgroupPermission) Values() []DeviceCgroupPermission {
	return []DeviceCgroupPermission{
		"mknod",
		"read",
		"write",
	}
}

// EBSResourceType represents an enum type
type EBSResourceType string

// Enum values for EBSResourceType
const (
	EBSResourceTypeVolume EBSResourceType = "volume"
)

// Values returns all known values for EBSResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (EBSResourceType) Values() []EBSResourceType {
	return []EBSResourceType{
		"volume",
	}
}

// EFSAuthorizationConfigIAM represents an enum type
type EFSAuthorizationConfigIAM string

// Enum values for EFSAuthorizationConfigIAM
const (
	EFSAuthorizationConfigIAMDisabled EFSAuthorizationConfigIAM = "DISABLED"
	EFSAuthorizationConfigIAMEnabled EFSAuthorizationConfigIAM = "ENABLED"
)

// Values returns all known values for EFSAuthorizationConfigIAM. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (EFSAuthorizationConfigIAM) Values() []EFSAuthorizationConfigIAM {
	return []EFSAuthorizationConfigIAM{
		"DISABLED",
		"ENABLED",
	}
}

// EFSTransitEncryption represents an enum type
type EFSTransitEncryption string

// Enum values for EFSTransitEncryption
const (
	EFSTransitEncryptionDisabled EFSTransitEncryption = "DISABLED"
	EFSTransitEncryptionEnabled EFSTransitEncryption = "ENABLED"
)

// Values returns all known values for EFSTransitEncryption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (EFSTransitEncryption) Values() []EFSTransitEncryption {
	return []EFSTransitEncryption{
		"DISABLED",
		"ENABLED",
	}
}

// EnvironmentFileType represents an enum type
type EnvironmentFileType string

// Enum values for EnvironmentFileType
const (
	EnvironmentFileTypeS3 EnvironmentFileType = "s3"
)

// Values returns all known values for EnvironmentFileType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (EnvironmentFileType) Values() []EnvironmentFileType {
	return []EnvironmentFileType{
		"s3",
	}
}

// ExecuteCommandLogging represents an enum type
type ExecuteCommandLogging string

// Enum values for ExecuteCommandLogging
const (
	ExecuteCommandLoggingDefault ExecuteCommandLogging = "DEFAULT"
	ExecuteCommandLoggingNone ExecuteCommandLogging = "NONE"
	ExecuteCommandLoggingOverride ExecuteCommandLogging = "OVERRIDE"
)

// Values returns all known values for ExecuteCommandLogging. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ExecuteCommandLogging) Values() []ExecuteCommandLogging {
	return []ExecuteCommandLogging{
		"DEFAULT",
		"NONE",
		"OVERRIDE",
	}
}

// FirelensConfigurationType represents an enum type
type FirelensConfigurationType string

// Enum values for FirelensConfigurationType
const (
	FirelensConfigurationTypeFluentbit FirelensConfigurationType = "fluentbit"
	FirelensConfigurationTypeFluentd FirelensConfigurationType = "fluentd"
)

// Values returns all known values for FirelensConfigurationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (FirelensConfigurationType) Values() []FirelensConfigurationType {
	return []FirelensConfigurationType{
		"fluentbit",
		"fluentd",
	}
}

// HealthStatus represents an enum type
type HealthStatus string

// Enum values for HealthStatus
const (
	HealthStatusHealthy HealthStatus = "HEALTHY"
	HealthStatusUnhealthy HealthStatus = "UNHEALTHY"
	HealthStatusUnknown HealthStatus = "UNKNOWN"
)

// Values returns all known values for HealthStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (HealthStatus) Values() []HealthStatus {
	return []HealthStatus{
		"HEALTHY",
		"UNHEALTHY",
		"UNKNOWN",
	}
}

// InstanceHealthCheckState represents an enum type
type InstanceHealthCheckState string

// Enum values for InstanceHealthCheckState
const (
	InstanceHealthCheckStateImpaired InstanceHealthCheckState = "IMPAIRED"
	InstanceHealthCheckStateInitializing InstanceHealthCheckState = "INITIALIZING"
	InstanceHealthCheckStateInsufficientData InstanceHealthCheckState = "INSUFFICIENT_DATA"
	InstanceHealthCheckStateOk InstanceHealthCheckState = "OK"
)

// Values returns all known values for InstanceHealthCheckState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (InstanceHealthCheckState) Values() []InstanceHealthCheckState {
	return []InstanceHealthCheckState{
		"IMPAIRED",
		"INITIALIZING",
		"INSUFFICIENT_DATA",
		"OK",
	}
}

// InstanceHealthCheckType represents an enum type
type InstanceHealthCheckType string

// Enum values for InstanceHealthCheckType
const (
	InstanceHealthCheckTypeContainerRuntime InstanceHealthCheckType = "CONTAINER_RUNTIME"
)

// Values returns all known values for InstanceHealthCheckType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (InstanceHealthCheckType) Values() []InstanceHealthCheckType {
	return []InstanceHealthCheckType{
		"CONTAINER_RUNTIME",
	}
}

// IpcMode represents an enum type
type IpcMode string

// Enum values for IpcMode
const (
	IpcModeHost IpcMode = "host"
	IpcModeNone IpcMode = "none"
	IpcModeTask IpcMode = "task"
)

// Values returns all known values for IpcMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (IpcMode) Values() []IpcMode {
	return []IpcMode{
		"host",
		"none",
		"task",
	}
}

// LaunchType represents an enum type
type LaunchType string

// Enum values for LaunchType
const (
	LaunchTypeEc2 LaunchType = "EC2"
	LaunchTypeExternal LaunchType = "EXTERNAL"
	LaunchTypeFargate LaunchType = "FARGATE"
)

// Values returns all known values for LaunchType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (LaunchType) Values() []LaunchType {
	return []LaunchType{
		"EC2",
		"EXTERNAL",
		"FARGATE",
	}
}

// LogDriver represents an enum type
type LogDriver string

// Enum values for LogDriver
const (
	LogDriverAwsfirelens LogDriver = "awsfirelens"
	LogDriverAwslogs LogDriver = "awslogs"
	LogDriverFluentd LogDriver = "fluentd"
	LogDriverGelf LogDriver = "gelf"
	LogDriverJournald LogDriver = "journald"
	LogDriverJsonFile LogDriver = "json-file"
	LogDriverSplunk LogDriver = "splunk"
	LogDriverSyslog LogDriver = "syslog"
)

// Values returns all known values for LogDriver. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (LogDriver) Values() []LogDriver {
	return []LogDriver{
		"awsfirelens",
		"awslogs",
		"fluentd",
		"gelf",
		"journald",
		"json-file",
		"splunk",
		"syslog",
	}
}

// ManagedAgentName represents an enum type
type ManagedAgentName string

// Enum values for ManagedAgentName
const (
	ManagedAgentNameExecutecommandagent ManagedAgentName = "ExecuteCommandAgent"
)

// Values returns all known values for ManagedAgentName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ManagedAgentName) Values() []ManagedAgentName {
	return []ManagedAgentName{
		"ExecuteCommandAgent",
	}
}

// ManagedDraining represents an enum type
type ManagedDraining string

// Enum values for ManagedDraining
const (
	ManagedDrainingDisabled ManagedDraining = "DISABLED"
	ManagedDrainingEnabled ManagedDraining = "ENABLED"
)

// Values returns all known values for ManagedDraining. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ManagedDraining) Values() []ManagedDraining {
	return []ManagedDraining{
		"DISABLED",
		"ENABLED",
	}
}

// ManagedScalingStatus represents an enum type
type ManagedScalingStatus string

// Enum values for ManagedScalingStatus
const (
	ManagedScalingStatusDisabled ManagedScalingStatus = "DISABLED"
	ManagedScalingStatusEnabled ManagedScalingStatus = "ENABLED"
)

// Values returns all known values for ManagedScalingStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ManagedScalingStatus) Values() []ManagedScalingStatus {
	return []ManagedScalingStatus{
		"DISABLED",
		"ENABLED",
	}
}

// ManagedTerminationProtection represents an enum type
type ManagedTerminationProtection string

// Enum values for ManagedTerminationProtection
const (
	ManagedTerminationProtectionDisabled ManagedTerminationProtection = "DISABLED"
	ManagedTerminationProtectionEnabled ManagedTerminationProtection = "ENABLED"
)

// Values returns all known values for ManagedTerminationProtection. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ManagedTerminationProtection) Values() []ManagedTerminationProtection {
	return []ManagedTerminationProtection{
		"DISABLED",
		"ENABLED",
	}
}

// NetworkMode represents an enum type
type NetworkMode string

// Enum values for NetworkMode
const (
	NetworkModeAwsvpc NetworkMode = "awsvpc"
	NetworkModeBridge NetworkMode = "bridge"
	NetworkModeHost NetworkMode = "host"
	NetworkModeNone NetworkMode = "none"
)

// Values returns all known values for NetworkMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (NetworkMode) Values() []NetworkMode {
	return []NetworkMode{
		"awsvpc",
		"bridge",
		"host",
		"none",
	}
}

// OSFamily represents an enum type
type OSFamily string

// Enum values for OSFamily
const (
	OSFamilyLinux OSFamily = "LINUX"
	OSFamilyWindowsServer2004Core OSFamily = "WINDOWS_SERVER_2004_CORE"
	OSFamilyWindowsServer2016Full OSFamily = "WINDOWS_SERVER_2016_FULL"
	OSFamilyWindowsServer2019Core OSFamily = "WINDOWS_SERVER_2019_CORE"
	OSFamilyWindowsServer2019Full OSFamily = "WINDOWS_SERVER_2019_FULL"
	OSFamilyWindowsServer2022Core OSFamily = "WINDOWS_SERVER_2022_CORE"
	OSFamilyWindowsServer2022Full OSFamily = "WINDOWS_SERVER_2022_FULL"
	OSFamilyWindowsServer20h2Core OSFamily = "WINDOWS_SERVER_20H2_CORE"
)

// Values returns all known values for OSFamily. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (OSFamily) Values() []OSFamily {
	return []OSFamily{
		"LINUX",
		"WINDOWS_SERVER_2004_CORE",
		"WINDOWS_SERVER_2016_FULL",
		"WINDOWS_SERVER_2019_CORE",
		"WINDOWS_SERVER_2019_FULL",
		"WINDOWS_SERVER_2022_CORE",
		"WINDOWS_SERVER_2022_FULL",
		"WINDOWS_SERVER_20H2_CORE",
	}
}

// PidMode represents an enum type
type PidMode string

// Enum values for PidMode
const (
	PidModeHost PidMode = "host"
	PidModeTask PidMode = "task"
)

// Values returns all known values for PidMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (PidMode) Values() []PidMode {
	return []PidMode{
		"host",
		"task",
	}
}

// PlacementConstraintType represents an enum type
type PlacementConstraintType string

// Enum values for PlacementConstraintType
const (
	PlacementConstraintTypeDistinctInstance PlacementConstraintType = "distinctInstance"
	PlacementConstraintTypeMemberOf PlacementConstraintType = "memberOf"
)

// Values returns all known values for PlacementConstraintType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (PlacementConstraintType) Values() []PlacementConstraintType {
	return []PlacementConstraintType{
		"distinctInstance",
		"memberOf",
	}
}

// PlacementStrategyType represents an enum type
type PlacementStrategyType string

// Enum values for PlacementStrategyType
const (
	PlacementStrategyTypeBinpack PlacementStrategyType = "binpack"
	PlacementStrategyTypeRandom PlacementStrategyType = "random"
	PlacementStrategyTypeSpread PlacementStrategyType = "spread"
)

// Values returns all known values for PlacementStrategyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (PlacementStrategyType) Values() []PlacementStrategyType {
	return []PlacementStrategyType{
		"binpack",
		"random",
		"spread",
	}
}

// PlatformDeviceType represents an enum type
type PlatformDeviceType string

// Enum values for PlatformDeviceType
const (
	PlatformDeviceTypeGpu PlatformDeviceType = "GPU"
)

// Values returns all known values for PlatformDeviceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (PlatformDeviceType) Values() []PlatformDeviceType {
	return []PlatformDeviceType{
		"GPU",
	}
}

// PropagateTags represents an enum type
type PropagateTags string

// Enum values for PropagateTags
const (
	PropagateTagsNone PropagateTags = "NONE"
	PropagateTagsService PropagateTags = "SERVICE"
	PropagateTagsTaskDefinition PropagateTags = "TASK_DEFINITION"
)

// Values returns all known values for PropagateTags. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (PropagateTags) Values() []PropagateTags {
	return []PropagateTags{
		"NONE",
		"SERVICE",
		"TASK_DEFINITION",
	}
}

// ProxyConfigurationType represents an enum type
type ProxyConfigurationType string

// Enum values for ProxyConfigurationType
const (
	ProxyConfigurationTypeAppmesh ProxyConfigurationType = "APPMESH"
)

// Values returns all known values for ProxyConfigurationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ProxyConfigurationType) Values() []ProxyConfigurationType {
	return []ProxyConfigurationType{
		"APPMESH",
	}
}

// ResourceType represents an enum type
type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeGpu ResourceType = "GPU"
	ResourceTypeInferenceAccelerator ResourceType = "InferenceAccelerator"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"GPU",
		"InferenceAccelerator",
	}
}

// ScaleUnit represents an enum type
type ScaleUnit string

// Enum values for ScaleUnit
const (
	ScaleUnitPercent ScaleUnit = "PERCENT"
)

// Values returns all known values for ScaleUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ScaleUnit) Values() []ScaleUnit {
	return []ScaleUnit{
		"PERCENT",
	}
}

// SchedulingStrategy represents an enum type
type SchedulingStrategy string

// Enum values for SchedulingStrategy
const (
	SchedulingStrategyDaemon SchedulingStrategy = "DAEMON"
	SchedulingStrategyReplica SchedulingStrategy = "REPLICA"
)

// Values returns all known values for SchedulingStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (SchedulingStrategy) Values() []SchedulingStrategy {
	return []SchedulingStrategy{
		"DAEMON",
		"REPLICA",
	}
}

// Scope represents an enum type
type Scope string

// Enum values for Scope
const (
	ScopeShared Scope = "shared"
	ScopeTask Scope = "task"
)

// Values returns all known values for Scope. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (Scope) Values() []Scope {
	return []Scope{
		"shared",
		"task",
	}
}

// ServiceDeploymentRollbackMonitorsStatus represents an enum type
type ServiceDeploymentRollbackMonitorsStatus string

// Enum values for ServiceDeploymentRollbackMonitorsStatus
const (
	ServiceDeploymentRollbackMonitorsStatusDisabled ServiceDeploymentRollbackMonitorsStatus = "DISABLED"
	ServiceDeploymentRollbackMonitorsStatusMonitoring ServiceDeploymentRollbackMonitorsStatus = "MONITORING"
	ServiceDeploymentRollbackMonitorsStatusMonitoringComplete ServiceDeploymentRollbackMonitorsStatus = "MONITORING_COMPLETE"
	ServiceDeploymentRollbackMonitorsStatusTriggered ServiceDeploymentRollbackMonitorsStatus = "TRIGGERED"
)

// Values returns all known values for ServiceDeploymentRollbackMonitorsStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ServiceDeploymentRollbackMonitorsStatus) Values() []ServiceDeploymentRollbackMonitorsStatus {
	return []ServiceDeploymentRollbackMonitorsStatus{
		"DISABLED",
		"MONITORING",
		"MONITORING_COMPLETE",
		"TRIGGERED",
	}
}

// ServiceDeploymentStatus represents an enum type
type ServiceDeploymentStatus string

// Enum values for ServiceDeploymentStatus
const (
	ServiceDeploymentStatusInProgress ServiceDeploymentStatus = "IN_PROGRESS"
	ServiceDeploymentStatusPending ServiceDeploymentStatus = "PENDING"
	ServiceDeploymentStatusRollbackFailed ServiceDeploymentStatus = "ROLLBACK_FAILED"
	ServiceDeploymentStatusRollbackInProgress ServiceDeploymentStatus = "ROLLBACK_IN_PROGRESS"
	ServiceDeploymentStatusRollbackRequested ServiceDeploymentStatus = "ROLLBACK_REQUESTED"
	ServiceDeploymentStatusRollbackSuccessful ServiceDeploymentStatus = "ROLLBACK_SUCCESSFUL"
	ServiceDeploymentStatusStopped ServiceDeploymentStatus = "STOPPED"
	ServiceDeploymentStatusStopRequested ServiceDeploymentStatus = "STOP_REQUESTED"
	ServiceDeploymentStatusSuccessful ServiceDeploymentStatus = "SUCCESSFUL"
)

// Values returns all known values for ServiceDeploymentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ServiceDeploymentStatus) Values() []ServiceDeploymentStatus {
	return []ServiceDeploymentStatus{
		"IN_PROGRESS",
		"PENDING",
		"ROLLBACK_FAILED",
		"ROLLBACK_IN_PROGRESS",
		"ROLLBACK_REQUESTED",
		"ROLLBACK_SUCCESSFUL",
		"STOPPED",
		"STOP_REQUESTED",
		"SUCCESSFUL",
	}
}

// ServiceField represents an enum type
type ServiceField string

// Enum values for ServiceField
const (
	ServiceFieldTags ServiceField = "TAGS"
)

// Values returns all known values for ServiceField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (ServiceField) Values() []ServiceField {
	return []ServiceField{
		"TAGS",
	}
}

// SettingName represents an enum type
type SettingName string

// Enum values for SettingName
const (
	SettingNameAwsvpcTrunking SettingName = "awsvpcTrunking"
	SettingNameContainerInsights SettingName = "containerInsights"
	SettingNameContainerInstanceLongArnFormat SettingName = "containerInstanceLongArnFormat"
	SettingNameDefaultLogDriverMode SettingName = "defaultLogDriverMode"
	SettingNameFargateFipsMode SettingName = "fargateFIPSMode"
	SettingNameFargateTaskRetirementWaitPeriod SettingName = "fargateTaskRetirementWaitPeriod"
	SettingNameGuardDutyActivate SettingName = "guardDutyActivate"
	SettingNameServiceLongArnFormat SettingName = "serviceLongArnFormat"
	SettingNameTagResourceAuthorization SettingName = "tagResourceAuthorization"
	SettingNameTaskLongArnFormat SettingName = "taskLongArnFormat"
)

// Values returns all known values for SettingName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (SettingName) Values() []SettingName {
	return []SettingName{
		"awsvpcTrunking",
		"containerInsights",
		"containerInstanceLongArnFormat",
		"defaultLogDriverMode",
		"fargateFIPSMode",
		"fargateTaskRetirementWaitPeriod",
		"guardDutyActivate",
		"serviceLongArnFormat",
		"tagResourceAuthorization",
		"taskLongArnFormat",
	}
}

// SettingType represents an enum type
type SettingType string

// Enum values for SettingType
const (
	SettingTypeAwsManaged SettingType = "aws_managed"
	SettingTypeUser SettingType = "user"
)

// Values returns all known values for SettingType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (SettingType) Values() []SettingType {
	return []SettingType{
		"aws_managed",
		"user",
	}
}

// SortOrder represents an enum type
type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAsc SortOrder = "ASC"
	SortOrderDesc SortOrder = "DESC"
)

// Values returns all known values for SortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"ASC",
		"DESC",
	}
}

// StabilityStatus represents an enum type
type StabilityStatus string

// Enum values for StabilityStatus
const (
	StabilityStatusStabilizing StabilityStatus = "STABILIZING"
	StabilityStatusSteadyState StabilityStatus = "STEADY_STATE"
)

// Values returns all known values for StabilityStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (StabilityStatus) Values() []StabilityStatus {
	return []StabilityStatus{
		"STABILIZING",
		"STEADY_STATE",
	}
}

// StopServiceDeploymentStopType represents an enum type
type StopServiceDeploymentStopType string

// Enum values for StopServiceDeploymentStopType
const (
	StopServiceDeploymentStopTypeAbort StopServiceDeploymentStopType = "ABORT"
	StopServiceDeploymentStopTypeRollback StopServiceDeploymentStopType = "ROLLBACK"
)

// Values returns all known values for StopServiceDeploymentStopType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (StopServiceDeploymentStopType) Values() []StopServiceDeploymentStopType {
	return []StopServiceDeploymentStopType{
		"ABORT",
		"ROLLBACK",
	}
}

// TargetType represents an enum type
type TargetType string

// Enum values for TargetType
const (
	TargetTypeContainerInstance TargetType = "container-instance"
)

// Values returns all known values for TargetType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TargetType) Values() []TargetType {
	return []TargetType{
		"container-instance",
	}
}

// TaskDefinitionFamilyStatus represents an enum type
type TaskDefinitionFamilyStatus string

// Enum values for TaskDefinitionFamilyStatus
const (
	TaskDefinitionFamilyStatusActive TaskDefinitionFamilyStatus = "ACTIVE"
	TaskDefinitionFamilyStatusAll TaskDefinitionFamilyStatus = "ALL"
	TaskDefinitionFamilyStatusInactive TaskDefinitionFamilyStatus = "INACTIVE"
)

// Values returns all known values for TaskDefinitionFamilyStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TaskDefinitionFamilyStatus) Values() []TaskDefinitionFamilyStatus {
	return []TaskDefinitionFamilyStatus{
		"ACTIVE",
		"ALL",
		"INACTIVE",
	}
}

// TaskDefinitionField represents an enum type
type TaskDefinitionField string

// Enum values for TaskDefinitionField
const (
	TaskDefinitionFieldTags TaskDefinitionField = "TAGS"
)

// Values returns all known values for TaskDefinitionField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TaskDefinitionField) Values() []TaskDefinitionField {
	return []TaskDefinitionField{
		"TAGS",
	}
}

// TaskDefinitionPlacementConstraintType represents an enum type
type TaskDefinitionPlacementConstraintType string

// Enum values for TaskDefinitionPlacementConstraintType
const (
	TaskDefinitionPlacementConstraintTypeMemberOf TaskDefinitionPlacementConstraintType = "memberOf"
)

// Values returns all known values for TaskDefinitionPlacementConstraintType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TaskDefinitionPlacementConstraintType) Values() []TaskDefinitionPlacementConstraintType {
	return []TaskDefinitionPlacementConstraintType{
		"memberOf",
	}
}

// TaskDefinitionStatus represents an enum type
type TaskDefinitionStatus string

// Enum values for TaskDefinitionStatus
const (
	TaskDefinitionStatusActive TaskDefinitionStatus = "ACTIVE"
	TaskDefinitionStatusDeleteInProgress TaskDefinitionStatus = "DELETE_IN_PROGRESS"
	TaskDefinitionStatusInactive TaskDefinitionStatus = "INACTIVE"
)

// Values returns all known values for TaskDefinitionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TaskDefinitionStatus) Values() []TaskDefinitionStatus {
	return []TaskDefinitionStatus{
		"ACTIVE",
		"DELETE_IN_PROGRESS",
		"INACTIVE",
	}
}

// TaskField represents an enum type
type TaskField string

// Enum values for TaskField
const (
	TaskFieldTags TaskField = "TAGS"
)

// Values returns all known values for TaskField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TaskField) Values() []TaskField {
	return []TaskField{
		"TAGS",
	}
}

// TaskFilesystemType represents an enum type
type TaskFilesystemType string

// Enum values for TaskFilesystemType
const (
	TaskFilesystemTypeExt3 TaskFilesystemType = "ext3"
	TaskFilesystemTypeExt4 TaskFilesystemType = "ext4"
	TaskFilesystemTypeNtfs TaskFilesystemType = "ntfs"
	TaskFilesystemTypeXfs TaskFilesystemType = "xfs"
)

// Values returns all known values for TaskFilesystemType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TaskFilesystemType) Values() []TaskFilesystemType {
	return []TaskFilesystemType{
		"ext3",
		"ext4",
		"ntfs",
		"xfs",
	}
}

// TaskSetField represents an enum type
type TaskSetField string

// Enum values for TaskSetField
const (
	TaskSetFieldTags TaskSetField = "TAGS"
)

// Values returns all known values for TaskSetField. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TaskSetField) Values() []TaskSetField {
	return []TaskSetField{
		"TAGS",
	}
}

// TaskStopCode represents an enum type
type TaskStopCode string

// Enum values for TaskStopCode
const (
	TaskStopCodeEssentialContainerExited TaskStopCode = "EssentialContainerExited"
	TaskStopCodeServiceSchedulerInitiated TaskStopCode = "ServiceSchedulerInitiated"
	TaskStopCodeSpotInterruption TaskStopCode = "SpotInterruption"
	TaskStopCodeTaskFailedToStart TaskStopCode = "TaskFailedToStart"
	TaskStopCodeTerminationNotice TaskStopCode = "TerminationNotice"
	TaskStopCodeUserInitiated TaskStopCode = "UserInitiated"
)

// Values returns all known values for TaskStopCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TaskStopCode) Values() []TaskStopCode {
	return []TaskStopCode{
		"EssentialContainerExited",
		"ServiceSchedulerInitiated",
		"SpotInterruption",
		"TaskFailedToStart",
		"TerminationNotice",
		"UserInitiated",
	}
}

// TransportProtocol represents an enum type
type TransportProtocol string

// Enum values for TransportProtocol
const (
	TransportProtocolTcp TransportProtocol = "tcp"
	TransportProtocolUdp TransportProtocol = "udp"
)

// Values returns all known values for TransportProtocol. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (TransportProtocol) Values() []TransportProtocol {
	return []TransportProtocol{
		"tcp",
		"udp",
	}
}

// UlimitName represents an enum type
type UlimitName string

// Enum values for UlimitName
const (
	UlimitNameCore UlimitName = "core"
	UlimitNameCpu UlimitName = "cpu"
	UlimitNameData UlimitName = "data"
	UlimitNameFsize UlimitName = "fsize"
	UlimitNameLocks UlimitName = "locks"
	UlimitNameMemlock UlimitName = "memlock"
	UlimitNameMsgqueue UlimitName = "msgqueue"
	UlimitNameNice UlimitName = "nice"
	UlimitNameNofile UlimitName = "nofile"
	UlimitNameNproc UlimitName = "nproc"
	UlimitNameRss UlimitName = "rss"
	UlimitNameRtprio UlimitName = "rtprio"
	UlimitNameRttime UlimitName = "rttime"
	UlimitNameSigpending UlimitName = "sigpending"
	UlimitNameStack UlimitName = "stack"
)

// Values returns all known values for UlimitName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (UlimitName) Values() []UlimitName {
	return []UlimitName{
		"core",
		"cpu",
		"data",
		"fsize",
		"locks",
		"memlock",
		"msgqueue",
		"nice",
		"nofile",
		"nproc",
		"rss",
		"rtprio",
		"rttime",
		"sigpending",
		"stack",
	}
}

// VersionConsistency represents an enum type
type VersionConsistency string

// Enum values for VersionConsistency
const (
	VersionConsistencyDisabled VersionConsistency = "disabled"
	VersionConsistencyEnabled VersionConsistency = "enabled"
)

// Values returns all known values for VersionConsistency. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
func (VersionConsistency) Values() []VersionConsistency {
	return []VersionConsistency{
		"disabled",
		"enabled",
	}
}
