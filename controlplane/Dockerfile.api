# Build stage for Go application
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git make gcc musl-dev sqlite-dev duckdb

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the application without Web UI
RUN make build

# Runtime stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache ca-certificates curl wget duckdb

# Create non-root user
RUN addgroup -g 1000 -S kecs && \
    adduser -u 1000 -S kecs -G kecs

# Create data directory
RUN mkdir -p /data && \
    chown -R kecs:kecs /data

# Copy binary from builder
COPY --from=builder /app/bin/kecs /usr/local/bin/kecs

# Expose ports
EXPOSE 8080 8081

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:8081/health || exit 1

# Run as non-root user
USER kecs

# Set default command
ENTRYPOINT ["/usr/local/bin/kecs"]
CMD ["server", "--webui=false"]