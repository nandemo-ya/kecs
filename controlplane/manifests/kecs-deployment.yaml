apiVersion: apps/v1
kind: Deployment
metadata:
  name: kecs-controlplane
  namespace: kecs-system
  labels:
    app: kecs-controlplane
    kecs.dev/component: "controlplane"
    kecs.dev/version: "v2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kecs-controlplane
  template:
    metadata:
      labels:
        app: kecs-controlplane
        kecs.dev/component: "controlplane"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: kecs-controlplane
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532
      containers:
      - name: controlplane
        image: ghcr.io/nandemo-ya/kecs:latest
        imagePullPolicy: IfNotPresent
        command: ["/controlplane", "server"]
        ports:
        - name: api
          containerPort: 8080
          protocol: TCP
        - name: admin
          containerPort: 8081
          protocol: TCP
        env:
        - name: KECS_MODE
          value: "in-cluster"
        - name: KECS_DATA_DIR
          value: "/data"
        - name: KECS_CONFIG_FILE
          value: "/config/config.yaml"
        - name: KECS_SKIP_DOCKER_CHECK
          value: "true"
        - name: KECS_KUBERNETES_MODE
          value: "true"
        - name: KECS_SECURITY_ACKNOWLEDGED
          value: "true"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: data
          mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: admin
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      volumes:
      - name: config
        configMap:
          name: kecs-config
      - name: data
        persistentVolumeClaim:
          claimName: kecs-data